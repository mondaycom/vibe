# Notice that for this workflow to run properly, you need to first run the build-and-upload workflow.
# This is because the test workflow depends on the build-and-upload workflow to download the builds from a previous job in the same workflow run.

name: Test & Lint

on:
  workflow_call:
    inputs:
      has_changes:
        description: Whether there are any changes in the monorepo.
        type: string
        required: true
    secrets:
      npm_token:
        required: true

jobs:
  checks:
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "Test"
            command: "test"
          - name: "Lint"
            command: "lint"
          - name: "Stylelint"
            command: "stylelint"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Run Setup
        uses: ./.github/actions/setup
        with:
          npm_token: ${{ secrets.npm_token }}
      - id: determine-since-flag
        uses: ./.github/actions/determine-lerna-since-flag
      - uses: ./.github/actions/download-builds
        if: ${{ inputs.has_changes == 'true' }}
      - name: Run ${{ matrix.name }}
        if: ${{ inputs.has_changes == 'true' }}
        shell: bash
        env:
          SINCE_FLAG: ${{ steps.determine-since-flag.outputs.since_flag }}
        run: yarn lerna run ${{ matrix.command }} $SINCE_FLAG

  testkit-tests:
    name: Testkit Unit Tests
    if: ${{ inputs.has_changes == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Run Setup
        uses: ./.github/actions/setup
        with:
          npm_token: ${{ secrets.npm_token }}
      - id: determine-since-flag
        uses: ./.github/actions/determine-lerna-since-flag
      - uses: ./.github/actions/download-builds
      - name: Get installed Playwright version
        id: playwright-version
        run: echo "version=$(npm list @playwright/test --depth=0 --json | jq -r '.dependencies."@playwright/test".version')" >> $GITHUB_OUTPUT
      - name: Cache playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.version }}
      - name: Configure APT for reliability
        run: |
          sudo tee -a /etc/apt/apt.conf.d/99-ci-reliability > /dev/null <<EOF
          APT::Acquire::Retries "3";
          APT::Acquire::http::Timeout "30";
          APT::Acquire::https::Timeout "30";
          APT::Acquire::ftp::Timeout "30";
          APT::Get::Assume-Yes "true";
          EOF
      - name: Install playwright browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        env:
          PLAYWRIGHT_DOWNLOAD_CONNECTION_TIMEOUT: 120000
          NEEDRESTART_MODE: a
          DEBIAN_FRONTEND: noninteractive
        run: npx playwright install --with-deps
      - name: Install playwright browsers (cache hit - only deps)
        if: steps.playwright-cache.outputs.cache-hit == 'true'
        env:
          NEEDRESTART_MODE: a
          DEBIAN_FRONTEND: noninteractive
        run: npx playwright install-deps
      - name: Run Unit Tests
        env:
          SINCE_FLAG: ${{ steps.determine-since-flag.outputs.since_flag }}
          CI: true
          WORKERS: "50%"
        shell: bash
        run: yarn lerna run test:changed $SINCE_FLAG --scope "@vibe/testkit"
      - uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: test-results
          path: |
            packages/testkit/reports
            packages/testkit/test-results
