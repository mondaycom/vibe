"use strict";(globalThis.webpackChunk_vibe_core=globalThis.webpackChunk_vibe_core||[]).push([[4628],{"./src/components/ProgressBars/LinearProgressBar/__stories__/LinearProgressBar.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{MultiProgressBar:()=>MultiProgressBar,Overview:()=>Overview,ProgressBarAsACounter:()=>ProgressBarAsACounter,ProgressBarAsLoadingIndicator:()=>ProgressBarAsLoadingIndicator,Regular:()=>Regular,WithSecondaryValue:()=>WithSecondaryValue,__namedExportsOrder:()=>__namedExportsOrder,default:()=>LinearProgressBar_stories_LinearProgressBar_stories});var react=__webpack_require__("../../node_modules/react/index.js"),LinearProgressBar=__webpack_require__("./src/components/ProgressBars/LinearProgressBar/LinearProgressBar.tsx"),createStoryMetaSettingsDecorator=__webpack_require__("./src/storybook/functions/createStoryMetaSettingsDecorator.ts"),Info=__webpack_require__("../icons/dist/react/Info.js"),Icon=__webpack_require__("./src/components/Icon/Icon.tsx"),BreadcrumbItem=__webpack_require__("./src/components/BreadcrumbsBar/BreadcrumbItem/BreadcrumbItem.tsx"),BreadcrumbsBar=__webpack_require__("./src/components/BreadcrumbsBar/BreadcrumbsBar.tsx"),injectStylesIntoStyleTag=__webpack_require__("../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("../../node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("../../node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("../../node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("../../node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),LinearProgressBar_stories=__webpack_require__("../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[16].use[1]!../../node_modules/resolve-url-loader/index.js!../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[16].use[3]!./src/components/ProgressBars/LinearProgressBar/__stories__/LinearProgressBar.stories.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(LinearProgressBar_stories.A,options);LinearProgressBar_stories.A&&LinearProgressBar_stories.A.locals&&LinearProgressBar_stories.A.locals;var Flex=__webpack_require__("./src/components/Flex/Flex.tsx"),jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var metaSettings=(0,createStoryMetaSettingsDecorator.B)({component:LinearProgressBar.A});const LinearProgressBar_stories_LinearProgressBar_stories={parameters:{storySource:{source:'import React from "react";\nimport LinearProgressBar, { LinearProgressBarProps } from "../LinearProgressBar";\nimport { useMemo } from "react";\nimport { createStoryMetaSettingsDecorator } from "../../../../storybook/functions/createStoryMetaSettingsDecorator";\nimport { Info } from "@vibe/icons";\nimport Icon from "../../../Icon/Icon";\nimport BreadcrumbItem from "../../../BreadcrumbsBar/BreadcrumbItem/BreadcrumbItem";\nimport BreadcrumbsBar from "../../../BreadcrumbsBar/BreadcrumbsBar";\nimport "./LinearProgressBar.stories.scss";\nimport Flex from "../../../Flex/Flex";\n\nconst metaSettings = createStoryMetaSettingsDecorator({\n  component: LinearProgressBar\n});\n\nexport default {\n  title: "Components/LinearProgressBar",\n  component: LinearProgressBar,\n  argTypes: metaSettings.argTypes,\n  decorators: metaSettings.decorators\n};\n\nconst lineProgressBarTemplate = (args: LinearProgressBarProps) => {\n  return <LinearProgressBar className="linear-progress-bar_small-wrapper" {...args} />;\n};\n\nexport const Overview = {\n  render: lineProgressBarTemplate.bind({}),\n  name: "Overview",\n\n  args: {\n    value: 20,\n    size: "large"\n  },\n  parameters: {\n    docs: {\n      liveEdit: {\n        isEnabled: false\n      }\n    }\n  }\n};\n\nexport const Regular = {\n  render: () => (\n    <Flex direction="column" gap="large">\n      <Flex direction="column" gap="small" align="start" style={{ width: "400px" }}>\n        <LinearProgressBar indicateProgress value={30} size="large" />\n        With label\n      </Flex>\n      <Flex direction="column" gap="small" align="start" style={{ width: "400px" }}>\n        <LinearProgressBar value={30} size="large" />\n        Without label\n      </Flex>\n    </Flex>\n  ),\n\n  name: "Regular"\n};\n\nexport const WithSecondaryValue = {\n  render: () => (\n    <LinearProgressBar\n      className="linear-progress-bar_small-wrapper"\n      value={50}\n      indicateProgress\n      valueSecondary={65}\n      size="large"\n    />\n  ),\n\n  name: "With secondary value"\n};\n\nexport const MultiProgressBar = {\n  render: () => {\n    const multiValues = useMemo(\n      () => [\n        {\n          value: 25,\n          color: "var(--primary-color)"\n        },\n        {\n          value: 75,\n          color: "var(--warning-color)"\n        },\n        {\n          value: 100,\n          color: "var(--positive-color)"\n        }\n      ],\n      []\n    );\n\n    return (\n      <LinearProgressBar\n        className="linear-progress-bar_big-wrapper"\n        value={25}\n        size="large"\n        indicateProgress\n        multi\n        multiValues={multiValues}\n      />\n    );\n  },\n\n  name: "Multi progress bar"\n};\n\nexport const ProgressBarAsACounter = {\n  render: () => (\n    <div className="linear-progress-bar_box">\n      <h4>Loading files</h4>\n      <div className="linear-progress-bar_inline-wrapper">\n        <div className="linear-progress-bar_icon-wrapper">\n          Items\n          <Icon icon={Info} />\n        </div>\n        <span>142/200</span>\n      </div>\n      <LinearProgressBar value={71} size="large" barStyle="positive" />\n    </div>\n  ),\n\n  name: "Progress bar as a counter"\n};\n\nexport const ProgressBarAsLoadingIndicator = {\n  render: () => (\n    <div className="linear-progress-bar_box-wrapper">\n      <div className="linear-progress-bar_row">\n        <div className="linear-progress-bar_img" />\n        <div className="linear-progress-bar_aside">\n          <b>Frame 697.pg</b>\n          <BreadcrumbsBar type="indication" className="linear-progress-bar_breadcrumbs">\n            <BreadcrumbItem text="Hadas Test" />\n            <BreadcrumbItem text="Activity 6" />\n          </BreadcrumbsBar>\n          <div className="linear-progress-bar_inline-wrapper">\n            <span>2KB</span>\n            <span>Saving...</span>\n          </div>\n        </div>\n      </div>\n      <LinearProgressBar value={71} />\n    </div>\n  ),\n\n  name: "Progress bar as loading indicator"\n};\n',locationsMap:{overview:{startLoc:{col:24,line:27},endLoc:{col:1,line:42},startBody:{col:24,line:27},endBody:{col:1,line:42}},regular:{startLoc:{col:23,line:44},endLoc:{col:1,line:59},startBody:{col:23,line:44},endBody:{col:1,line:59}},"with-secondary-value":{startLoc:{col:34,line:61},endLoc:{col:1,line:73},startBody:{col:34,line:61},endBody:{col:1,line:73}},"multi-progress-bar":{startLoc:{col:32,line:75},endLoc:{col:1,line:108},startBody:{col:32,line:75},endBody:{col:1,line:108}},"progress-bar-as-a-counter":{startLoc:{col:37,line:110},endLoc:{col:1,line:126},startBody:{col:37,line:110},endBody:{col:1,line:126}},"progress-bar-as-loading-indicator":{startLoc:{col:45,line:128},endLoc:{col:1,line:150},startBody:{col:45,line:128},endBody:{col:1,line:150}}}}},title:"Components/LinearProgressBar",component:LinearProgressBar.A,argTypes:metaSettings.argTypes,decorators:metaSettings.decorators};var lineProgressBarTemplate=function lineProgressBarTemplate(args){return(0,jsx_runtime.jsx)(LinearProgressBar.A,function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}({className:"linear-progress-bar_small-wrapper"},args))};lineProgressBarTemplate.displayName="lineProgressBarTemplate";var Overview={render:lineProgressBarTemplate.bind({}),name:"Overview",args:{value:20,size:"large"},parameters:{docs:{liveEdit:{isEnabled:!1}}}},Regular={render:function render(){return(0,jsx_runtime.jsxs)(Flex.A,{direction:"column",gap:"large",children:[(0,jsx_runtime.jsxs)(Flex.A,{direction:"column",gap:"small",align:"start",style:{width:"400px"},children:[(0,jsx_runtime.jsx)(LinearProgressBar.A,{indicateProgress:!0,value:30,size:"large"}),"With label"]}),(0,jsx_runtime.jsxs)(Flex.A,{direction:"column",gap:"small",align:"start",style:{width:"400px"},children:[(0,jsx_runtime.jsx)(LinearProgressBar.A,{value:30,size:"large"}),"Without label"]})]})},name:"Regular"},WithSecondaryValue={render:function render(){return(0,jsx_runtime.jsx)(LinearProgressBar.A,{className:"linear-progress-bar_small-wrapper",value:50,indicateProgress:!0,valueSecondary:65,size:"large"})},name:"With secondary value"},MultiProgressBar={render:function render(){var multiValues=(0,react.useMemo)((function(){return[{value:25,color:"var(--primary-color)"},{value:75,color:"var(--warning-color)"},{value:100,color:"var(--positive-color)"}]}),[]);return(0,jsx_runtime.jsx)(LinearProgressBar.A,{className:"linear-progress-bar_big-wrapper",value:25,size:"large",indicateProgress:!0,multi:!0,multiValues})},name:"Multi progress bar"},ProgressBarAsACounter={render:function render(){return(0,jsx_runtime.jsxs)("div",{className:"linear-progress-bar_box",children:[(0,jsx_runtime.jsx)("h4",{children:"Loading files"}),(0,jsx_runtime.jsxs)("div",{className:"linear-progress-bar_inline-wrapper",children:[(0,jsx_runtime.jsxs)("div",{className:"linear-progress-bar_icon-wrapper",children:["Items",(0,jsx_runtime.jsx)(Icon.A,{icon:Info.A})]}),(0,jsx_runtime.jsx)("span",{children:"142/200"})]}),(0,jsx_runtime.jsx)(LinearProgressBar.A,{value:71,size:"large",barStyle:"positive"})]})},name:"Progress bar as a counter"},ProgressBarAsLoadingIndicator={render:function render(){return(0,jsx_runtime.jsxs)("div",{className:"linear-progress-bar_box-wrapper",children:[(0,jsx_runtime.jsxs)("div",{className:"linear-progress-bar_row",children:[(0,jsx_runtime.jsx)("div",{className:"linear-progress-bar_img"}),(0,jsx_runtime.jsxs)("div",{className:"linear-progress-bar_aside",children:[(0,jsx_runtime.jsx)("b",{children:"Frame 697.pg"}),(0,jsx_runtime.jsxs)(BreadcrumbsBar.A,{type:"indication",className:"linear-progress-bar_breadcrumbs",children:[(0,jsx_runtime.jsx)(BreadcrumbItem.A,{text:"Hadas Test"}),(0,jsx_runtime.jsx)(BreadcrumbItem.A,{text:"Activity 6"})]}),(0,jsx_runtime.jsxs)("div",{className:"linear-progress-bar_inline-wrapper",children:[(0,jsx_runtime.jsx)("span",{children:"2KB"}),(0,jsx_runtime.jsx)("span",{children:"Saving..."})]})]})]}),(0,jsx_runtime.jsx)(LinearProgressBar.A,{value:71})]})},name:"Progress bar as loading indicator"};Overview.parameters={...Overview.parameters,docs:{...Overview.parameters?.docs,source:{originalSource:'{\n  render: lineProgressBarTemplate.bind({}),\n  name: "Overview",\n  args: {\n    value: 20,\n    size: "large"\n  },\n  parameters: {\n    docs: {\n      liveEdit: {\n        isEnabled: false\n      }\n    }\n  }\n}',...Overview.parameters?.docs?.source}}},Regular.parameters={...Regular.parameters,docs:{...Regular.parameters?.docs,source:{originalSource:'{\n  render: () => <Flex direction="column" gap="large">\n      <Flex direction="column" gap="small" align="start" style={{\n      width: "400px"\n    }}>\n        <LinearProgressBar indicateProgress value={30} size="large" />\n        With label\n      </Flex>\n      <Flex direction="column" gap="small" align="start" style={{\n      width: "400px"\n    }}>\n        <LinearProgressBar value={30} size="large" />\n        Without label\n      </Flex>\n    </Flex>,\n  name: "Regular"\n}',...Regular.parameters?.docs?.source}}},WithSecondaryValue.parameters={...WithSecondaryValue.parameters,docs:{...WithSecondaryValue.parameters?.docs,source:{originalSource:'{\n  render: () => <LinearProgressBar className="linear-progress-bar_small-wrapper" value={50} indicateProgress valueSecondary={65} size="large" />,\n  name: "With secondary value"\n}',...WithSecondaryValue.parameters?.docs?.source}}},MultiProgressBar.parameters={...MultiProgressBar.parameters,docs:{...MultiProgressBar.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const multiValues = useMemo(() => [{\n      value: 25,\n      color: "var(--primary-color)"\n    }, {\n      value: 75,\n      color: "var(--warning-color)"\n    }, {\n      value: 100,\n      color: "var(--positive-color)"\n    }], []);\n    return <LinearProgressBar className="linear-progress-bar_big-wrapper" value={25} size="large" indicateProgress multi multiValues={multiValues} />;\n  },\n  name: "Multi progress bar"\n}',...MultiProgressBar.parameters?.docs?.source}}},ProgressBarAsACounter.parameters={...ProgressBarAsACounter.parameters,docs:{...ProgressBarAsACounter.parameters?.docs,source:{originalSource:'{\n  render: () => <div className="linear-progress-bar_box">\n      <h4>Loading files</h4>\n      <div className="linear-progress-bar_inline-wrapper">\n        <div className="linear-progress-bar_icon-wrapper">\n          Items\n          <Icon icon={Info} />\n        </div>\n        <span>142/200</span>\n      </div>\n      <LinearProgressBar value={71} size="large" barStyle="positive" />\n    </div>,\n  name: "Progress bar as a counter"\n}',...ProgressBarAsACounter.parameters?.docs?.source}}},ProgressBarAsLoadingIndicator.parameters={...ProgressBarAsLoadingIndicator.parameters,docs:{...ProgressBarAsLoadingIndicator.parameters?.docs,source:{originalSource:'{\n  render: () => <div className="linear-progress-bar_box-wrapper">\n      <div className="linear-progress-bar_row">\n        <div className="linear-progress-bar_img" />\n        <div className="linear-progress-bar_aside">\n          <b>Frame 697.pg</b>\n          <BreadcrumbsBar type="indication" className="linear-progress-bar_breadcrumbs">\n            <BreadcrumbItem text="Hadas Test" />\n            <BreadcrumbItem text="Activity 6" />\n          </BreadcrumbsBar>\n          <div className="linear-progress-bar_inline-wrapper">\n            <span>2KB</span>\n            <span>Saving...</span>\n          </div>\n        </div>\n      </div>\n      <LinearProgressBar value={71} />\n    </div>,\n  name: "Progress bar as loading indicator"\n}',...ProgressBarAsLoadingIndicator.parameters?.docs?.source}}};const __namedExportsOrder=["Overview","Regular","WithSecondaryValue","MultiProgressBar","ProgressBarAsACounter","ProgressBarAsLoadingIndicator"]},"../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[16].use[1]!../../node_modules/resolve-url-loader/index.js!../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[16].use[3]!./src/components/ProgressBars/LinearProgressBar/__stories__/LinearProgressBar.stories.scss":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/css-loader/dist/runtime/api.js"),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__),_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/css-loader/dist/runtime/getUrl.js"),_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__),___CSS_LOADER_URL_IMPORT_0___=new URL(__webpack_require__("./src/components/ProgressBars/LinearProgressBar/__stories__/assets/Logo.png"),__webpack_require__.b),___CSS_LOADER_EXPORT___=_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()),___CSS_LOADER_URL_REPLACEMENT_0___=_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_0___);___CSS_LOADER_EXPORT___.push([module.id,`.linear-progress-bar_small-wrapper{width:400px}.linear-progress-bar_big-wrapper{width:600px}.linear-progress-bar_inline-wrapper{display:flex;align-items:space-between;justify-content:space-between;padding:14px 0 4px}.linear-progress-bar_dialog-wrapper{width:254px;height:124px;padding:20px 14px;display:flex;flex-direction:column}.linear-progress-bar_box{width:200px;padding:0 20px 10px}.linear-progress-bar_icon-wrapper{display:flex;align-items:center;justify-content:center;gap:2px}.linear-progress-bar_row-wrapper{display:flex;flex-flow:row nowrap;align-items:center;padding:0}.linear-progress-bar_title{width:80px}.linear-progress-bar_img{width:80px;height:80px;background-image:url(${___CSS_LOADER_URL_REPLACEMENT_0___});background-position:center;background-size:contain;background-repeat:no-repeat}.linear-progress-bar_box-wrapper{display:flex;width:410px;flex-direction:column;border:1px solid;border-color:var(--sb-layout-border-color);padding:16px}.linear-progress-bar_aside{display:flex;flex-direction:column;width:400px;padding-left:10px}.linear-progress-bar_row{display:flex}.linear-progress-bar_breadcrumbs{margin:-12px -46px -20px}.linear-progress-bar_block{display:flex;flex-direction:column;gap:8px}.linear-progress-bar_column{display:flex;flex-direction:column;gap:40px}`,"",{version:3,sources:["webpack://./src/components/ProgressBars/LinearProgressBar/__stories__/LinearProgressBar.stories.scss"],names:[],mappings:"AACE,mCACE,WAAA,CAGF,iCACE,WAAA,CAGF,oCACE,YAAA,CACA,yBAAA,CACA,6BAAA,CACA,kBAAA,CAGF,oCACE,WAAA,CACA,YAAA,CACA,iBAAA,CACA,YAAA,CACA,qBAAA,CAGF,yBACE,WAAA,CACA,mBAAA,CAGF,kCACE,YAAA,CACA,kBAAA,CACA,sBAAA,CACA,OAAA,CAGF,iCACE,YAAA,CACA,oBAAA,CACA,kBAAA,CACA,SAAA,CAGF,2BACE,UAAA,CAGF,yBACE,UAAA,CACA,WAAA,CACA,wDAAA,CACA,0BAAA,CACA,uBAAA,CACA,2BAAA,CAGF,iCACE,YAAA,CACA,WAAA,CACA,qBAAA,CACA,gBAAA,CACA,0CAAA,CACA,YAAA,CAGF,2BACE,YAAA,CACA,qBAAA,CACA,WAAA,CACA,iBAAA,CAGF,yBACE,YAAA,CAGF,iCACE,wBAAA,CAGF,2BACE,YAAA,CACA,qBAAA,CACA,OAAA,CAGF,4BACE,YAAA,CACA,qBAAA,CACA,QAAA",sourcesContent:['.linear-progress-bar {\n  &_small-wrapper {\n    width: 400px;\n  }\n\n  &_big-wrapper {\n    width: 600px;\n  }\n\n  &_inline-wrapper {\n    display: flex;\n    align-items: space-between;\n    justify-content: space-between;\n    padding: 14px 0 4px;\n  }\n\n  &_dialog-wrapper {\n    width: 254px;\n    height: 124px;\n    padding: 20px 14px;\n    display: flex;\n    flex-direction: column;\n  }\n\n  &_box {\n    width: 200px;\n    padding: 0 20px 10px;\n  }\n\n  &_icon-wrapper {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 2px;\n  }\n\n  &_row-wrapper {\n    display: flex;\n    flex-flow: row nowrap;\n    align-items: center;\n    padding: 0;\n  }\n\n  &_title {\n    width: 80px;\n  }\n\n  &_img {\n    width: 80px;\n    height: 80px;\n    background-image: url("./assets/Logo.png");\n    background-position: center;\n    background-size: contain;\n    background-repeat: no-repeat;\n  }\n\n  &_box-wrapper {\n    display: flex;\n    width: 410px;\n    flex-direction: column;\n    border: 1px solid;\n    border-color: var(--sb-layout-border-color);\n    padding: 16px;\n  }\n\n  &_aside {\n    display: flex;\n    flex-direction: column;\n    width: 400px;\n    padding-left: 10px;\n  }\n\n  &_row {\n    display: flex;\n  }\n\n  &_breadcrumbs {\n    margin: -12px -46px -20px;\n  }\n\n  &_block {\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n  }\n\n  &_column {\n    display: flex;\n    flex-direction: column;\n    gap: 40px;\n  }\n}\n'],sourceRoot:""}]);const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./src/components/ProgressBars/LinearProgressBar/__stories__/assets/Logo.png":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__.p+"static/media/Logo.e6823aa8.png"}}]);