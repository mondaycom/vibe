"use strict";(globalThis.webpackChunk_vibe_core=globalThis.webpackChunk_vibe_core||[]).push([[6575,4537],{"../../node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{BN:()=>MDXContext,RP:()=>useMDXComponents,gz:()=>withMDXComponents,xA:()=>MDXProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./src/components/EmptyState/__stories__/EmptyState.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ActionsComparison:()=>ActionsComparison,Compact:()=>Compact,Default:()=>Default,Overview:()=>Overview,WithActionElementProps:()=>WithActionElementProps,WithAndWithoutTitleComparison:()=>WithAndWithoutTitleComparison,WithButtonSupportingAction:()=>WithButtonSupportingAction,WithDisabledActions:()=>WithDisabledActions,WithLinkOnly:()=>WithLinkOnly,WithTwoButtons:()=>WithTwoButtons,WithoutTitle:()=>WithoutTitle,__namedExportsOrder:()=>__namedExportsOrder,default:()=>EmptyState_stories});__webpack_require__("../../node_modules/react/index.js");var EmptyState=__webpack_require__("./src/components/EmptyState/EmptyState.tsx");const image_namespaceObject=__webpack_require__.p+"static/media/image.58816df3.png";var Update=__webpack_require__("../icons/dist/react/Update.js"),Download=__webpack_require__("../icons/dist/react/Download.js"),Flex=__webpack_require__("./src/components/Flex/Flex.tsx"),createStoryMetaSettingsDecorator=__webpack_require__("./src/storybook/functions/createStoryMetaSettingsDecorator.ts"),Button=__webpack_require__("./src/components/Button/Button.tsx"),Link=__webpack_require__("./src/components/Link/Link.tsx"),jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var metaSettings=(0,createStoryMetaSettingsDecorator.B)({component:EmptyState.A});const EmptyState_stories={title:"Components/EmptyState",component:EmptyState.A,argTypes:{title:{control:"text",description:"Optional title for the empty state"},description:{control:"text",description:"Required description text explaining the empty state"},visual:{control:"object",description:"Optional visual element like image, animation, video, or illustration"},layout:{control:"select",options:["default","compact"],description:"Layout style of the empty state"},mainAction:{control:"object",description:"Main action button configuration"},supportingAction:{control:"object",description:"Supporting action (link or tertiary button) configuration"}},decorators:metaSettings.decorators};var Overview={render:function render(args){return(0,jsx_runtime.jsx)(EmptyState.A,_objectSpread({title:"The title should be concise and reflect the purpose",description:"This optional paragraph should be use to extend the title. Keep it short and to the point. For longer texts add a link below.",visual:(0,jsx_runtime.jsx)("img",{src:image_namespaceObject,alt:"No items found",width:280,height:184}),mainAction:{text:"Main Action",onClick:function onClick(){console.log("Main action clicked")}},supportingAction:{text:"Read more",href:"#",onClick:function onClick(){console.log("Supporting action clicked")}}},args))},name:"Overview",args:{},parameters:{docs:{liveEdit:{isEnabled:!1}}}},Default={render:function render(args){return(0,jsx_runtime.jsx)(EmptyState.A,_objectSpread({title:"Visualize data from multiple boards",description:"Use charts, timelines, and other widgets to see your data clearly.",visual:(0,jsx_runtime.jsx)("img",{src:image_namespaceObject,alt:"No items found",width:280,height:184}),mainAction:{text:"Add your first widget",onClick:function onClick(){console.log("Main action clicked")}},supportingAction:{text:"Read more",href:"#",onClick:function onClick(){console.log("Supporting action clicked")}}},args))},name:"Default",args:{},parameters:{docs:{liveEdit:{isEnabled:!1}}}},WithoutTitle={render:function render(args){return(0,jsx_runtime.jsx)(EmptyState.A,_objectSpread({description:"No data available yet. Add some items to get started.",visual:(0,jsx_runtime.jsx)("img",{src:image_namespaceObject,alt:"No data available",width:280,height:184}),mainAction:{text:"Add item",onClick:function onClick(){console.log("Main action clicked")}},supportingAction:{text:"Read more",href:"#",onClick:function onClick(){console.log("Supporting action clicked")}}},args))},name:"Without title"},Compact={render:function render(args){return(0,jsx_runtime.jsx)(EmptyState.A,_objectSpread({title:"Visualize data from multiple boards",description:"Use charts, timelines, and other widgets to see your data clearly.",visual:(0,jsx_runtime.jsx)("img",{src:image_namespaceObject,alt:"No notifications",width:280,height:184}),layout:"compact",mainAction:{text:"Add your first widget",onClick:function onClick(){console.log("Main action clicked")}},supportingAction:{text:"Read more",href:"#",onClick:function onClick(){console.log("Supporting action clicked")}}},args))},name:"Compact"},WithButtonSupportingAction={render:function render(args){return(0,jsx_runtime.jsx)(EmptyState.A,_objectSpread({title:"No files uploaded",description:"Upload files to share with your team members.",visual:(0,jsx_runtime.jsx)("img",{src:image_namespaceObject,alt:"No files uploaded",width:280,height:184}),mainAction:{kind:"primary",text:"Upload files",leftIcon:Update.A,onClick:function onClick(){console.log("Main action clicked")}},supportingAction:{text:"Import from drive",leftIcon:Download.A,onClick:function onClick(){console.log("Supporting action clicked")}}},args))},name:"With button supporting action"},WithDisabledActions={render:function render(args){return(0,jsx_runtime.jsx)(EmptyState.A,_objectSpread({title:"Processing data",description:"Your data is being processed. This might take a few minutes.",visual:(0,jsx_runtime.jsx)("img",{src:image_namespaceObject,alt:"Processing data",width:280,height:184}),mainAction:{kind:"secondary",text:"Refresh",disabled:!0,loading:!0,onClick:function onClick(){console.log("Main action clicked")}},supportingAction:{text:"Cancel",disabled:!0,onClick:function onClick(){console.log("Supporting action clicked")}}},args))},name:"With disabled actions"},ActionsComparison={render:function render(args){return(0,jsx_runtime.jsxs)(Flex.A,{direction:"row",gap:"large",children:[(0,jsx_runtime.jsx)(EmptyState.A,{title:"Your favorites are empty",description:"Add boards, docs, or dashboards to your favorites for quick access.",visual:(0,jsx_runtime.jsx)("img",{src:image_namespaceObject,alt:"No items found",width:280,height:184}),mainAction:{kind:"secondary",text:"Add favorites",onClick:function onClick(){console.log("First view - Add item clicked")}}}),(0,jsx_runtime.jsx)(EmptyState.A,_objectSpread({title:"Your favorites are empty",description:"Add boards, docs, or dashboards to your favorites for quick access.",visual:(0,jsx_runtime.jsx)("img",{src:image_namespaceObject,alt:"No items found",width:280,height:184}),mainAction:{kind:"primary",text:"Add favorites",onClick:function onClick(){console.log("Second view - View details clicked")}}},args))]})},name:"Actions comparison"},WithLinkOnly={render:function render(args){return(0,jsx_runtime.jsx)(EmptyState.A,_objectSpread({title:"This workspace is empty",description:'To get started, click the "+" above, then click "add new board".',supportingAction:{href:"https://example.com/help",text:"Read more"}},args))},name:"With link only"},WithTwoButtons={render:function render(args){return(0,jsx_runtime.jsx)(EmptyState.A,_objectSpread({title:"This workspace is empty",description:"Get started by choosing a board template or creating a board from scratch.",mainAction:{kind:"secondary",text:"Browse templates",onClick:function onClick(){console.log("Main action clicked")}},supportingAction:{kind:"tertiary",text:"Start from scratch",onClick:function onClick(){console.log("Supporting action clicked")}}},args))},name:"With two buttons"},WithAndWithoutTitleComparison={render:function render(args){return(0,jsx_runtime.jsxs)(Flex.A,{direction:"row",gap:"large",justify:"space-between",style:{width:"100%"},children:[(0,jsx_runtime.jsx)(EmptyState.A,{title:"Create your first Gantt chart",description:"Gantt charts keep your projects organized.",mainAction:{kind:"secondary",text:"Connect boards to start",onClick:function onClick(){console.log("Main action clicked")}}}),(0,jsx_runtime.jsx)(EmptyState.A,_objectSpread({description:"Create your first Gantt chart",mainAction:{kind:"secondary",text:"Connect boards to start",onClick:function onClick(){console.log("Main action clicked")}}},args))]})},name:"With and without title comparison"},WithActionElementProps={render:function render(args){return(0,jsx_runtime.jsx)(EmptyState.A,_objectSpread({title:"No notifications",description:"You're all caught up! Check back later for new notifications.",visual:(0,jsx_runtime.jsx)("img",{src:image_namespaceObject,alt:"No notifications",width:280,height:184}),mainAction:(0,jsx_runtime.jsx)(Button.A,{kind:"secondary",onClick:function onClick(){console.log("Main action clicked")},children:"Check notifications"}),supportingAction:(0,jsx_runtime.jsx)(Link.A,{href:"#",text:"Manage notification settings",onClick:function onClick(){console.log("Supporting action clicked")}})},args))},name:"With action element props"};Overview.parameters={...Overview.parameters,docs:{...Overview.parameters?.docs,source:{originalSource:'{\n  render: (args: EmptyStateProps) => <EmptyState title="The title should be concise and reflect the purpose" description="This optional paragraph should be use to extend the title. Keep it short and to the point. For longer texts add a link below." visual={<img src={emptyStateImage} alt="No items found" width={280} height={184} />} mainAction={{\n    text: "Main Action",\n    onClick: () => {\n      console.log("Main action clicked");\n    }\n  }} supportingAction={{\n    text: "Read more",\n    href: "#",\n    onClick: () => {\n      console.log("Supporting action clicked");\n    }\n  }} {...args} />,\n  name: "Overview",\n  args: {},\n  parameters: {\n    docs: {\n      liveEdit: {\n        isEnabled: false\n      }\n    }\n  }\n}',...Overview.parameters?.docs?.source}}},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  render: (args: EmptyStateProps) => <EmptyState title="Visualize data from multiple boards" description="Use charts, timelines, and other widgets to see your data clearly." visual={<img src={emptyStateImage} alt="No items found" width={280} height={184} />} mainAction={{\n    text: "Add your first widget",\n    onClick: () => {\n      console.log("Main action clicked");\n    }\n  }} supportingAction={{\n    text: "Read more",\n    href: "#",\n    onClick: () => {\n      console.log("Supporting action clicked");\n    }\n  }} {...args} />,\n  name: "Default",\n  args: {},\n  parameters: {\n    docs: {\n      liveEdit: {\n        isEnabled: false\n      }\n    }\n  }\n}',...Default.parameters?.docs?.source}}},WithoutTitle.parameters={...WithoutTitle.parameters,docs:{...WithoutTitle.parameters?.docs,source:{originalSource:'{\n  render: (args: EmptyStateProps) => <EmptyState description="No data available yet. Add some items to get started." visual={<img src={emptyStateImage} alt="No data available" width={280} height={184} />} mainAction={{\n    text: "Add item",\n    onClick: () => {\n      console.log("Main action clicked");\n    }\n  }} supportingAction={{\n    text: "Read more",\n    href: "#",\n    onClick: () => {\n      console.log("Supporting action clicked");\n    }\n  }} {...args} />,\n  name: "Without title"\n}',...WithoutTitle.parameters?.docs?.source}}},Compact.parameters={...Compact.parameters,docs:{...Compact.parameters?.docs,source:{originalSource:'{\n  render: (args: EmptyStateProps) => <EmptyState title="Visualize data from multiple boards" description="Use charts, timelines, and other widgets to see your data clearly." visual={<img src={emptyStateImage} alt="No notifications" width={280} height={184} />} layout="compact" mainAction={{\n    text: "Add your first widget",\n    onClick: () => {\n      console.log("Main action clicked");\n    }\n  }} supportingAction={{\n    text: "Read more",\n    href: "#",\n    onClick: () => {\n      console.log("Supporting action clicked");\n    }\n  }} {...args} />,\n  name: "Compact"\n}',...Compact.parameters?.docs?.source}}},WithButtonSupportingAction.parameters={...WithButtonSupportingAction.parameters,docs:{...WithButtonSupportingAction.parameters?.docs,source:{originalSource:'{\n  render: (args: EmptyStateProps) => <EmptyState title="No files uploaded" description="Upload files to share with your team members." visual={<img src={emptyStateImage} alt="No files uploaded" width={280} height={184} />} mainAction={{\n    kind: "primary",\n    text: "Upload files",\n    leftIcon: Update,\n    onClick: () => {\n      console.log("Main action clicked");\n    }\n  }} supportingAction={{\n    text: "Import from drive",\n    leftIcon: Download,\n    onClick: () => {\n      console.log("Supporting action clicked");\n    }\n  }} {...args} />,\n  name: "With button supporting action"\n}',...WithButtonSupportingAction.parameters?.docs?.source}}},WithDisabledActions.parameters={...WithDisabledActions.parameters,docs:{...WithDisabledActions.parameters?.docs,source:{originalSource:'{\n  render: (args: EmptyStateProps) => <EmptyState title="Processing data" description="Your data is being processed. This might take a few minutes." visual={<img src={emptyStateImage} alt="Processing data" width={280} height={184} />} mainAction={{\n    kind: "secondary",\n    text: "Refresh",\n    disabled: true,\n    loading: true,\n    onClick: () => {\n      console.log("Main action clicked");\n    }\n  }} supportingAction={{\n    text: "Cancel",\n    disabled: true,\n    onClick: () => {\n      console.log("Supporting action clicked");\n    }\n  }} {...args} />,\n  name: "With disabled actions"\n}',...WithDisabledActions.parameters?.docs?.source}}},ActionsComparison.parameters={...ActionsComparison.parameters,docs:{...ActionsComparison.parameters?.docs,source:{originalSource:'{\n  render: (args: EmptyStateProps) => <Flex direction="row" gap="large">\n      <EmptyState title="Your favorites are empty" description="Add boards, docs, or dashboards to your favorites for quick access." visual={<img src={emptyStateImage} alt="No items found" width={280} height={184} />} mainAction={{\n      kind: "secondary",\n      text: "Add favorites",\n      onClick: () => {\n        console.log("First view - Add item clicked");\n      }\n    }} />\n      <EmptyState title="Your favorites are empty" description="Add boards, docs, or dashboards to your favorites for quick access." visual={<img src={emptyStateImage} alt="No items found" width={280} height={184} />} mainAction={{\n      kind: "primary",\n      text: "Add favorites",\n      onClick: () => {\n        console.log("Second view - View details clicked");\n      }\n    }} {...args} />\n    </Flex>,\n  name: "Actions comparison"\n}',...ActionsComparison.parameters?.docs?.source}}},WithLinkOnly.parameters={...WithLinkOnly.parameters,docs:{...WithLinkOnly.parameters?.docs,source:{originalSource:'{\n  render: (args: EmptyStateProps) => <EmptyState title="This workspace is empty" description=\'To get started, click the "+" above, then click "add new board".\' supportingAction={{\n    href: "https://example.com/help",\n    text: "Read more"\n  }} {...args} />,\n  name: "With link only"\n}',...WithLinkOnly.parameters?.docs?.source}}},WithTwoButtons.parameters={...WithTwoButtons.parameters,docs:{...WithTwoButtons.parameters?.docs,source:{originalSource:'{\n  render: (args: EmptyStateProps) => <EmptyState title="This workspace is empty" description="Get started by choosing a board template or creating a board from scratch." mainAction={{\n    kind: "secondary",\n    text: "Browse templates",\n    onClick: () => {\n      console.log("Main action clicked");\n    }\n  }} supportingAction={{\n    kind: "tertiary",\n    text: "Start from scratch",\n    onClick: () => {\n      console.log("Supporting action clicked");\n    }\n  }} {...args} />,\n  name: "With two buttons"\n}',...WithTwoButtons.parameters?.docs?.source}}},WithAndWithoutTitleComparison.parameters={...WithAndWithoutTitleComparison.parameters,docs:{...WithAndWithoutTitleComparison.parameters?.docs,source:{originalSource:'{\n  render: (args: EmptyStateProps) => <Flex direction="row" gap="large" justify="space-between" style={{\n    width: "100%"\n  }}>\n      <EmptyState title="Create your first Gantt chart" description="Gantt charts keep your projects organized." mainAction={{\n      kind: "secondary",\n      text: "Connect boards to start",\n      onClick: () => {\n        console.log("Main action clicked");\n      }\n    }} />\n      <EmptyState description="Create your first Gantt chart" mainAction={{\n      kind: "secondary",\n      text: "Connect boards to start",\n      onClick: () => {\n        console.log("Main action clicked");\n      }\n    }} {...args} />\n    </Flex>,\n  name: "With and without title comparison"\n}',...WithAndWithoutTitleComparison.parameters?.docs?.source}}},WithActionElementProps.parameters={...WithActionElementProps.parameters,docs:{...WithActionElementProps.parameters?.docs,source:{originalSource:'{\n  render: (args: EmptyStateProps) => <EmptyState title="No notifications" description="You\'re all caught up! Check back later for new notifications." visual={<img src={emptyStateImage} alt="No notifications" width={280} height={184} />} mainAction={<Button kind="secondary" onClick={() => {\n    console.log("Main action clicked");\n  }}>\n          Check notifications\n        </Button>} supportingAction={<Link href="#" text="Manage notification settings" onClick={() => {\n    console.log("Supporting action clicked");\n  }} />} {...args} />,\n  name: "With action element props"\n}',...WithActionElementProps.parameters?.docs?.source}}};const __namedExportsOrder=["Overview","Default","WithoutTitle","Compact","WithButtonSupportingAction","WithDisabledActions","ActionsComparison","WithLinkOnly","WithTwoButtons","WithAndWithoutTitleComparison","WithActionElementProps"]},"./src/components/EmptyState/__stories__/EmptyState.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>EmptyState});__webpack_require__("../../node_modules/react/index.js");var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),lib=__webpack_require__("../../node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("../../node_modules/@storybook/blocks/dist/index.mjs"),EmptyState_stories=__webpack_require__("./src/components/EmptyState/__stories__/EmptyState.stories.tsx"),tip=__webpack_require__("../storybook-blocks/dist/src/components/tip/tip.js"),EmptyStateTip=function EmptyStateTip(){return(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsx)(tip.A,{title:"When to use EmptyState",children:"Actions help guide users towards the next steps they can take, ensuring that they remain engaged and know how to proceed. Depending on the context and user needs, you can include a primary action, a link, both, or no actions at all."})})};EmptyStateTip.displayName="EmptyStateTip";const main_action_do_namespaceObject=__webpack_require__.p+"static/media/main-action-do.2ce3e21a.png",main_action_dont_namespaceObject=__webpack_require__.p+"static/media/main-action-dont.119888c7.png",supporting_do_namespaceObject=__webpack_require__.p+"static/media/supporting-do.92398c4e.png",supporting_dont_namespaceObject=__webpack_require__.p+"static/media/supporting-dont.932ef97c.png",supporting_link_do_namespaceObject=__webpack_require__.p+"static/media/supporting-link-do.514cf540.png",supporting_link_dont_namespaceObject=__webpack_require__.p+"static/media/supporting-link-dont.453ee5f5.png";var injectStylesIntoStyleTag=__webpack_require__("../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("../../node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("../../node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("../../node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("../../node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),EmptyState_stories_module=__webpack_require__("../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[16].use[1]!../../node_modules/resolve-url-loader/index.js!../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[16].use[3]!./src/components/EmptyState/__stories__/EmptyState.stories.module.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(EmptyState_stories_module.A,options);const _stories_EmptyState_stories_module=EmptyState_stories_module.A&&EmptyState_stories_module.A.locals?EmptyState_stories_module.A.locals:void 0;var component_description_map=__webpack_require__("./src/storybook/components/related-components/component-description-map.tsx");function _createMdxContent(props){const _components=Object.assign({h1:"h1",p:"p",h2:"h2",h3:"h3",img:"img"},(0,lib.RP)(),props.components),{Canvas,UsageGuidelines,ComponentRules,RelatedComponents}=_components;return Canvas||_missingMdxReference("Canvas",!0),ComponentRules||_missingMdxReference("ComponentRules",!0),RelatedComponents||_missingMdxReference("RelatedComponents",!0),UsageGuidelines||_missingMdxReference("UsageGuidelines",!0),(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.W8,{of:EmptyState_stories}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"emptystate",children:"EmptyState"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"An empty state component is a user interface element that communicates to users that a particular section or feature contains no data or content at the moment. It often provides visual cues, prompts, or suggestions on what actions can be taken to fill the space."}),"\n",(0,jsx_runtime.jsx)(Canvas,{of:EmptyState_stories.Overview}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"props",children:"Props"}),"\n",(0,jsx_runtime.jsx)(dist.H2,{}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"usage",children:"Usage"}),"\n",(0,jsx_runtime.jsx)(UsageGuidelines,{guidelines:["Provide a clear and concise message that informs the user about the expected outcome.","Handle errors and edge cases that might occur during data loading or rendering.","Use the empty state component to provide an initial state that prevents confusion when no data is available."]}),"\n",(0,jsx_runtime.jsx)(EmptyStateTip,{}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"actions",children:"Actions"}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"main-action",children:"Main Action"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Designers should be able to add custom action in specific situations. Like a primary and secondary with consideration to location and layout."}),"\n",(0,jsx_runtime.jsx)(Canvas,{of:EmptyState_stories.ActionsComparison}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"link",children:"Link"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Links should guide users to troubleshoot the issue or learn more about how to populate the section.\nIf there’s no action to the section the link can stand alone."}),"\n",(0,jsx_runtime.jsx)(Canvas,{of:EmptyState_stories.WithLinkOnly}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"two-buttons",children:"Two buttons"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Instead of link you can use a supporting action as a button. The supporting action cannot be the only button. You should include a main action with it."}),"\n",(0,jsx_runtime.jsx)(Canvas,{of:EmptyState_stories.WithTwoButtons}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"typography",children:"Typography"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Empty state can be with or without a title."}),"\n",(0,jsx_runtime.jsx)(Canvas,{of:EmptyState_stories.WithAndWithoutTitleComparison}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"layout",children:"Layout"}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"default",children:"Default"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"The Default layout is meant for most layouts and locations."}),"\n",(0,jsx_runtime.jsx)(Canvas,{of:EmptyState_stories.Default}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"compact",children:"Compact"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Instead of link you can use a supporting action as a button. The supporting action cannot be the only button. You should include a main action with it."}),"\n",(0,jsx_runtime.jsx)(Canvas,{of:EmptyState_stories.Compact}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"dos-and-donts",children:"Do's and Don'ts"}),"\n",(0,jsx_runtime.jsx)(ComponentRules,{rules:[{componentContainerClassName:_stories_EmptyState_stories_module.largeComponentRule,positive:{component:(0,jsx_runtime.jsx)(_components.img,{src:main_action_do_namespaceObject,alt:"Empty state with clear guidance and helpful action",style:{maxWidth:"100%"}}),description:"Provide clear guidance and an action to help users resolve the empty state."},negative:{component:(0,jsx_runtime.jsx)(_components.img,{src:main_action_dont_namespaceObject,alt:"Empty state with vague messaging",style:{maxWidth:"100%"}}),description:"Don't use vague messaging or unhelpful actions that don't guide users."}},{componentContainerClassName:_stories_EmptyState_stories_module.largeComponentRule,positive:{component:(0,jsx_runtime.jsx)(_components.img,{src:supporting_do_namespaceObject,alt:"Empty state with clear next steps and supporting information",style:{maxWidth:"100%"}}),description:"Offer clear next steps with supporting information when needed."},negative:{component:(0,jsx_runtime.jsx)(_components.img,{src:supporting_dont_namespaceObject,alt:"Empty state with minimal information",style:{maxWidth:"100%"}}),description:"Don't provide minimal or unclear information about how to proceed."}},{componentContainerClassName:_stories_EmptyState_stories_module.largeComponentRule,positive:{component:(0,jsx_runtime.jsx)(_components.img,{src:supporting_link_do_namespaceObject,alt:"Empty state with clear next steps and supporting information",style:{maxWidth:"100%"}}),description:"Offer clear next steps with supporting information when needed."},negative:{component:(0,jsx_runtime.jsx)(_components.img,{src:supporting_link_dont_namespaceObject,alt:"Empty state with minimal information",style:{maxWidth:"100%"}}),description:"Don't provide minimal or unclear information about how to proceed."}}]}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"related-components",children:"Related components"}),"\n",(0,jsx_runtime.jsx)(RelatedComponents,{componentsNames:[component_description_map.Y5,component_description_map.XN,component_description_map.N5]})]})}const EmptyState=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.RP)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,props)})):_createMdxContent(props)};function _missingMdxReference(id,component){throw new Error("Expected "+(component?"component":"object")+" `"+id+"` to be defined: you likely forgot to import, pass, or provide it.")}},"../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[16].use[1]!../../node_modules/resolve-url-loader/index.js!../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[16].use[3]!./src/components/EmptyState/__stories__/EmptyState.stories.module.scss":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".EmptyState-stories-module_largeComponentRule{height:fit-content !important;width:fit-content;padding:var(--sb-spacing-large)}","",{version:3,sources:["webpack://./src/components/EmptyState/__stories__/EmptyState.stories.module.scss"],names:[],mappings:"AAAA,8CACE,6BAAA,CACA,iBAAA,CACA,+BAAA",sourcesContent:[".largeComponentRule {\n  height: fit-content !important;\n  width: fit-content;\n  padding: var(--sb-spacing-large);\n}\n"],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={largeComponentRule:"EmptyState-stories-module_largeComponentRule"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___}}]);