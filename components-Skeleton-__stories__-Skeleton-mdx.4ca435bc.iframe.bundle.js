"use strict";(globalThis.webpackChunk_vibe_core=globalThis.webpackChunk_vibe_core||[]).push([[4921,283],{"../../node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{BN:()=>MDXContext,RP:()=>useMDXComponents,gz:()=>withMDXComponents,xA:()=>MDXProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./src/components/Skeleton/__stories__/Skeleton.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ComplexExample:()=>ComplexExample,Overview:()=>Overview,Shapes:()=>Shapes,TextSkeleton:()=>TextSkeleton,UpdateInTheSystem:()=>UpdateInTheSystem,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Skeleton_stories});var react=__webpack_require__("../../node_modules/react/index.js"),Skeleton=__webpack_require__("./src/components/Skeleton/Skeleton.tsx"),Avatar=__webpack_require__("./src/components/Avatar/Avatar.tsx");const person_namespaceObject=__webpack_require__.p+"static/media/person.dd0cd6ea.png";var Button=__webpack_require__("./src/components/Button/Button.tsx"),ThumbsUp=__webpack_require__("../icons/dist/react/ThumbsUp.js"),Reply=__webpack_require__("../icons/dist/react/Reply.js"),Flex=__webpack_require__("./src/components/Flex/Flex.tsx"),Box=__webpack_require__("./src/components/Box/Box.tsx"),Text=__webpack_require__("./src/components/Text/Text.tsx"),jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}const Skeleton_stories={parameters:{storySource:{source:'import React, { useCallback, useState } from "react";\nimport Skeleton, { SkeletonProps } from "../Skeleton";\nimport Avatar from "../../Avatar/Avatar";\nimport person from "./assets/person.png";\nimport Button from "../../Button/Button";\nimport { Reply, ThumbsUp } from "@vibe/icons";\nimport { Flex } from "../../Flex";\nimport { Box } from "../../Box";\nimport { Text } from "../../Text";\n\nexport default {\n  title: "Components/Skeleton",\n  component: Skeleton\n};\n\nexport const Overview = {\n  render: (args: SkeletonProps) => (\n    <Flex direction="column" gap="small">\n      <Skeleton {...args} />\n      <Skeleton {...args} />\n      <Skeleton {...args} />\n    </Flex>\n  ),\n  args: {\n    size: "h1",\n    type: "text"\n  },\n  parameters: {\n    docs: {\n      liveEdit: {\n        isEnabled: false\n      }\n    }\n  }\n};\n\nexport const Shapes = {\n  render: () => (\n    <Flex align="end" gap="large">\n      <Flex direction="column" align="stretch" gap="large">\n        <Skeleton type="circle" />\n        <Text type="text1">Circle</Text>\n      </Flex>\n      <Flex direction="column" align="stretch" gap="large">\n        <Skeleton />\n        <Text type="text1">Square</Text>\n      </Flex>\n      <Flex direction="column" align="stretch" gap="large">\n        <Skeleton width={112} height={46} />\n        <Text type="text1">Rectangle</Text>\n      </Flex>\n    </Flex>\n  )\n};\n\nexport const TextSkeleton = {\n  render: () => (\n    <Flex align="end" gap="large">\n      <Flex direction="column" align="stretch" gap="large">\n        <Skeleton type="text" size="h1" />\n        <Text type="text1">H1</Text>\n      </Flex>\n      <Flex direction="column" align="stretch" gap="large">\n        <Skeleton type="text" size="h2" />\n        <Text type="text1">H2</Text>\n      </Flex>\n      <Flex direction="column" align="stretch" gap="large">\n        <Skeleton type="text" size="small" />\n        <Text type="text1">Paragraph</Text>\n      </Flex>\n    </Flex>\n  ),\n  name: "Text"\n};\n\nexport const ComplexExample = {\n  render: () => {\n    return (\n      <Flex align="stretch" direction="column" gap="small">\n        <Flex gap="small">\n          <Skeleton type="circle" />\n          <Skeleton type="text" width={110} size="small" />\n        </Flex>\n        <Flex align="stretch" gap="medium">\n          <Skeleton />\n          <Flex align="stretch" direction="column" gap="small">\n            <Skeleton type="text" size="h1" />\n            <Skeleton type="text" size="h4" />\n            <Skeleton type="text" size="h4" />\n            <Skeleton type="text" size="h4" />\n            <Skeleton type="text" size="h4" width={82} />\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n};\n\nexport const UpdateInTheSystem = {\n  render: () => {\n    const [showSkeleton, setShowSkeleton] = useState(false);\n    const [showBlock, setShowBlock] = useState(false);\n    const [showReload, setShowReload] = useState(true);\n\n    const onClickCallback = useCallback(() => {\n      setShowReload(false);\n      setShowBlock(false);\n      setShowSkeleton(true);\n\n      setTimeout(() => {\n        setShowSkeleton(false);\n      }, 4000);\n\n      setTimeout(() => {\n        setShowBlock(true);\n      }, 4000);\n    }, []);\n\n    return (\n      <Flex direction="column" gap="large" flex="1">\n        {showBlock && (\n          <Box border>\n            <Flex direction="column" align="start" gap="medium" style={{ width: "730px", padding: "16px" }}>\n              <Flex gap="small">\n                <Avatar src={person} type="img" />\n                <Text weight="bold">Julia Martinez</Text>\n              </Flex>\n              <Text type="text1" element="p">\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\n                dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip\n                ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu\n                fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia\n                deserunt mollit anim id est laborum.\n              </Text>\n            </Flex>\n            <Flex style={{ marginTop: "var(--space-24)", width: "100%" }}>\n              <Button\n                style={{\n                  flexGrow: 1,\n                  flexShrink: 1,\n                  borderBottom: "none",\n                  borderRight: "none",\n                  borderLeft: "none"\n                }}\n                leftIcon={ThumbsUp}\n                kind="secondary"\n              >\n                Like\n              </Button>\n              <Button\n                style={{\n                  flexGrow: 1,\n                  flexShrink: 1,\n                  borderBottom: "none",\n                  borderRight: "none"\n                }}\n                leftIcon={Reply}\n                kind="secondary"\n              >\n                Reply\n              </Button>\n            </Flex>\n          </Box>\n        )}\n        {showSkeleton && (\n          <Box border>\n            <Flex direction="column" align="stretch" gap="medium" style={{ width: "730px", padding: "16px" }}>\n              <Flex align="center" gap="small">\n                <Skeleton type="circle" width={50} height={50} />\n                <Skeleton type="text" size="h5" width={110} />\n              </Flex>\n              <Flex direction="column" align="stretch" gap="small">\n                <Skeleton type="text" size="small" width={655} />\n                <Skeleton type="text" size="small" width={680} />\n                <Skeleton type="text" size="small" width={670} />\n                <Skeleton type="text" size="small" width={675} />\n                <Skeleton type="text" size="small" width={400} />\n              </Flex>\n            </Flex>\n            <Flex\n              justify="center"\n              gap={300}\n              style={{ marginTop: "var(--space-24)", width: "100%", paddingBlock: "var(--space-8)" }}\n            >\n              <Skeleton type="text" size="h2" width={60} />\n              <Skeleton type="text" size="h2" width={60} />\n            </Flex>\n          </Box>\n        )}\n        <Button kind="secondary" onClick={onClickCallback}>\n          {showReload ? "Load update" : "Reload update"}\n        </Button>\n      </Flex>\n    );\n  },\n\n  name: "Update in the system"\n};\n',locationsMap:{overview:{startLoc:{col:24,line:16},endLoc:{col:1,line:35},startBody:{col:24,line:16},endBody:{col:1,line:35}},shapes:{startLoc:{col:22,line:37},endLoc:{col:1,line:54},startBody:{col:22,line:37},endBody:{col:1,line:54}},"text-skeleton":{startLoc:{col:28,line:56},endLoc:{col:1,line:74},startBody:{col:28,line:56},endBody:{col:1,line:74}},"complex-example":{startLoc:{col:30,line:76},endLoc:{col:1,line:97},startBody:{col:30,line:76},endBody:{col:1,line:97}},"update-in-the-system":{startLoc:{col:33,line:99},endLoc:{col:1,line:198},startBody:{col:33,line:99},endBody:{col:1,line:198}}}}},title:"Components/Skeleton",component:Skeleton.A};var Overview={render:function render(args){return(0,jsx_runtime.jsxs)(Flex.A,{direction:"column",gap:"small",children:[(0,jsx_runtime.jsx)(Skeleton.A,_objectSpread({},args)),(0,jsx_runtime.jsx)(Skeleton.A,_objectSpread({},args)),(0,jsx_runtime.jsx)(Skeleton.A,_objectSpread({},args))]})},args:{size:"h1",type:"text"},parameters:{docs:{liveEdit:{isEnabled:!1}}}},Shapes={render:function render(){return(0,jsx_runtime.jsxs)(Flex.A,{align:"end",gap:"large",children:[(0,jsx_runtime.jsxs)(Flex.A,{direction:"column",align:"stretch",gap:"large",children:[(0,jsx_runtime.jsx)(Skeleton.A,{type:"circle"}),(0,jsx_runtime.jsx)(Text.A,{type:"text1",children:"Circle"})]}),(0,jsx_runtime.jsxs)(Flex.A,{direction:"column",align:"stretch",gap:"large",children:[(0,jsx_runtime.jsx)(Skeleton.A,{}),(0,jsx_runtime.jsx)(Text.A,{type:"text1",children:"Square"})]}),(0,jsx_runtime.jsxs)(Flex.A,{direction:"column",align:"stretch",gap:"large",children:[(0,jsx_runtime.jsx)(Skeleton.A,{width:112,height:46}),(0,jsx_runtime.jsx)(Text.A,{type:"text1",children:"Rectangle"})]})]})}},TextSkeleton={render:function render(){return(0,jsx_runtime.jsxs)(Flex.A,{align:"end",gap:"large",children:[(0,jsx_runtime.jsxs)(Flex.A,{direction:"column",align:"stretch",gap:"large",children:[(0,jsx_runtime.jsx)(Skeleton.A,{type:"text",size:"h1"}),(0,jsx_runtime.jsx)(Text.A,{type:"text1",children:"H1"})]}),(0,jsx_runtime.jsxs)(Flex.A,{direction:"column",align:"stretch",gap:"large",children:[(0,jsx_runtime.jsx)(Skeleton.A,{type:"text",size:"h2"}),(0,jsx_runtime.jsx)(Text.A,{type:"text1",children:"H2"})]}),(0,jsx_runtime.jsxs)(Flex.A,{direction:"column",align:"stretch",gap:"large",children:[(0,jsx_runtime.jsx)(Skeleton.A,{type:"text",size:"small"}),(0,jsx_runtime.jsx)(Text.A,{type:"text1",children:"Paragraph"})]})]})},name:"Text"},ComplexExample={render:function render(){return(0,jsx_runtime.jsxs)(Flex.A,{align:"stretch",direction:"column",gap:"small",children:[(0,jsx_runtime.jsxs)(Flex.A,{gap:"small",children:[(0,jsx_runtime.jsx)(Skeleton.A,{type:"circle"}),(0,jsx_runtime.jsx)(Skeleton.A,{type:"text",width:110,size:"small"})]}),(0,jsx_runtime.jsxs)(Flex.A,{align:"stretch",gap:"medium",children:[(0,jsx_runtime.jsx)(Skeleton.A,{}),(0,jsx_runtime.jsxs)(Flex.A,{align:"stretch",direction:"column",gap:"small",children:[(0,jsx_runtime.jsx)(Skeleton.A,{type:"text",size:"h1"}),(0,jsx_runtime.jsx)(Skeleton.A,{type:"text",size:"h4"}),(0,jsx_runtime.jsx)(Skeleton.A,{type:"text",size:"h4"}),(0,jsx_runtime.jsx)(Skeleton.A,{type:"text",size:"h4"}),(0,jsx_runtime.jsx)(Skeleton.A,{type:"text",size:"h4",width:82})]})]})]})}},UpdateInTheSystem={render:function render(){var _useState2=_slicedToArray((0,react.useState)(!1),2),showSkeleton=_useState2[0],setShowSkeleton=_useState2[1],_useState4=_slicedToArray((0,react.useState)(!1),2),showBlock=_useState4[0],setShowBlock=_useState4[1],_useState6=_slicedToArray((0,react.useState)(!0),2),showReload=_useState6[0],setShowReload=_useState6[1],onClickCallback=(0,react.useCallback)((function(){setShowReload(!1),setShowBlock(!1),setShowSkeleton(!0),setTimeout((function(){setShowSkeleton(!1)}),4e3),setTimeout((function(){setShowBlock(!0)}),4e3)}),[]);return(0,jsx_runtime.jsxs)(Flex.A,{direction:"column",gap:"large",flex:"1",children:[showBlock&&(0,jsx_runtime.jsxs)(Box.A,{border:!0,children:[(0,jsx_runtime.jsxs)(Flex.A,{direction:"column",align:"start",gap:"medium",style:{width:"730px",padding:"16px"},children:[(0,jsx_runtime.jsxs)(Flex.A,{gap:"small",children:[(0,jsx_runtime.jsx)(Avatar.A,{src:person_namespaceObject,type:"img"}),(0,jsx_runtime.jsx)(Text.A,{weight:"bold",children:"Julia Martinez"})]}),(0,jsx_runtime.jsx)(Text.A,{type:"text1",element:"p",children:"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."})]}),(0,jsx_runtime.jsxs)(Flex.A,{style:{marginTop:"var(--space-24)",width:"100%"},children:[(0,jsx_runtime.jsx)(Button.A,{style:{flexGrow:1,flexShrink:1,borderBottom:"none",borderRight:"none",borderLeft:"none"},leftIcon:ThumbsUp.A,kind:"secondary",children:"Like"}),(0,jsx_runtime.jsx)(Button.A,{style:{flexGrow:1,flexShrink:1,borderBottom:"none",borderRight:"none"},leftIcon:Reply.A,kind:"secondary",children:"Reply"})]})]}),showSkeleton&&(0,jsx_runtime.jsxs)(Box.A,{border:!0,children:[(0,jsx_runtime.jsxs)(Flex.A,{direction:"column",align:"stretch",gap:"medium",style:{width:"730px",padding:"16px"},children:[(0,jsx_runtime.jsxs)(Flex.A,{align:"center",gap:"small",children:[(0,jsx_runtime.jsx)(Skeleton.A,{type:"circle",width:50,height:50}),(0,jsx_runtime.jsx)(Skeleton.A,{type:"text",size:"h5",width:110})]}),(0,jsx_runtime.jsxs)(Flex.A,{direction:"column",align:"stretch",gap:"small",children:[(0,jsx_runtime.jsx)(Skeleton.A,{type:"text",size:"small",width:655}),(0,jsx_runtime.jsx)(Skeleton.A,{type:"text",size:"small",width:680}),(0,jsx_runtime.jsx)(Skeleton.A,{type:"text",size:"small",width:670}),(0,jsx_runtime.jsx)(Skeleton.A,{type:"text",size:"small",width:675}),(0,jsx_runtime.jsx)(Skeleton.A,{type:"text",size:"small",width:400})]})]}),(0,jsx_runtime.jsxs)(Flex.A,{justify:"center",gap:300,style:{marginTop:"var(--space-24)",width:"100%",paddingBlock:"var(--space-8)"},children:[(0,jsx_runtime.jsx)(Skeleton.A,{type:"text",size:"h2",width:60}),(0,jsx_runtime.jsx)(Skeleton.A,{type:"text",size:"h2",width:60})]})]}),(0,jsx_runtime.jsx)(Button.A,{kind:"secondary",onClick:onClickCallback,children:showReload?"Load update":"Reload update"})]})},name:"Update in the system"};Overview.parameters={...Overview.parameters,docs:{...Overview.parameters?.docs,source:{originalSource:'{\n  render: (args: SkeletonProps) => <Flex direction="column" gap="small">\n      <Skeleton {...args} />\n      <Skeleton {...args} />\n      <Skeleton {...args} />\n    </Flex>,\n  args: {\n    size: "h1",\n    type: "text"\n  },\n  parameters: {\n    docs: {\n      liveEdit: {\n        isEnabled: false\n      }\n    }\n  }\n}',...Overview.parameters?.docs?.source}}},Shapes.parameters={...Shapes.parameters,docs:{...Shapes.parameters?.docs,source:{originalSource:'{\n  render: () => <Flex align="end" gap="large">\n      <Flex direction="column" align="stretch" gap="large">\n        <Skeleton type="circle" />\n        <Text type="text1">Circle</Text>\n      </Flex>\n      <Flex direction="column" align="stretch" gap="large">\n        <Skeleton />\n        <Text type="text1">Square</Text>\n      </Flex>\n      <Flex direction="column" align="stretch" gap="large">\n        <Skeleton width={112} height={46} />\n        <Text type="text1">Rectangle</Text>\n      </Flex>\n    </Flex>\n}',...Shapes.parameters?.docs?.source}}},TextSkeleton.parameters={...TextSkeleton.parameters,docs:{...TextSkeleton.parameters?.docs,source:{originalSource:'{\n  render: () => <Flex align="end" gap="large">\n      <Flex direction="column" align="stretch" gap="large">\n        <Skeleton type="text" size="h1" />\n        <Text type="text1">H1</Text>\n      </Flex>\n      <Flex direction="column" align="stretch" gap="large">\n        <Skeleton type="text" size="h2" />\n        <Text type="text1">H2</Text>\n      </Flex>\n      <Flex direction="column" align="stretch" gap="large">\n        <Skeleton type="text" size="small" />\n        <Text type="text1">Paragraph</Text>\n      </Flex>\n    </Flex>,\n  name: "Text"\n}',...TextSkeleton.parameters?.docs?.source}}},ComplexExample.parameters={...ComplexExample.parameters,docs:{...ComplexExample.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    return <Flex align="stretch" direction="column" gap="small">\n        <Flex gap="small">\n          <Skeleton type="circle" />\n          <Skeleton type="text" width={110} size="small" />\n        </Flex>\n        <Flex align="stretch" gap="medium">\n          <Skeleton />\n          <Flex align="stretch" direction="column" gap="small">\n            <Skeleton type="text" size="h1" />\n            <Skeleton type="text" size="h4" />\n            <Skeleton type="text" size="h4" />\n            <Skeleton type="text" size="h4" />\n            <Skeleton type="text" size="h4" width={82} />\n          </Flex>\n        </Flex>\n      </Flex>;\n  }\n}',...ComplexExample.parameters?.docs?.source}}},UpdateInTheSystem.parameters={...UpdateInTheSystem.parameters,docs:{...UpdateInTheSystem.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const [showSkeleton, setShowSkeleton] = useState(false);\n    const [showBlock, setShowBlock] = useState(false);\n    const [showReload, setShowReload] = useState(true);\n    const onClickCallback = useCallback(() => {\n      setShowReload(false);\n      setShowBlock(false);\n      setShowSkeleton(true);\n      setTimeout(() => {\n        setShowSkeleton(false);\n      }, 4000);\n      setTimeout(() => {\n        setShowBlock(true);\n      }, 4000);\n    }, []);\n    return <Flex direction="column" gap="large" flex="1">\n        {showBlock && <Box border>\n            <Flex direction="column" align="start" gap="medium" style={{\n          width: "730px",\n          padding: "16px"\n        }}>\n              <Flex gap="small">\n                <Avatar src={person} type="img" />\n                <Text weight="bold">Julia Martinez</Text>\n              </Flex>\n              <Text type="text1" element="p">\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\n                dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip\n                ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu\n                fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia\n                deserunt mollit anim id est laborum.\n              </Text>\n            </Flex>\n            <Flex style={{\n          marginTop: "var(--space-24)",\n          width: "100%"\n        }}>\n              <Button style={{\n            flexGrow: 1,\n            flexShrink: 1,\n            borderBottom: "none",\n            borderRight: "none",\n            borderLeft: "none"\n          }} leftIcon={ThumbsUp} kind="secondary">\n                Like\n              </Button>\n              <Button style={{\n            flexGrow: 1,\n            flexShrink: 1,\n            borderBottom: "none",\n            borderRight: "none"\n          }} leftIcon={Reply} kind="secondary">\n                Reply\n              </Button>\n            </Flex>\n          </Box>}\n        {showSkeleton && <Box border>\n            <Flex direction="column" align="stretch" gap="medium" style={{\n          width: "730px",\n          padding: "16px"\n        }}>\n              <Flex align="center" gap="small">\n                <Skeleton type="circle" width={50} height={50} />\n                <Skeleton type="text" size="h5" width={110} />\n              </Flex>\n              <Flex direction="column" align="stretch" gap="small">\n                <Skeleton type="text" size="small" width={655} />\n                <Skeleton type="text" size="small" width={680} />\n                <Skeleton type="text" size="small" width={670} />\n                <Skeleton type="text" size="small" width={675} />\n                <Skeleton type="text" size="small" width={400} />\n              </Flex>\n            </Flex>\n            <Flex justify="center" gap={300} style={{\n          marginTop: "var(--space-24)",\n          width: "100%",\n          paddingBlock: "var(--space-8)"\n        }}>\n              <Skeleton type="text" size="h2" width={60} />\n              <Skeleton type="text" size="h2" width={60} />\n            </Flex>\n          </Box>}\n        <Button kind="secondary" onClick={onClickCallback}>\n          {showReload ? "Load update" : "Reload update"}\n        </Button>\n      </Flex>;\n  },\n  name: "Update in the system"\n}',...UpdateInTheSystem.parameters?.docs?.source}}};const __namedExportsOrder=["Overview","Shapes","TextSkeleton","ComplexExample","UpdateInTheSystem"]},"./src/components/Skeleton/__stories__/Skeleton.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>_stories_Skeleton});__webpack_require__("../../node_modules/react/index.js");var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),lib=__webpack_require__("../../node_modules/@mdx-js/react/lib/index.js"),Skeleton=__webpack_require__("./src/components/Skeleton/Skeleton.tsx"),dist=__webpack_require__("../../node_modules/@storybook/blocks/dist/index.mjs"),component_description_map=__webpack_require__("./src/storybook/components/related-components/component-description-map.tsx"),tip=__webpack_require__("../storybook-blocks/dist/src/components/tip/tip.js"),storybook_link=__webpack_require__("../storybook-blocks/dist/src/components/storybook-link/storybook-link.js"),TipLoader=function TipLoader(){return(0,jsx_runtime.jsxs)(tip.A,{children:["Using loader after the pages are fully loaded consider using the"," ",(0,jsx_runtime.jsx)(storybook_link.A,{page:"Components/Loader",size:storybook_link.A.sizes.SMALL,children:"loader component."})]})};TipLoader.displayName="TipLoader";var Skeleton_stories=__webpack_require__("./src/components/Skeleton/__stories__/Skeleton.stories.tsx"),Flex=__webpack_require__("./src/components/Flex/Flex.tsx");function _createMdxContent(props){const _components=Object.assign({h1:"h1",p:"p",h3:"h3",pre:"pre",code:"code",h2:"h2",div:"div"},(0,lib.RP)(),props.components),{Canvas,PropsTable,UsageGuidelines,ComponentRules,RelatedComponents}=_components;return Canvas||_missingMdxReference("Canvas",!0),ComponentRules||_missingMdxReference("ComponentRules",!0),PropsTable||_missingMdxReference("PropsTable",!0),RelatedComponents||_missingMdxReference("RelatedComponents",!0),UsageGuidelines||_missingMdxReference("UsageGuidelines",!0),(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.W8,{of:Skeleton_stories}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"skeleton",children:"Skeleton"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Skeleton loading componet used to indicate content and ui loading that will appear after its loaded. It helps to decrease perceived duration time"}),"\n",(0,jsx_runtime.jsx)(Canvas,{of:Skeleton_stories.Overview}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"import",children:"Import"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-js",children:'import { Skeleton } from "@vibe/core";\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"props",children:"Props"}),"\n",(0,jsx_runtime.jsx)(PropsTable,{}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"usage",children:"Usage"}),"\n",(0,jsx_runtime.jsx)(UsageGuidelines,{guidelines:["Mimic the user interface that is going to be loaded as much as possible","Animation on the skeleton is a repeating color pulse should move from left to right to indicate the lading state"]}),"\n",(0,jsx_runtime.jsx)(TipLoader,{}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"variants",children:"Variants"}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"shapes",children:"Shapes"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Use shaes to mimic Avatars, images, buttons etc..."}),"\n",(0,jsx_runtime.jsx)(Canvas,{of:Skeleton_stories.Shapes}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"text",children:"Text"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Presents a classic menu or equivalent picker"}),"\n",(0,jsx_runtime.jsx)(Canvas,{of:Skeleton_stories.TextSkeleton}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"dos-and-donts",children:"Do’s and Don’ts"}),"\n",(0,jsx_runtime.jsx)(ComponentRules,{rules:[{positive:{component:(0,jsx_runtime.jsxs)(Flex.A,{gap:"small",direction:"column",align:"start",children:[(0,jsx_runtime.jsxs)(Flex.A,{gap:"small",children:[(0,jsx_runtime.jsx)(Skeleton.A,{type:"circle"}),(0,jsx_runtime.jsx)(Skeleton.A,{type:"text",size:"small"})]}),(0,jsx_runtime.jsxs)(Flex.A,{gap:"small",children:[(0,jsx_runtime.jsx)(Skeleton.A,{type:"circle"}),(0,jsx_runtime.jsx)(Skeleton.A,{type:"text",size:"small"})]}),(0,jsx_runtime.jsxs)(Flex.A,{gap:"small",children:[(0,jsx_runtime.jsx)(Skeleton.A,{type:"circle"}),(0,jsx_runtime.jsx)(Skeleton.A,{type:"text",size:"small"})]})]}),description:"Show only representation of ui."},negative:{component:(0,jsx_runtime.jsxs)(Flex.A,{gap:"small",direction:"column",align:"start",children:[(0,jsx_runtime.jsxs)(Flex.A,{gap:"small",children:[(0,jsx_runtime.jsx)(Skeleton.A,{type:"circle"}),(0,jsx_runtime.jsxs)(_components.div,{children:[(0,jsx_runtime.jsx)(Skeleton.A,{type:"text",size:"small"}),"Small text"]})]}),(0,jsx_runtime.jsxs)(Flex.A,{gap:"small",children:[(0,jsx_runtime.jsx)(Skeleton.A,{type:"circle"}),(0,jsx_runtime.jsxs)(_components.div,{children:[(0,jsx_runtime.jsx)(Skeleton.A,{type:"text",size:"small"}),"Small text"]})]}),(0,jsx_runtime.jsxs)(Flex.A,{gap:"small",children:[(0,jsx_runtime.jsx)(Skeleton.A,{type:"circle"}),(0,jsx_runtime.jsxs)(_components.div,{children:[(0,jsx_runtime.jsx)(Skeleton.A,{type:"text",size:"small"}),"Small text"]})]})]}),description:"Show all the user interface exactly."}}]}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"use-cases-and-examples",children:"Use cases and examples"}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"complex-example",children:"Complex Example"}),"\n",(0,jsx_runtime.jsx)(Canvas,{of:Skeleton_stories.ComplexExample}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"update-in-the-system",children:"Update in the system"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Use this menu to allow a user to either select one or more items from the list."}),"\n",(0,jsx_runtime.jsx)(Canvas,{of:Skeleton_stories.UpdateInTheSystem}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"related-components",children:"Related components"}),"\n",(0,jsx_runtime.jsx)(RelatedComponents,{componentsNames:[component_description_map.MT,component_description_map.Bv,component_description_map._v]})]})}const _stories_Skeleton=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.RP)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,props)})):_createMdxContent(props)};function _missingMdxReference(id,component){throw new Error("Expected "+(component?"component":"object")+" `"+id+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);