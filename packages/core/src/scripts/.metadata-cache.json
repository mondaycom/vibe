{"version":"1","entries":{"/Users/talko/Development/vibe/packages/core/src/components/Accordion/Accordion/Accordion.tsx":{"hash":"e81c1fa9c2333e26b02b88355e07838d","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Accordion/Accordion/Accordion.tsx","components":[{"displayName":"Accordion","description":"","props":{"children":{"defaultValue":null,"description":"The content of the accordion (`AccordionItem` components).","name":"children","parent":{"fileName":"core/src/components/Accordion/Accordion/Accordion.tsx","name":"AccordionProps"},"declarations":[{"fileName":"core/src/components/Accordion/Accordion/Accordion.tsx","name":"AccordionProps"}],"required":false,"type":{"name":"ReactElement<any, string | JSXElementConstructor<any>> | ReactElement<any, string | JSXElementConstructor<any>>[]"}},"allowMultiple":{"defaultValue":{"value":"false"},"description":"If true, multiple accordion items can be expanded at the same time.","name":"allowMultiple","parent":{"fileName":"core/src/components/Accordion/Accordion/Accordion.tsx","name":"AccordionProps"},"declarations":[{"fileName":"core/src/components/Accordion/Accordion/Accordion.tsx","name":"AccordionProps"}],"required":false,"type":{"name":"boolean"}},"defaultIndex":{"defaultValue":{"value":"[]"},"description":"An array of initially expanded item indexes.","name":"defaultIndex","parent":{"fileName":"core/src/components/Accordion/Accordion/Accordion.tsx","name":"AccordionProps"},"declarations":[{"fileName":"core/src/components/Accordion/Accordion/Accordion.tsx","name":"AccordionProps"}],"required":false,"type":{"name":"number[]"}},"className":{"defaultValue":{"value":""},"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Accordion/AccordionItem/AccordionItem.tsx":{"hash":"7b56c520697c1d2f9ec106c366276a48","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Accordion/AccordionItem/AccordionItem.tsx","components":[]}},"/Users/talko/Development/vibe/packages/core/src/components/AlertBanner/AlertBanner.tsx":{"hash":"0167a4c8f9292c8533a85ce8ae840591","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/AlertBanner/AlertBanner.tsx","components":[{"displayName":"AlertBanner","description":"","props":{"backgroundColor":{"defaultValue":{"value":"primary"},"description":"The background color of the alert banner.","name":"backgroundColor","parent":{"fileName":"core/src/components/AlertBanner/AlertBanner.tsx","name":"AlertBannerProps"},"declarations":[{"fileName":"core/src/components/AlertBanner/AlertBanner.tsx","name":"AlertBannerProps"}],"required":false,"type":{"name":"enum","raw":"AlertBannerBackgroundColor","value":[{"value":"\"primary\""},{"value":"\"positive\""},{"value":"\"negative\""},{"value":"\"dark\""},{"value":"\"warning\""}]}},"isCloseHidden":{"defaultValue":{"value":"false"},"description":"If true, the close button is hidden.","name":"isCloseHidden","parent":{"fileName":"core/src/components/AlertBanner/AlertBanner.tsx","name":"AlertBannerProps"},"declarations":[{"fileName":"core/src/components/AlertBanner/AlertBanner.tsx","name":"AlertBannerProps"}],"required":false,"type":{"name":"boolean"}},"ariaLabel":{"defaultValue":{"value":""},"description":"The ARIA label of the alert banner for accessibility.","name":"ariaLabel","parent":{"fileName":"core/src/components/AlertBanner/AlertBanner.tsx","name":"AlertBannerProps"},"declarations":[{"fileName":"core/src/components/AlertBanner/AlertBanner.tsx","name":"AlertBannerProps"}],"required":false,"type":{"name":"string"}},"closeButtonAriaLabel":{"defaultValue":{"value":"Close"},"description":"The ARIA label of the close button for accessibility.","name":"closeButtonAriaLabel","parent":{"fileName":"core/src/components/AlertBanner/AlertBanner.tsx","name":"AlertBannerProps"},"declarations":[{"fileName":"core/src/components/AlertBanner/AlertBanner.tsx","name":"AlertBannerProps"}],"required":false,"type":{"name":"string"}},"onClose":{"defaultValue":null,"description":"Callback fired when the close button is clicked.","name":"onClose","parent":{"fileName":"core/src/components/AlertBanner/AlertBanner.tsx","name":"AlertBannerProps"},"declarations":[{"fileName":"core/src/components/AlertBanner/AlertBanner.tsx","name":"AlertBannerProps"}],"required":false,"type":{"name":"(event: React.MouseEvent<HTMLButtonElement>) => void"}},"children":{"defaultValue":null,"description":"The content of the alert banner.","name":"children","parent":{"fileName":"core/src/components/AlertBanner/AlertBanner.tsx","name":"AlertBannerProps"},"declarations":[{"fileName":"core/src/components/AlertBanner/AlertBanner.tsx","name":"AlertBannerProps"}],"required":false,"type":{"name":"ChildrenType | ChildrenType[]"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/AlertBanner/AlertBannerButton/AlertBannerButton.tsx":{"hash":"286d8ad38cce451085e3aaae7a9aa91b","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/AlertBanner/AlertBannerButton/AlertBannerButton.tsx","components":[{"displayName":"AlertBannerButton","description":"","props":{"isDarkBackground":{"defaultValue":{"value":"false"},"description":"If true, the button is displayed on a dark background.","name":"isDarkBackground","parent":{"fileName":"core/src/components/AlertBanner/AlertBannerButton/AlertBannerButton.tsx","name":"AlertBannerButtonProps"},"declarations":[{"fileName":"core/src/components/AlertBanner/AlertBannerButton/AlertBannerButton.tsx","name":"AlertBannerButtonProps"}],"required":false,"type":{"name":"boolean"}},"className":{"defaultValue":null,"description":"Custom class names to pass to the component","name":"className","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"string"}},"activeButtonClassName":{"defaultValue":null,"description":"","name":"activeButtonClassName","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"string"}},"kind":{"defaultValue":null,"description":"The button's kind","name":"kind","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"enum","raw":"ButtonType","value":[{"value":"\"primary\""},{"value":"\"secondary\""},{"value":"\"tertiary\""}]}},"onClick":{"defaultValue":null,"description":"Callback function to run when the button is clicked","name":"onClick","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"(event: React.MouseEvent<HTMLButtonElement>) => void"}},"onMouseDown":{"defaultValue":null,"description":"","name":"onMouseDown","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"(event: React.MouseEvent<HTMLButtonElement>) => void"}},"blurOnMouseUp":{"defaultValue":null,"description":"Blur on button click","name":"blurOnMouseUp","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"boolean"}},"name":{"defaultValue":null,"description":"Name of the button - for form submit usages","name":"name","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"string"}},"size":{"defaultValue":null,"description":"The button's size","name":"size","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"enum","raw":"ButtonSize","value":[{"value":"\"xxs\""},{"value":"\"xs\""},{"value":"\"small\""},{"value":"\"medium\""},{"value":"\"large\""}]}},"color":{"defaultValue":null,"description":"The button's color","name":"color","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"enum","raw":"ButtonColor","value":[{"value":"\"primary\""},{"value":"\"positive\""},{"value":"\"negative\""},{"value":"\"inverted\""},{"value":"\"on-primary-color\""},{"value":"\"on-inverted-background\""},{"value":"\"brand\""},{"value":"\"fixed-light\""},{"value":"\"fixed-dark\""}]}},"type":{"defaultValue":null,"description":"The button's type","name":"type","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"enum","raw":"ButtonInputType","value":[{"value":"\"button\""},{"value":"\"submit\""},{"value":"\"reset\""}]}},"disabled":{"defaultValue":null,"description":"Whether the button should be disabled or not","name":"disabled","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"boolean"}},"rightIcon":{"defaultValue":null,"description":"Icon to place on the right","name":"rightIcon","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"any"}},"leftIcon":{"defaultValue":null,"description":"Icon to place on the left","name":"leftIcon","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"any"}},"success":{"defaultValue":null,"description":"the success props are used when you have async action and wants to display a success message","name":"success","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"boolean"}},"successIcon":{"defaultValue":null,"description":"Success icon name","name":"successIcon","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"any"}},"successText":{"defaultValue":null,"description":"Success text","name":"successText","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"string"}},"loading":{"defaultValue":null,"description":"loading boolean which switches the text to a loader","name":"loading","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"boolean"}},"loaderClassName":{"defaultValue":null,"description":"className which is applied to loader container *","name":"loaderClassName","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"string"}},"style":{"defaultValue":null,"description":"","name":"style","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"React.CSSProperties"}},"active":{"defaultValue":null,"description":"displays the active state","name":"active","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"boolean"}},"id":{"defaultValue":null,"description":"id to pass to the button","name":"id","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"string"}},"marginRight":{"defaultValue":null,"description":"adds 8px margin to the right","name":"marginRight","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"boolean"}},"marginLeft":{"defaultValue":{"value":"false"},"description":"adds 8px margin to the left","name":"marginLeft","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"boolean"}},"ariaLabeledBy":{"defaultValue":null,"description":"element id to describe the button accordingly","name":"ariaLabeledBy","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"string"}},"ariaLabel":{"defaultValue":null,"description":"aria label to provide important when providing only Icon","name":"ariaLabel","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"string"}},"ariaHasPopup":{"defaultValue":null,"description":"aria for a button popup","name":"ariaHasPopup","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"React.HTMLProps<HTMLButtonElement>"}},"ariaExpanded":{"defaultValue":null,"description":"aria to be set if the popup is open","name":"ariaExpanded","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"boolean"}},"ariaControls":{"defaultValue":null,"description":"aria controls - receives id for the controlled region","name":"ariaControls","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"string"}},"aria-describedby":{"defaultValue":null,"description":"","name":"aria-describedby","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"string"}},"aria-hidden":{"defaultValue":null,"description":"aria to be used for screen reader to know if the button is hidden","name":"aria-hidden","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"Booleanish"}},"aria-pressed":{"defaultValue":null,"description":"Indicates the current \"pressed\" state of toggle buttons","name":"aria-pressed","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"boolean | \"true\" | \"false\" | \"mixed\""}},"onFocus":{"defaultValue":null,"description":"On Button Focus callback","name":"onFocus","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"(event: React.FocusEvent<HTMLButtonElement>) => void"}},"onBlur":{"defaultValue":null,"description":"On Button Blur callback","name":"onBlur","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"(event: React.FocusEvent<HTMLButtonElement>) => void"}},"rightFlat":{"defaultValue":null,"description":"","name":"rightFlat","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"boolean"}},"leftFlat":{"defaultValue":null,"description":"","name":"leftFlat","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"boolean"}},"preventClickAnimation":{"defaultValue":null,"description":"","name":"preventClickAnimation","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"boolean"}},"noSidePadding":{"defaultValue":null,"description":"","name":"noSidePadding","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"boolean"}},"defaultTextColorOnPrimaryColor":{"defaultValue":null,"description":"default color for text color in ON_PRIMARY_COLOR kind (should be any type of css color (rbg, var, hex...)","name":"defaultTextColorOnPrimaryColor","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"string"}},"insetFocus":{"defaultValue":null,"description":"Change the focus indicator from around the button to within it","name":"insetFocus","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"boolean"}},"tabIndex":{"defaultValue":null,"description":"Specifies the tab order of an element","name":"tabIndex","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"number"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/AlertBanner/AlertBannerLink/AlertBannerLink.tsx":{"hash":"3b42865d4d6d359c861498eacdd64ac5","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/AlertBanner/AlertBannerLink/AlertBannerLink.tsx","components":[{"displayName":"AlertBannerLink","description":"","props":{"marginLeft":{"defaultValue":{"value":"false"},"description":"If true, a left margin is applied to the link.","name":"marginLeft","parent":{"fileName":"core/src/components/AlertBanner/AlertBannerLink/AlertBannerLink.tsx","name":"AlertBannerLinkProps"},"declarations":[{"fileName":"core/src/components/AlertBanner/AlertBannerLink/AlertBannerLink.tsx","name":"AlertBannerLinkProps"}],"required":false,"type":{"name":"boolean"}},"textClassName":{"defaultValue":null,"description":"Class name applied to the link text.","name":"textClassName","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"string"}},"href":{"defaultValue":null,"description":"The URL the link points to.","name":"href","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"string"}},"text":{"defaultValue":null,"description":"The text content of the link.","name":"text","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"string"}},"rel":{"defaultValue":null,"description":"Specifies the relationship between the current document and the linked resource.","name":"rel","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"string"}},"onClick":{"defaultValue":null,"description":"Callback fired when the link is clicked.","name":"onClick","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"(event: React.MouseEvent) => void"}},"target":{"defaultValue":null,"description":"Specifies where to open the linked document.","name":"target","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"enum","raw":"LinkTarget","value":[{"value":"\"_blank\""},{"value":"\"_self\""},{"value":"\"_parent\""},{"value":"\"_top\""}]}},"ariaLabelDescription":{"defaultValue":null,"description":"The ARIA label description for accessibility.","name":"ariaLabelDescription","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"string"}},"ariaDescribedby":{"defaultValue":null,"description":"The ID of the element that describes this link.","name":"ariaDescribedby","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"string"}},"ariaLabeledBy":{"defaultValue":null,"description":"The ID of the element labeling this link.","name":"ariaLabeledBy","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"string"}},"icon":{"defaultValue":null,"description":"Icon displayed next to the link text.","name":"icon","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"any"}},"iconPosition":{"defaultValue":null,"description":"The position of the icon relative to the text.","name":"iconPosition","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"enum","raw":"LinkIconPosition","value":[{"value":"\"start\""},{"value":"\"end\""}]}},"disableNavigation":{"defaultValue":null,"description":"If true, disables navigation when the link is clicked.","name":"disableNavigation","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"boolean"}},"inheritFontSize":{"defaultValue":null,"description":"If true, the link inherits the surrounding text's font size.","name":"inheritFontSize","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"boolean"}},"inlineText":{"defaultValue":null,"description":"If true, the link is styled to fit within inline text content.","name":"inlineText","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"boolean"}},"color":{"defaultValue":null,"description":"The link's color style","name":"color","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"enum","raw":"LinkColor","value":[{"value":"\"primary\""},{"value":"\"onPrimary\""},{"value":"\"onInverted\""}]}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/AlertBanner/AlertBannerText/AlertBannerText.tsx":{"hash":"2bae993e9aa8972bb3ffbe99e6954d10","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/AlertBanner/AlertBannerText/AlertBannerText.tsx","components":[{"displayName":"AlertBannerText","description":"","props":{"text":{"defaultValue":null,"description":"The text content displayed within the alert banner.","name":"text","parent":{"fileName":"core/src/components/AlertBanner/AlertBannerText/AlertBannerText.tsx","name":"AlertBannerTextProps"},"declarations":[{"fileName":"core/src/components/AlertBanner/AlertBannerText/AlertBannerText.tsx","name":"AlertBannerTextProps"}],"required":true,"type":{"name":"string"}},"marginLeft":{"defaultValue":{"value":"false"},"description":"If true, a left margin is applied to the alert banner text.","name":"marginLeft","parent":{"fileName":"core/src/components/AlertBanner/AlertBannerText/AlertBannerText.tsx","name":"AlertBannerTextProps"},"declarations":[{"fileName":"core/src/components/AlertBanner/AlertBannerText/AlertBannerText.tsx","name":"AlertBannerTextProps"}],"required":false,"type":{"name":"boolean"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/AttentionBox/AttentionBox.tsx":{"hash":"ff1f73b4b8682872ce34a720dec706f8","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/AttentionBox/AttentionBox.tsx","components":[]}},"/Users/talko/Development/vibe/packages/core/src/components/AttentionBox/AttentionBoxLink/AttentionBoxLink.tsx":{"hash":"de569e1d442eef193e2da35404176af5","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/AttentionBox/AttentionBoxLink/AttentionBoxLink.tsx","components":[{"displayName":"AttentionBoxLink","description":"","props":{"textClassName":{"defaultValue":null,"description":"Class name applied to the link text.","name":"textClassName","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"string"}},"href":{"defaultValue":null,"description":"The URL the link points to.","name":"href","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"string"}},"text":{"defaultValue":null,"description":"The text content of the link.","name":"text","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"string"}},"rel":{"defaultValue":null,"description":"Specifies the relationship between the current document and the linked resource.","name":"rel","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"string"}},"onClick":{"defaultValue":null,"description":"Callback fired when the link is clicked.","name":"onClick","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"(event: React.MouseEvent) => void"}},"target":{"defaultValue":{"value":"_self"},"description":"Specifies where to open the linked document.","name":"target","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"enum","raw":"LinkTarget","value":[{"value":"\"_blank\""},{"value":"\"_self\""},{"value":"\"_parent\""},{"value":"\"_top\""}]}},"ariaLabelDescription":{"defaultValue":null,"description":"The ARIA label description for accessibility.","name":"ariaLabelDescription","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"string"}},"ariaDescribedby":{"defaultValue":null,"description":"The ID of the element that describes this link.","name":"ariaDescribedby","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"string"}},"ariaLabeledBy":{"defaultValue":null,"description":"The ID of the element labeling this link.","name":"ariaLabeledBy","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"string"}},"icon":{"defaultValue":null,"description":"Icon displayed next to the link text.","name":"icon","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"any"}},"iconPosition":{"defaultValue":null,"description":"The position of the icon relative to the text.","name":"iconPosition","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"enum","raw":"LinkIconPosition","value":[{"value":"\"start\""},{"value":"\"end\""}]}},"disableNavigation":{"defaultValue":null,"description":"If true, disables navigation when the link is clicked.","name":"disableNavigation","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"boolean"}},"inheritFontSize":{"defaultValue":null,"description":"If true, the link inherits the surrounding text's font size.","name":"inheritFontSize","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"boolean"}},"inlineText":{"defaultValue":null,"description":"If true, the link is styled to fit within inline text content.","name":"inlineText","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"boolean"}},"color":{"defaultValue":null,"description":"The link's color style","name":"color","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"enum","raw":"LinkColor","value":[{"value":"\"primary\""},{"value":"\"onPrimary\""},{"value":"\"onInverted\""}]}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Avatar/Avatar.tsx":{"hash":"a30570f32bb5aad29ac47284b09a8c83","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Avatar/Avatar.tsx","components":[]}},"/Users/talko/Development/vibe/packages/core/src/components/AvatarGroup/AvatarGroup.tsx":{"hash":"f681b29c365a9a0f585450b29427debb","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/AvatarGroup/AvatarGroup.tsx","components":[]}},"/Users/talko/Development/vibe/packages/core/src/components/Badge/Badge.tsx":{"hash":"ac7cc0aeba7ca8795f4f5dc2ce96fc73","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Badge/Badge.tsx","components":[{"displayName":"Badge","description":"","props":{"anchor":{"defaultValue":{"value":"top-end"},"description":"The position of the badge relative to its parent.","name":"anchor","parent":{"fileName":"core/src/components/Badge/Badge.tsx","name":"BadgeBaseProps"},"declarations":[{"fileName":"core/src/components/Badge/Badge.tsx","name":"BadgeBaseProps"}],"required":false,"type":{"name":"enum","raw":"BadgeAnchor","value":[{"value":"\"top-start\""},{"value":"\"top-end\""},{"value":"\"bottom-start\""},{"value":"\"bottom-end\""}]}},"alignment":{"defaultValue":{"value":"rectangular"},"description":"The alignment style of the badge.","name":"alignment","parent":{"fileName":"core/src/components/Badge/Badge.tsx","name":"BadgeBaseProps"},"declarations":[{"fileName":"core/src/components/Badge/Badge.tsx","name":"BadgeBaseProps"}],"required":false,"type":{"name":"enum","raw":"BadgeAlignments","value":[{"value":"\"rectangular\""},{"value":"\"outside\""},{"value":"\"circular\""}]}},"children":{"defaultValue":null,"description":"The content the badge is attached to.","name":"children","parent":{"fileName":"core/src/components/Badge/Badge.tsx","name":"BadgeBaseProps"},"declarations":[{"fileName":"core/src/components/Badge/Badge.tsx","name":"BadgeBaseProps"}],"required":true,"type":{"name":"React.ReactNode"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"type":{"defaultValue":{"value":"indicator"},"description":"The type of badge, set to `\"counter\"` for numeric values.\nThe type of badge, set to `\"indicator\"` for a simple dot.","name":"type","parent":{"fileName":"core/src/components/Badge/Badge.tsx","name":"CounterBadgeProps"},"declarations":[{"fileName":"core/src/components/Badge/Badge.tsx","name":"CounterBadgeProps"},{"fileName":"core/src/components/Badge/Badge.tsx","name":"IndicatorBadgeProps"}],"required":false,"type":{"name":"enum","raw":"\"indicator\" | \"counter\"","value":[{"value":"\"indicator\""},{"value":"\"counter\""}]}},"ariaLabeledBy":{"defaultValue":null,"description":"The ID of the element describing the counter.","name":"ariaLabeledBy","parent":{"fileName":"core/src/components/Counter/Counter.tsx","name":"CounterProps"},"declarations":[{"fileName":"core/src/components/Counter/Counter.tsx","name":"CounterProps"}],"required":false,"type":{"name":"string"}},"counterClassName":{"defaultValue":null,"description":"Class name applied to the counter element.","name":"counterClassName","parent":{"fileName":"core/src/components/Counter/Counter.tsx","name":"CounterProps"},"declarations":[{"fileName":"core/src/components/Counter/Counter.tsx","name":"CounterProps"}],"required":false,"type":{"name":"string"}},"count":{"defaultValue":null,"description":"The numeric value displayed in the counter.","name":"count","parent":{"fileName":"core/src/components/Counter/Counter.tsx","name":"CounterProps"},"declarations":[{"fileName":"core/src/components/Counter/Counter.tsx","name":"CounterProps"}],"required":false,"type":{"name":"number"}},"ariaLabel":{"defaultValue":null,"description":"The label of the counter for accessibility.","name":"ariaLabel","parent":{"fileName":"core/src/components/Counter/Counter.tsx","name":"CounterProps"},"declarations":[{"fileName":"core/src/components/Counter/Counter.tsx","name":"CounterProps"}],"required":false,"type":{"name":"string"}},"size":{"defaultValue":null,"description":"The size of the counter.","name":"size","parent":{"fileName":"core/src/components/Counter/Counter.tsx","name":"CounterProps"},"declarations":[{"fileName":"core/src/components/Counter/Counter.tsx","name":"CounterProps"}],"required":false,"type":{"name":"enum","raw":"CounterSize","value":[{"value":"\"xs\""},{"value":"\"small\""},{"value":"\"large\""}]}},"kind":{"defaultValue":null,"description":"The visual style of the counter.","name":"kind","parent":{"fileName":"core/src/components/Counter/Counter.tsx","name":"CounterProps"},"declarations":[{"fileName":"core/src/components/Counter/Counter.tsx","name":"CounterProps"}],"required":false,"type":{"name":"enum","raw":"CounterType","value":[{"value":"\"fill\""},{"value":"\"line\""}]}},"color":{"defaultValue":null,"description":"The color of the counter.\nThe color of the indicator.","name":"color","parent":{"fileName":"core/src/components/Counter/Counter.tsx","name":"CounterProps"},"declarations":[{"fileName":"core/src/components/Counter/Counter.tsx","name":"CounterProps"},{"fileName":"core/src/components/Badge/Indicator/Indicator.tsx","name":"IndicatorProps"}],"required":false,"type":{"name":"enum","raw":"\"primary\" | \"dark\" | \"negative\" | \"light\" | \"notification\"","value":[{"value":"\"primary\""},{"value":"\"dark\""},{"value":"\"negative\""},{"value":"\"light\""},{"value":"\"notification\""}]}},"maxDigits":{"defaultValue":null,"description":"The maximum number of digits displayed before truncation.","name":"maxDigits","parent":{"fileName":"core/src/components/Counter/Counter.tsx","name":"CounterProps"},"declarations":[{"fileName":"core/src/components/Counter/Counter.tsx","name":"CounterProps"}],"required":false,"type":{"name":"number"}},"prefix":{"defaultValue":null,"description":"Text prepended to the counter value.","name":"prefix","parent":{"fileName":"core/src/components/Counter/Counter.tsx","name":"CounterProps"},"declarations":[{"fileName":"core/src/components/Counter/Counter.tsx","name":"CounterProps"}],"required":false,"type":{"name":"string"}},"onMouseDown":{"defaultValue":null,"description":"Callback fired when the counter is clicked.","name":"onMouseDown","parent":{"fileName":"core/src/components/Counter/Counter.tsx","name":"CounterProps"},"declarations":[{"fileName":"core/src/components/Counter/Counter.tsx","name":"CounterProps"}],"required":false,"type":{"name":"(event: React.MouseEvent<HTMLSpanElement>) => void"}},"noAnimation":{"defaultValue":null,"description":"If true, disables counter animations.","name":"noAnimation","parent":{"fileName":"core/src/components/Counter/Counter.tsx","name":"CounterProps"},"declarations":[{"fileName":"core/src/components/Counter/Counter.tsx","name":"CounterProps"}],"required":false,"type":{"name":"boolean"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Box/Box.tsx":{"hash":"b7b6751634024f51553122fcba5d929d","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Box/Box.tsx","components":[{"displayName":"Box","description":"","props":{"elementType":{"defaultValue":{"value":"div"},"description":"The HTML element or custom component used as the root.","name":"elementType","parent":{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"},"declarations":[{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"}],"required":false,"type":{"name":"string"}},"children":{"defaultValue":null,"description":"The content inside the box.","name":"children","parent":{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"},"declarations":[{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"}],"required":false,"type":{"name":"ElementContent"}},"disabled":{"defaultValue":null,"description":"If true, the box is disabled.","name":"disabled","parent":{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"},"declarations":[{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"}],"required":false,"type":{"name":"boolean"}},"border":{"defaultValue":null,"description":"If true, applies a border to the box.","name":"border","parent":{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"},"declarations":[{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"}],"required":false,"type":{"name":"boolean"}},"borderColor":{"defaultValue":null,"description":"The color of the border.","name":"borderColor","parent":{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"},"declarations":[{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"}],"required":false,"type":{"name":"enum","raw":"BorderColor","value":[{"value":"\"uiBorderColor\""},{"value":"\"layoutBorderColor\""}]}},"rounded":{"defaultValue":null,"description":"The border radius of the box.","name":"rounded","parent":{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"},"declarations":[{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"}],"required":false,"type":{"name":"enum","raw":"RoundedSize","value":[{"value":"\"big\""},{"value":"\"small\""},{"value":"\"medium\""}]}},"shadow":{"defaultValue":null,"description":"The shadow style applied to the box.","name":"shadow","parent":{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"},"declarations":[{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"}],"required":false,"type":{"name":"enum","raw":"Shadow","value":[{"value":"\"small\""},{"value":"\"medium\""},{"value":"\"xs\""},{"value":"\"large\""}]}},"margin":{"defaultValue":null,"description":"The margin applied to all sides.","name":"margin","parent":{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"},"declarations":[{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"}],"required":false,"type":{"name":"enum","raw":"BoxSize","value":[{"value":"\"small\""},{"value":"\"medium\""},{"value":"\"xs\""},{"value":"\"large\""},{"value":"\"xl\""},{"value":"\"xxl\""},{"value":"\"xxxl\""},{"value":"\"auto\""}]}},"marginX":{"defaultValue":null,"description":"The horizontal margin.","name":"marginX","parent":{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"},"declarations":[{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"}],"required":false,"type":{"name":"enum","raw":"BoxSize","value":[{"value":"\"small\""},{"value":"\"medium\""},{"value":"\"xs\""},{"value":"\"large\""},{"value":"\"xl\""},{"value":"\"xxl\""},{"value":"\"xxxl\""},{"value":"\"auto\""}]}},"marginY":{"defaultValue":null,"description":"The vertical margin.","name":"marginY","parent":{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"},"declarations":[{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"}],"required":false,"type":{"name":"enum","raw":"BoxSize","value":[{"value":"\"small\""},{"value":"\"medium\""},{"value":"\"xs\""},{"value":"\"large\""},{"value":"\"xl\""},{"value":"\"xxl\""},{"value":"\"xxxl\""},{"value":"\"auto\""}]}},"marginTop":{"defaultValue":null,"description":"The top margin.","name":"marginTop","parent":{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"},"declarations":[{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"}],"required":false,"type":{"name":"enum","raw":"BoxSize","value":[{"value":"\"small\""},{"value":"\"medium\""},{"value":"\"xs\""},{"value":"\"large\""},{"value":"\"xl\""},{"value":"\"xxl\""},{"value":"\"xxxl\""},{"value":"\"auto\""}]}},"marginEnd":{"defaultValue":null,"description":"The end (right in LTR, left in RTL) margin.","name":"marginEnd","parent":{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"},"declarations":[{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"}],"required":false,"type":{"name":"enum","raw":"BoxSize","value":[{"value":"\"small\""},{"value":"\"medium\""},{"value":"\"xs\""},{"value":"\"large\""},{"value":"\"xl\""},{"value":"\"xxl\""},{"value":"\"xxxl\""},{"value":"\"auto\""}]}},"marginBottom":{"defaultValue":null,"description":"The bottom margin.","name":"marginBottom","parent":{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"},"declarations":[{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"}],"required":false,"type":{"name":"enum","raw":"BaseBoxSize","value":[{"value":"\"small\""},{"value":"\"medium\""},{"value":"\"xs\""},{"value":"\"large\""},{"value":"\"xl\""},{"value":"\"xxl\""},{"value":"\"xxxl\""}]}},"marginStart":{"defaultValue":null,"description":"The start (left in LTR, right in RTL) margin.","name":"marginStart","parent":{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"},"declarations":[{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"}],"required":false,"type":{"name":"enum","raw":"BaseBoxSize","value":[{"value":"\"small\""},{"value":"\"medium\""},{"value":"\"xs\""},{"value":"\"large\""},{"value":"\"xl\""},{"value":"\"xxl\""},{"value":"\"xxxl\""}]}},"padding":{"defaultValue":null,"description":"The padding applied to all sides.","name":"padding","parent":{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"},"declarations":[{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"}],"required":false,"type":{"name":"enum","raw":"BaseBoxSize","value":[{"value":"\"small\""},{"value":"\"medium\""},{"value":"\"xs\""},{"value":"\"large\""},{"value":"\"xl\""},{"value":"\"xxl\""},{"value":"\"xxxl\""}]}},"paddingX":{"defaultValue":null,"description":"The horizontal padding.","name":"paddingX","parent":{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"},"declarations":[{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"}],"required":false,"type":{"name":"enum","raw":"BaseBoxSize","value":[{"value":"\"small\""},{"value":"\"medium\""},{"value":"\"xs\""},{"value":"\"large\""},{"value":"\"xl\""},{"value":"\"xxl\""},{"value":"\"xxxl\""}]}},"paddingY":{"defaultValue":null,"description":"The vertical padding.","name":"paddingY","parent":{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"},"declarations":[{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"}],"required":false,"type":{"name":"enum","raw":"BaseBoxSize","value":[{"value":"\"small\""},{"value":"\"medium\""},{"value":"\"xs\""},{"value":"\"large\""},{"value":"\"xl\""},{"value":"\"xxl\""},{"value":"\"xxxl\""}]}},"paddingTop":{"defaultValue":null,"description":"The top padding.","name":"paddingTop","parent":{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"},"declarations":[{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"}],"required":false,"type":{"name":"enum","raw":"BaseBoxSize","value":[{"value":"\"small\""},{"value":"\"medium\""},{"value":"\"xs\""},{"value":"\"large\""},{"value":"\"xl\""},{"value":"\"xxl\""},{"value":"\"xxxl\""}]}},"paddingEnd":{"defaultValue":null,"description":"The end (right in LTR, left in RTL) padding.","name":"paddingEnd","parent":{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"},"declarations":[{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"}],"required":false,"type":{"name":"enum","raw":"BaseBoxSize","value":[{"value":"\"small\""},{"value":"\"medium\""},{"value":"\"xs\""},{"value":"\"large\""},{"value":"\"xl\""},{"value":"\"xxl\""},{"value":"\"xxxl\""}]}},"paddingBottom":{"defaultValue":null,"description":"The bottom padding.","name":"paddingBottom","parent":{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"},"declarations":[{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"}],"required":false,"type":{"name":"enum","raw":"BaseBoxSize","value":[{"value":"\"small\""},{"value":"\"medium\""},{"value":"\"xs\""},{"value":"\"large\""},{"value":"\"xl\""},{"value":"\"xxl\""},{"value":"\"xxxl\""}]}},"paddingStart":{"defaultValue":null,"description":"The start (left in LTR, right in RTL) padding.","name":"paddingStart","parent":{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"},"declarations":[{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"}],"required":false,"type":{"name":"enum","raw":"BaseBoxSize","value":[{"value":"\"small\""},{"value":"\"medium\""},{"value":"\"xs\""},{"value":"\"large\""},{"value":"\"xl\""},{"value":"\"xxl\""},{"value":"\"xxxl\""}]}},"backgroundColor":{"defaultValue":null,"description":"The background color of the box.","name":"backgroundColor","parent":{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"},"declarations":[{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"}],"required":false,"type":{"name":"enum","raw":"BackgroundColor","value":[{"value":"\"primaryBackgroundColor\""},{"value":"\"secondaryBackgroundColor\""},{"value":"\"greyBackgroundColor\""},{"value":"\"allgreyBackgroundColor\""},{"value":"\"invertedColorBackground\""}]}},"textColor":{"defaultValue":null,"description":"The text color inside the box.","name":"textColor","parent":{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"},"declarations":[{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"}],"required":false,"type":{"name":"enum","raw":"BoxTextColor","value":[{"value":"\"primaryTextColor\""},{"value":"\"textColorOnInverted\""},{"value":"\"secondaryTextColor\""}]}},"scrollable":{"defaultValue":null,"description":"If true, the box content is scrollable.","name":"scrollable","parent":{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"},"declarations":[{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"}],"required":false,"type":{"name":"boolean"}},"style":{"defaultValue":null,"description":"Inline styles applied to the box.","name":"style","parent":{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"},"declarations":[{"fileName":"core/src/components/Box/Box.tsx","name":"BoxProps"}],"required":false,"type":{"name":"React.CSSProperties"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/BreadcrumbsBar/BreadcrumbsBar.tsx":{"hash":"030f15567f16607b21dfb66c5efdabb8","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/BreadcrumbsBar/BreadcrumbsBar.tsx","components":[]}},"/Users/talko/Development/vibe/packages/core/src/components/BreadcrumbsBar/BreadcrumbItem/BreadcrumbItem.tsx":{"hash":"6fde12921f8d0db29e54542c984569ba","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/BreadcrumbsBar/BreadcrumbItem/BreadcrumbItem.tsx","components":[]}},"/Users/talko/Development/vibe/packages/core/src/components/BreadcrumbsBar/BreadcrumbMenu/BreadcrumbMenu.tsx":{"hash":"97b4b4c7b10a5c91c88ce5f0d2e8b480","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/BreadcrumbsBar/BreadcrumbMenu/BreadcrumbMenu.tsx","components":[{"displayName":"BreadcrumbMenu","description":"","props":{"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/BreadcrumbsBar/BreadcrumbMenu/BreadcrumbMenuItem/BreadcrumbMenuItem.tsx":{"hash":"6bbaeb9ebadce10133ec502548839b15","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/BreadcrumbsBar/BreadcrumbMenu/BreadcrumbMenuItem/BreadcrumbMenuItem.tsx","components":[]}},"/Users/talko/Development/vibe/packages/core/src/components/Button/Button.tsx":{"hash":"5c7285e88d62fc92f8086f020628a81f","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Button/Button.tsx","components":[{"displayName":"Button","description":"","props":{"className":{"defaultValue":null,"description":"Custom class names to pass to the component","name":"className","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"string"}},"activeButtonClassName":{"defaultValue":null,"description":"","name":"activeButtonClassName","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"string"}},"kind":{"defaultValue":{"value":"primary"},"description":"The button's kind","name":"kind","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"enum","raw":"ButtonType","value":[{"value":"\"primary\""},{"value":"\"secondary\""},{"value":"\"tertiary\""}]}},"onClick":{"defaultValue":null,"description":"Callback function to run when the button is clicked","name":"onClick","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"(event: React.MouseEvent<HTMLButtonElement>) => void"}},"onMouseDown":{"defaultValue":null,"description":"","name":"onMouseDown","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"(event: React.MouseEvent<HTMLButtonElement>) => void"}},"blurOnMouseUp":{"defaultValue":{"value":"true"},"description":"Blur on button click","name":"blurOnMouseUp","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"boolean"}},"name":{"defaultValue":{"value":"undefined"},"description":"Name of the button - for form submit usages","name":"name","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"string"}},"size":{"defaultValue":{"value":"medium"},"description":"The button's size","name":"size","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"enum","raw":"ButtonSize","value":[{"value":"\"xxs\""},{"value":"\"xs\""},{"value":"\"small\""},{"value":"\"medium\""},{"value":"\"large\""}]}},"color":{"defaultValue":{"value":"primary"},"description":"The button's color","name":"color","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"enum","raw":"ButtonColor","value":[{"value":"\"primary\""},{"value":"\"positive\""},{"value":"\"negative\""},{"value":"\"inverted\""},{"value":"\"on-primary-color\""},{"value":"\"on-inverted-background\""},{"value":"\"brand\""},{"value":"\"fixed-light\""},{"value":"\"fixed-dark\""}]}},"type":{"defaultValue":{"value":"button"},"description":"The button's type","name":"type","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"enum","raw":"ButtonInputType","value":[{"value":"\"button\""},{"value":"\"submit\""},{"value":"\"reset\""}]}},"disabled":{"defaultValue":{"value":"false"},"description":"Whether the button should be disabled or not","name":"disabled","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"boolean"}},"rightIcon":{"defaultValue":{"value":"null"},"description":"Icon to place on the right","name":"rightIcon","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"any"}},"leftIcon":{"defaultValue":{"value":"null"},"description":"Icon to place on the left","name":"leftIcon","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"any"}},"success":{"defaultValue":{"value":"false"},"description":"the success props are used when you have async action and wants to display a success message","name":"success","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"boolean"}},"successIcon":{"defaultValue":{"value":"null"},"description":"Success icon name","name":"successIcon","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"any"}},"successText":{"defaultValue":{"value":""},"description":"Success text","name":"successText","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"string"}},"loading":{"defaultValue":{"value":"false"},"description":"loading boolean which switches the text to a loader","name":"loading","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"boolean"}},"loaderClassName":{"defaultValue":{"value":"undefined"},"description":"className which is applied to loader container *","name":"loaderClassName","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"string"}},"style":{"defaultValue":{"value":"undefined"},"description":"","name":"style","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"React.CSSProperties"}},"active":{"defaultValue":{"value":"false"},"description":"displays the active state","name":"active","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"boolean"}},"id":{"defaultValue":null,"description":"id to pass to the button","name":"id","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"string"}},"marginRight":{"defaultValue":{"value":"false"},"description":"adds 8px margin to the right","name":"marginRight","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"boolean"}},"marginLeft":{"defaultValue":{"value":"false"},"description":"adds 8px margin to the left","name":"marginLeft","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"boolean"}},"ariaLabeledBy":{"defaultValue":{"value":"undefined"},"description":"element id to describe the button accordingly","name":"ariaLabeledBy","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"string"}},"ariaLabel":{"defaultValue":{"value":"undefined"},"description":"aria label to provide important when providing only Icon","name":"ariaLabel","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"string"}},"ariaHasPopup":{"defaultValue":{"value":"undefined"},"description":"aria for a button popup","name":"ariaHasPopup","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"React.HTMLProps<HTMLButtonElement>"}},"ariaExpanded":{"defaultValue":{"value":"undefined"},"description":"aria to be set if the popup is open","name":"ariaExpanded","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"boolean"}},"ariaControls":{"defaultValue":{"value":"undefined"},"description":"aria controls - receives id for the controlled region","name":"ariaControls","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"string"}},"aria-describedby":{"defaultValue":null,"description":"","name":"aria-describedby","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"string"}},"aria-hidden":{"defaultValue":null,"description":"aria to be used for screen reader to know if the button is hidden","name":"aria-hidden","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"Booleanish"}},"aria-pressed":{"defaultValue":null,"description":"Indicates the current \"pressed\" state of toggle buttons","name":"aria-pressed","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"boolean | \"true\" | \"false\" | \"mixed\""}},"onFocus":{"defaultValue":null,"description":"On Button Focus callback","name":"onFocus","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"(event: React.FocusEvent<HTMLButtonElement>) => void"}},"onBlur":{"defaultValue":null,"description":"On Button Blur callback","name":"onBlur","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"(event: React.FocusEvent<HTMLButtonElement>) => void"}},"rightFlat":{"defaultValue":{"value":"false"},"description":"","name":"rightFlat","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"boolean"}},"leftFlat":{"defaultValue":{"value":"false"},"description":"","name":"leftFlat","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"boolean"}},"preventClickAnimation":{"defaultValue":{"value":"false"},"description":"","name":"preventClickAnimation","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"boolean"}},"noSidePadding":{"defaultValue":{"value":"false"},"description":"","name":"noSidePadding","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"boolean"}},"defaultTextColorOnPrimaryColor":{"defaultValue":{"value":null},"description":"default color for text color in ON_PRIMARY_COLOR kind (should be any type of css color (rbg, var, hex...)","name":"defaultTextColorOnPrimaryColor","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"string"}},"insetFocus":{"defaultValue":{"value":"false"},"description":"Change the focus indicator from around the button to within it","name":"insetFocus","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"boolean"}},"tabIndex":{"defaultValue":null,"description":"Specifies the tab order of an element","name":"tabIndex","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"number"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/ButtonGroup/ButtonGroup.tsx":{"hash":"cdb4f6719da593ef63e844e91de0e4e6","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/ButtonGroup/ButtonGroup.tsx","components":[{"displayName":"ButtonGroup","description":"","props":{"options":{"defaultValue":null,"description":"The list of button options.","name":"options","parent":{"fileName":"core/src/components/ButtonGroup/ButtonGroup.tsx","name":"ButtonGroupProps"},"declarations":[{"fileName":"core/src/components/ButtonGroup/ButtonGroup.tsx","name":"ButtonGroupProps"}],"required":true,"type":{"name":"ButtonGroupOption[]"}},"value":{"defaultValue":{"value":""},"description":"The currently selected button value.","name":"value","parent":{"fileName":"core/src/components/ButtonGroup/ButtonGroup.tsx","name":"ButtonGroupProps"},"declarations":[{"fileName":"core/src/components/ButtonGroup/ButtonGroup.tsx","name":"ButtonGroupProps"}],"required":false,"type":{"name":"ButtonValue"}},"onSelect":{"defaultValue":null,"description":"Callback fired when a button is selected.","name":"onSelect","parent":{"fileName":"core/src/components/ButtonGroup/ButtonGroup.tsx","name":"ButtonGroupProps"},"declarations":[{"fileName":"core/src/components/ButtonGroup/ButtonGroup.tsx","name":"ButtonGroupProps"}],"required":false,"type":{"name":"(value: ButtonValue, name: string) => void"}},"size":{"defaultValue":{"value":"small"},"description":"The size of the buttons.","name":"size","parent":{"fileName":"core/src/components/ButtonGroup/ButtonGroup.tsx","name":"ButtonGroupProps"},"declarations":[{"fileName":"core/src/components/ButtonGroup/ButtonGroup.tsx","name":"ButtonGroupProps"}],"required":false,"type":{"name":"enum","raw":"ButtonSize","value":[{"value":"\"xxs\""},{"value":"\"xs\""},{"value":"\"small\""},{"value":"\"medium\""},{"value":"\"large\""}]}},"kind":{"defaultValue":{"value":"secondary"},"description":"The style variant of the buttons.","name":"kind","parent":{"fileName":"core/src/components/ButtonGroup/ButtonGroup.tsx","name":"ButtonGroupProps"},"declarations":[{"fileName":"core/src/components/ButtonGroup/ButtonGroup.tsx","name":"ButtonGroupProps"}],"required":false,"type":{"name":"enum","raw":"\"secondary\" | \"tertiary\"","value":[{"value":"\"secondary\""},{"value":"\"tertiary\""}]}},"name":{"defaultValue":{"value":""},"description":"The name of the button group.","name":"name","parent":{"fileName":"core/src/components/ButtonGroup/ButtonGroup.tsx","name":"ButtonGroupProps"},"declarations":[{"fileName":"core/src/components/ButtonGroup/ButtonGroup.tsx","name":"ButtonGroupProps"}],"required":false,"type":{"name":"string"}},"disabled":{"defaultValue":{"value":"false"},"description":"If true, disables all buttons in the group.","name":"disabled","parent":{"fileName":"core/src/components/ButtonGroup/ButtonGroup.tsx","name":"ButtonGroupProps"},"declarations":[{"fileName":"core/src/components/ButtonGroup/ButtonGroup.tsx","name":"ButtonGroupProps"}],"required":false,"type":{"name":"boolean"}},"groupAriaLabel":{"defaultValue":{"value":""},"description":"The label of the button group for accessibility.","name":"groupAriaLabel","parent":{"fileName":"core/src/components/ButtonGroup/ButtonGroup.tsx","name":"ButtonGroupProps"},"declarations":[{"fileName":"core/src/components/ButtonGroup/ButtonGroup.tsx","name":"ButtonGroupProps"}],"required":false,"type":{"name":"string"}},"tooltipPosition":{"defaultValue":null,"description":"The position of the tooltip relative to the button.","name":"tooltipPosition","parent":{"fileName":"core/src/components/ButtonGroup/ButtonGroup.tsx","name":"ButtonGroupProps"},"declarations":[{"fileName":"core/src/components/ButtonGroup/ButtonGroup.tsx","name":"ButtonGroupProps"}],"required":false,"type":{"name":"enum","raw":"TooltipPositions","value":[{"value":"\"top\""},{"value":"\"right\""},{"value":"\"bottom\""},{"value":"\"left\""}]}},"tooltipHideDelay":{"defaultValue":null,"description":"The delay in milliseconds before the tooltip hides.","name":"tooltipHideDelay","parent":{"fileName":"core/src/components/ButtonGroup/ButtonGroup.tsx","name":"ButtonGroupProps"},"declarations":[{"fileName":"core/src/components/ButtonGroup/ButtonGroup.tsx","name":"ButtonGroupProps"}],"required":false,"type":{"name":"number"}},"tooltipShowDelay":{"defaultValue":null,"description":"The delay in milliseconds before the tooltip shows.","name":"tooltipShowDelay","parent":{"fileName":"core/src/components/ButtonGroup/ButtonGroup.tsx","name":"ButtonGroupProps"},"declarations":[{"fileName":"core/src/components/ButtonGroup/ButtonGroup.tsx","name":"ButtonGroupProps"}],"required":false,"type":{"name":"number"}},"tooltipContainerSelector":{"defaultValue":null,"description":"CSS selector for the tooltip container.","name":"tooltipContainerSelector","parent":{"fileName":"core/src/components/ButtonGroup/ButtonGroup.tsx","name":"ButtonGroupProps"},"declarations":[{"fileName":"core/src/components/ButtonGroup/ButtonGroup.tsx","name":"ButtonGroupProps"}],"required":false,"type":{"name":"string"}},"tooltipMoveBy":{"defaultValue":null,"description":"Adjusts the tooltip position.","name":"tooltipMoveBy","parent":{"fileName":"core/src/components/ButtonGroup/ButtonGroup.tsx","name":"ButtonGroupProps"},"declarations":[{"fileName":"core/src/components/ButtonGroup/ButtonGroup.tsx","name":"ButtonGroupProps"}],"required":false,"type":{"name":"MoveBy"}},"children":{"defaultValue":null,"description":"The content inside the button group.","name":"children","parent":{"fileName":"core/src/components/ButtonGroup/ButtonGroup.tsx","name":"ButtonGroupProps"},"declarations":[{"fileName":"core/src/components/ButtonGroup/ButtonGroup.tsx","name":"ButtonGroupProps"}],"required":false,"type":{"name":"React.ReactNode"}},"fullWidth":{"defaultValue":{"value":"false"},"description":"If true, makes the button group take the full width of its container.","name":"fullWidth","parent":{"fileName":"core/src/components/ButtonGroup/ButtonGroup.tsx","name":"ButtonGroupProps"},"declarations":[{"fileName":"core/src/components/ButtonGroup/ButtonGroup.tsx","name":"ButtonGroupProps"}],"required":false,"type":{"name":"boolean"}},"blurOnMouseUp":{"defaultValue":{"value":"true"},"description":"If true, removes focus from the button after clicking.","name":"blurOnMouseUp","parent":{"fileName":"core/src/components/ButtonGroup/ButtonGroup.tsx","name":"ButtonGroupProps"},"declarations":[{"fileName":"core/src/components/ButtonGroup/ButtonGroup.tsx","name":"ButtonGroupProps"}],"required":false,"type":{"name":"boolean"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Checkbox/Checkbox.tsx":{"hash":"1af2e6690968fff19775586b89b1160c","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Checkbox/Checkbox.tsx","components":[{"displayName":"Checkbox","description":"","props":{"checkboxClassName":{"defaultValue":null,"description":"Class name applied to the checkbox element.","name":"checkboxClassName","parent":{"fileName":"core/src/components/Checkbox/Checkbox.tsx","name":"CheckBoxProps"},"declarations":[{"fileName":"core/src/components/Checkbox/Checkbox.tsx","name":"CheckBoxProps"}],"required":false,"type":{"name":"string"}},"labelClassName":{"defaultValue":null,"description":"Class name applied to the label element.","name":"labelClassName","parent":{"fileName":"core/src/components/Checkbox/Checkbox.tsx","name":"CheckBoxProps"},"declarations":[{"fileName":"core/src/components/Checkbox/Checkbox.tsx","name":"CheckBoxProps"}],"required":false,"type":{"name":"string"}},"ariaLabel":{"defaultValue":null,"description":"The label of the checkbox for accessibility.","name":"ariaLabel","parent":{"fileName":"core/src/components/Checkbox/Checkbox.tsx","name":"CheckBoxProps"},"declarations":[{"fileName":"core/src/components/Checkbox/Checkbox.tsx","name":"CheckBoxProps"}],"required":false,"type":{"name":"string"}},"label":{"defaultValue":null,"description":"The content displayed next to the checkbox.","name":"label","parent":{"fileName":"core/src/components/Checkbox/Checkbox.tsx","name":"CheckBoxProps"},"declarations":[{"fileName":"core/src/components/Checkbox/Checkbox.tsx","name":"CheckBoxProps"}],"required":false,"type":{"name":"any"}},"ariaLabelledBy":{"defaultValue":null,"description":"The ID of an element describing the checkbox.","name":"ariaLabelledBy","parent":{"fileName":"core/src/components/Checkbox/Checkbox.tsx","name":"CheckBoxProps"},"declarations":[{"fileName":"core/src/components/Checkbox/Checkbox.tsx","name":"CheckBoxProps"}],"required":false,"type":{"name":"string"}},"onChange":{"defaultValue":null,"description":"Callback fired when the checkbox value changes.","name":"onChange","parent":{"fileName":"core/src/components/Checkbox/Checkbox.tsx","name":"CheckBoxProps"},"declarations":[{"fileName":"core/src/components/Checkbox/Checkbox.tsx","name":"CheckBoxProps"}],"required":false,"type":{"name":"(event: React.ChangeEvent<HTMLInputElement>) => void"}},"checked":{"defaultValue":null,"description":"If true, controls the checked state of the checkbox.","name":"checked","parent":{"fileName":"core/src/components/Checkbox/Checkbox.tsx","name":"CheckBoxProps"},"declarations":[{"fileName":"core/src/components/Checkbox/Checkbox.tsx","name":"CheckBoxProps"}],"required":false,"type":{"name":"boolean"}},"indeterminate":{"defaultValue":{"value":"false"},"description":"If true, displays an indeterminate state.","name":"indeterminate","parent":{"fileName":"core/src/components/Checkbox/Checkbox.tsx","name":"CheckBoxProps"},"declarations":[{"fileName":"core/src/components/Checkbox/Checkbox.tsx","name":"CheckBoxProps"}],"required":false,"type":{"name":"boolean"}},"autoFocus":{"defaultValue":null,"description":"If true, the checkbox automatically receives focus.","name":"autoFocus","parent":{"fileName":"core/src/components/Checkbox/Checkbox.tsx","name":"CheckBoxProps"},"declarations":[{"fileName":"core/src/components/Checkbox/Checkbox.tsx","name":"CheckBoxProps"}],"required":false,"type":{"name":"boolean"}},"disabled":{"defaultValue":{"value":"false"},"description":"If true, the checkbox is disabled.","name":"disabled","parent":{"fileName":"core/src/components/Checkbox/Checkbox.tsx","name":"CheckBoxProps"},"declarations":[{"fileName":"core/src/components/Checkbox/Checkbox.tsx","name":"CheckBoxProps"}],"required":false,"type":{"name":"boolean"}},"defaultChecked":{"defaultValue":null,"description":"The initial checked state of the checkbox.","name":"defaultChecked","parent":{"fileName":"core/src/components/Checkbox/Checkbox.tsx","name":"CheckBoxProps"},"declarations":[{"fileName":"core/src/components/Checkbox/Checkbox.tsx","name":"CheckBoxProps"}],"required":false,"type":{"name":"boolean"}},"value":{"defaultValue":{"value":""},"description":"The value submitted with the form when checked.","name":"value","parent":{"fileName":"core/src/components/Checkbox/Checkbox.tsx","name":"CheckBoxProps"},"declarations":[{"fileName":"core/src/components/Checkbox/Checkbox.tsx","name":"CheckBoxProps"}],"required":false,"type":{"name":"string"}},"name":{"defaultValue":{"value":""},"description":"The name of the checkbox, used for form submission.","name":"name","parent":{"fileName":"core/src/components/Checkbox/Checkbox.tsx","name":"CheckBoxProps"},"declarations":[{"fileName":"core/src/components/Checkbox/Checkbox.tsx","name":"CheckBoxProps"}],"required":false,"type":{"name":"string"}},"tabIndex":{"defaultValue":null,"description":"The tab order of the checkbox.","name":"tabIndex","parent":{"fileName":"core/src/components/Checkbox/Checkbox.tsx","name":"CheckBoxProps"},"declarations":[{"fileName":"core/src/components/Checkbox/Checkbox.tsx","name":"CheckBoxProps"}],"required":false,"type":{"name":"number"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Chips/Chips.tsx":{"hash":"5ecb4a299030819ddc83ed6d41fea6a8","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Chips/Chips.tsx","components":[{"displayName":"Chips","description":"","props":{"label":{"defaultValue":{"value":""},"description":"The text or content displayed inside the chip.","name":"label","parent":{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"},"declarations":[{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"}],"required":false,"type":{"name":"ElementContent"}},"disabled":{"defaultValue":{"value":"false"},"description":"If true, the chip is disabled.","name":"disabled","parent":{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"},"declarations":[{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"}],"required":false,"type":{"name":"boolean"}},"readOnly":{"defaultValue":{"value":"false"},"description":"If true, the chip is read-only and cannot be deleted.","name":"readOnly","parent":{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"},"declarations":[{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"}],"required":false,"type":{"name":"boolean"}},"rightRenderer":{"defaultValue":null,"description":"A React element displayed on the right side.","name":"rightRenderer","parent":{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"},"declarations":[{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"}],"required":false,"type":{"name":"ElementContent"}},"leftRenderer":{"defaultValue":null,"description":"A React element displayed on the left side.","name":"leftRenderer","parent":{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"},"declarations":[{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"}],"required":false,"type":{"name":"ElementContent"}},"rightIcon":{"defaultValue":{"value":"null"},"description":"Icon displayed on the right side.","name":"rightIcon","parent":{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"},"declarations":[{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"}],"required":false,"type":{"name":"any"}},"leftIcon":{"defaultValue":{"value":"null"},"description":"Icon displayed on the left side.","name":"leftIcon","parent":{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"},"declarations":[{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"}],"required":false,"type":{"name":"any"}},"rightAvatar":{"defaultValue":{"value":"null"},"description":"Image URL or text for an avatar displayed on the right.","name":"rightAvatar","parent":{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"},"declarations":[{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"}],"required":false,"type":{"name":"string"}},"rightAvatarType":{"defaultValue":{"value":"img"},"description":"The type of avatar displayed on the right.","name":"rightAvatarType","parent":{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"},"declarations":[{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"}],"required":false,"type":{"name":"enum","raw":"AvatarType","value":[{"value":"\"img\""},{"value":"\"icon\""},{"value":"\"text\""}]}},"leftAvatar":{"defaultValue":{"value":"null"},"description":"Image URL or text for an avatar displayed on the left.","name":"leftAvatar","parent":{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"},"declarations":[{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"}],"required":false,"type":{"name":"string"}},"leftAvatarType":{"defaultValue":{"value":"img"},"description":"The type of avatar displayed on the left.","name":"leftAvatarType","parent":{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"},"declarations":[{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"}],"required":false,"type":{"name":"enum","raw":"AvatarType","value":[{"value":"\"img\""},{"value":"\"icon\""},{"value":"\"text\""}]}},"iconClassName":{"defaultValue":null,"description":"Class name applied to left or right icons.","name":"iconClassName","parent":{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"},"declarations":[{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"}],"required":false,"type":{"name":"string"}},"avatarClassName":{"defaultValue":null,"description":"Class name applied to left or right avatars.","name":"avatarClassName","parent":{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"},"declarations":[{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"}],"required":false,"type":{"name":"string"}},"color":{"defaultValue":{"value":"primary"},"description":"The background color of the chip.","name":"color","parent":{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"},"declarations":[{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"}],"required":false,"type":{"name":"enum","raw":"\"grass_green\" | \"done-green\" | \"bright-green\" | \"saladish\" | \"egg_yolk\" | \"working_orange\" | \"dark-orange\" | \"peach\" | \"sunset\" | \"stuck-red\" | \"dark-red\" | \"sofia_pink\" | \"lipstick\" | ... 28 more ... | \"warning\"","value":[{"value":"\"grass_green\""},{"value":"\"done-green\""},{"value":"\"bright-green\""},{"value":"\"saladish\""},{"value":"\"egg_yolk\""},{"value":"\"working_orange\""},{"value":"\"dark-orange\""},{"value":"\"peach\""},{"value":"\"sunset\""},{"value":"\"stuck-red\""},{"value":"\"dark-red\""},{"value":"\"sofia_pink\""},{"value":"\"lipstick\""},{"value":"\"bubble\""},{"value":"\"purple\""},{"value":"\"dark_purple\""},{"value":"\"berry\""},{"value":"\"indigo\""},{"value":"\"navy\""},{"value":"\"bright-blue\""},{"value":"\"dark-blue\""},{"value":"\"aquamarine\""},{"value":"\"chili-blue\""},{"value":"\"river\""},{"value":"\"winter\""},{"value":"\"explosive\""},{"value":"\"american_gray\""},{"value":"\"brown\""},{"value":"\"orchid\""},{"value":"\"tan\""},{"value":"\"sky\""},{"value":"\"coffee\""},{"value":"\"royal\""},{"value":"\"teal\""},{"value":"\"lavender\""},{"value":"\"steel\""},{"value":"\"lilac\""},{"value":"\"pecan\""},{"value":"\"positive\""},{"value":"\"negative\""},{"value":"\"primary\""},{"value":"\"warning\""}]}},"iconSize":{"defaultValue":{"value":"18"},"description":"The size of the icons inside the chip.","name":"iconSize","parent":{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"},"declarations":[{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"}],"required":false,"type":{"name":"string | number"}},"onDelete":{"defaultValue":{"value":"(_id: string, _e: React.MouseEvent<HTMLSpanElement>) => {}"},"description":"Callback fired when the chip is deleted.","name":"onDelete","parent":{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"},"declarations":[{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"}],"required":false,"type":{"name":"(id: string, event: React.MouseEvent<HTMLSpanElement>) => void"}},"noAnimation":{"defaultValue":{"value":"true"},"description":"If true, disables the chip's entry animation.","name":"noAnimation","parent":{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"},"declarations":[{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"}],"required":false,"type":{"name":"boolean"}},"allowTextSelection":{"defaultValue":{"value":"false"},"description":"If true, allows the user to select text inside the chip.","name":"allowTextSelection","parent":{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"},"declarations":[{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"}],"required":false,"type":{"name":"boolean"}},"onMouseDown":{"defaultValue":null,"description":"Callback fired when the mouse button is pressed on the chip.","name":"onMouseDown","parent":{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"},"declarations":[{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"}],"required":false,"type":{"name":"(event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void"}},"onClick":{"defaultValue":null,"description":"Callback fired when the chip is clicked.","name":"onClick","parent":{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"},"declarations":[{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"}],"required":false,"type":{"name":"(event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void"}},"ariaLabel":{"defaultValue":null,"description":"The label of the chip for accessibility.","name":"ariaLabel","parent":{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"},"declarations":[{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"}],"required":false,"type":{"name":"string"}},"disableClickableBehavior":{"defaultValue":{"value":"false"},"description":"If true, disables all click behaviors.","name":"disableClickableBehavior","parent":{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"},"declarations":[{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"}],"required":false,"type":{"name":"boolean"}},"showBorder":{"defaultValue":{"value":"false"},"description":"If true, displays a border around the chip.","name":"showBorder","parent":{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"},"declarations":[{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"}],"required":false,"type":{"name":"boolean"}},"closeButtonAriaLabel":{"defaultValue":{"value":"Remove"},"description":"The label for the close button.","name":"closeButtonAriaLabel","parent":{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"},"declarations":[{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"}],"required":false,"type":{"name":"string"}},"noMargin":{"defaultValue":{"value":"false"},"description":"If true, removes the default margin from the chip.","name":"noMargin","parent":{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"},"declarations":[{"fileName":"core/src/components/Chips/Chips.tsx","name":"ChipsProps"}],"required":false,"type":{"name":"boolean"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Clickable/Clickable.tsx":{"hash":"33c58b8533c556506e0c905ee4b81593","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Clickable/Clickable.tsx","components":[{"displayName":"Clickable","description":"","props":{"elementType":{"defaultValue":{"value":"div"},"description":"The HTML element or custom component used as the root.","name":"elementType","parent":{"fileName":"core/src/components/Clickable/Clickable.tsx","name":"ClickableProps"},"declarations":[{"fileName":"core/src/components/Clickable/Clickable.tsx","name":"ClickableProps"}],"required":false,"type":{"name":"string"}},"children":{"defaultValue":null,"description":"The content inside the clickable element.","name":"children","parent":{"fileName":"core/src/components/Clickable/Clickable.tsx","name":"ClickableProps"},"declarations":[{"fileName":"core/src/components/Clickable/Clickable.tsx","name":"ClickableProps"}],"required":false,"type":{"name":"React.ReactNode"}},"role":{"defaultValue":{"value":"button"},"description":"The ARIA role of the element.","name":"role","parent":{"fileName":"core/src/components/Clickable/Clickable.tsx","name":"ClickableProps"},"declarations":[{"fileName":"core/src/components/Clickable/Clickable.tsx","name":"ClickableProps"}],"required":false,"type":{"name":"AriaRole"}},"onClick":{"defaultValue":null,"description":"Callback fired when the element is clicked.","name":"onClick","parent":{"fileName":"core/src/components/Clickable/Clickable.tsx","name":"ClickableProps"},"declarations":[{"fileName":"core/src/components/Clickable/Clickable.tsx","name":"ClickableProps"}],"required":false,"type":{"name":"(event: any) => void"}},"enableTextSelection":{"defaultValue":{"value":"false"},"description":"If true, allows text selection inside the element.","name":"enableTextSelection","parent":{"fileName":"core/src/components/Clickable/Clickable.tsx","name":"ClickableProps"},"declarations":[{"fileName":"core/src/components/Clickable/Clickable.tsx","name":"ClickableProps"}],"required":false,"type":{"name":"boolean"}},"onMouseDown":{"defaultValue":null,"description":"Callback fired when the mouse button is pressed down on the element.","name":"onMouseDown","parent":{"fileName":"core/src/components/Clickable/Clickable.tsx","name":"ClickableProps"},"declarations":[{"fileName":"core/src/components/Clickable/Clickable.tsx","name":"ClickableProps"}],"required":false,"type":{"name":"(event: React.MouseEvent) => void"}},"onMouseEnter":{"defaultValue":null,"description":"Callback fired when the mouse enters the element.","name":"onMouseEnter","parent":{"fileName":"core/src/components/Clickable/Clickable.tsx","name":"ClickableProps"},"declarations":[{"fileName":"core/src/components/Clickable/Clickable.tsx","name":"ClickableProps"}],"required":false,"type":{"name":"(event: React.MouseEvent) => void"}},"onMouseLeave":{"defaultValue":null,"description":"Callback fired when the mouse leaves the element.","name":"onMouseLeave","parent":{"fileName":"core/src/components/Clickable/Clickable.tsx","name":"ClickableProps"},"declarations":[{"fileName":"core/src/components/Clickable/Clickable.tsx","name":"ClickableProps"}],"required":false,"type":{"name":"(event: React.MouseEvent) => void"}},"ariaLabel":{"defaultValue":null,"description":"The label of the element for accessibility.","name":"ariaLabel","parent":{"fileName":"core/src/components/Clickable/Clickable.tsx","name":"ClickableProps"},"declarations":[{"fileName":"core/src/components/Clickable/Clickable.tsx","name":"ClickableProps"}],"required":false,"type":{"name":"string"}},"ariaHidden":{"defaultValue":null,"description":"If true, hides the element from assistive technologies.","name":"ariaHidden","parent":{"fileName":"core/src/components/Clickable/Clickable.tsx","name":"ClickableProps"},"declarations":[{"fileName":"core/src/components/Clickable/Clickable.tsx","name":"ClickableProps"}],"required":false,"type":{"name":"boolean"}},"ariaHasPopup":{"defaultValue":null,"description":"Indicates the presence of a popup associated with the element.","name":"ariaHasPopup","parent":{"fileName":"core/src/components/Clickable/Clickable.tsx","name":"ClickableProps"},"declarations":[{"fileName":"core/src/components/Clickable/Clickable.tsx","name":"ClickableProps"}],"required":false,"type":{"name":"string | boolean"}},"ariaExpanded":{"defaultValue":null,"description":"If true, indicates that the associated popup is open.","name":"ariaExpanded","parent":{"fileName":"core/src/components/Clickable/Clickable.tsx","name":"ClickableProps"},"declarations":[{"fileName":"core/src/components/Clickable/Clickable.tsx","name":"ClickableProps"}],"required":false,"type":{"name":"boolean"}},"tabIndex":{"defaultValue":{"value":"0"},"description":"The tab order of the element.","name":"tabIndex","parent":{"fileName":"core/src/components/Clickable/Clickable.tsx","name":"ClickableProps"},"declarations":[{"fileName":"core/src/components/Clickable/Clickable.tsx","name":"ClickableProps"}],"required":false,"type":{"name":"string | number"}},"disabled":{"defaultValue":{"value":"false"},"description":"If true, the element is disabled.","name":"disabled","parent":{"fileName":"core/src/components/Clickable/Clickable.tsx","name":"ClickableProps"},"declarations":[{"fileName":"core/src/components/Clickable/Clickable.tsx","name":"ClickableProps"}],"required":false,"type":{"name":"boolean"}},"style":{"defaultValue":null,"description":"Inline styles applied to the element.","name":"style","parent":{"fileName":"core/src/components/Clickable/Clickable.tsx","name":"ClickableProps"},"declarations":[{"fileName":"core/src/components/Clickable/Clickable.tsx","name":"ClickableProps"}],"required":false,"type":{"name":"React.CSSProperties"}},"className":{"defaultValue":{"value":""},"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/ColorPicker/ColorPicker.tsx":{"hash":"793614f46a1f31a5cbbe61d750db59e4","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/ColorPicker/ColorPicker.tsx","components":[{"displayName":"ColorPicker","description":"","props":{"value":{"defaultValue":{"value":""},"description":"The selected color(s).","name":"value","parent":{"fileName":"core/src/components/ColorPicker/ColorPicker.tsx","name":"ColorPickerProps"},"declarations":[{"fileName":"core/src/components/ColorPicker/ColorPicker.tsx","name":"ColorPickerProps"}],"required":false,"type":{"name":"ColorPickerValue"}},"onSave":{"defaultValue":null,"description":"Callback fired when the selected color(s) change.","name":"onSave","parent":{"fileName":"core/src/components/ColorPicker/ColorPicker.tsx","name":"ColorPickerProps"},"declarations":[{"fileName":"core/src/components/ColorPicker/ColorPicker.tsx","name":"ColorPickerProps"}],"required":false,"type":{"name":"(value: ColorPickerArrayValueOnly) => void"}},"ColorIndicatorIcon":{"defaultValue":null,"description":"Icon displayed as an indicator inside the color.","name":"ColorIndicatorIcon","parent":{"fileName":"core/src/components/ColorPicker/ColorPicker.tsx","name":"ColorPickerProps"},"declarations":[{"fileName":"core/src/components/ColorPicker/ColorPicker.tsx","name":"ColorPickerProps"}],"required":false,"type":{"name":"any"}},"SelectedIndicatorIcon":{"defaultValue":null,"description":"Icon displayed when a color is selected.","name":"SelectedIndicatorIcon","parent":{"fileName":"core/src/components/ColorPicker/ColorPicker.tsx","name":"ColorPickerProps"},"declarations":[{"fileName":"core/src/components/ColorPicker/ColorPicker.tsx","name":"ColorPickerProps"}],"required":false,"type":{"name":"any"}},"NoColorIcon":{"defaultValue":null,"description":"Icon used for clearing the color selection.","name":"NoColorIcon","parent":{"fileName":"core/src/components/ColorPicker/ColorPicker.tsx","name":"ColorPickerProps"},"declarations":[{"fileName":"core/src/components/ColorPicker/ColorPicker.tsx","name":"ColorPickerProps"}],"required":false,"type":{"name":"any"}},"colorStyle":{"defaultValue":{"value":"regular"},"description":"The style applied to the colors.","name":"colorStyle","parent":{"fileName":"core/src/components/ColorPicker/ColorPicker.tsx","name":"ColorPickerProps"},"declarations":[{"fileName":"core/src/components/ColorPicker/ColorPicker.tsx","name":"ColorPickerProps"}],"required":false,"type":{"name":"enum","raw":"ColorStyle","value":[{"value":"\"regular\""},{"value":"\"hover\""},{"value":"\"selected\""}]}},"noColorText":{"defaultValue":null,"description":"Text displayed for the \"no color\" option.","name":"noColorText","parent":{"fileName":"core/src/components/ColorPicker/ColorPicker.tsx","name":"ColorPickerProps"},"declarations":[{"fileName":"core/src/components/ColorPicker/ColorPicker.tsx","name":"ColorPickerProps"}],"required":false,"type":{"name":"string"}},"shouldRenderIndicatorWithoutBackground":{"defaultValue":null,"description":"If true, renders the color indicator without a background.","name":"shouldRenderIndicatorWithoutBackground","parent":{"fileName":"core/src/components/ColorPicker/ColorPicker.tsx","name":"ColorPickerProps"},"declarations":[{"fileName":"core/src/components/ColorPicker/ColorPicker.tsx","name":"ColorPickerProps"}],"required":false,"type":{"name":"boolean"}},"isBlackListMode":{"defaultValue":{"value":"true"},"description":"If true, treats the color list as a blacklist rather than a whitelist.","name":"isBlackListMode","parent":{"fileName":"core/src/components/ColorPicker/ColorPicker.tsx","name":"ColorPickerProps"},"declarations":[{"fileName":"core/src/components/ColorPicker/ColorPicker.tsx","name":"ColorPickerProps"}],"required":false,"type":{"name":"boolean"}},"colorsList":{"defaultValue":{"value":"[]"},"description":"The list of colors available for selection.","name":"colorsList","parent":{"fileName":"core/src/components/ColorPicker/ColorPicker.tsx","name":"ColorPickerProps"},"declarations":[{"fileName":"core/src/components/ColorPicker/ColorPicker.tsx","name":"ColorPickerProps"}],"required":false,"type":{"name":"ColorPickerArrayValueOnly"}},"isMultiselect":{"defaultValue":null,"description":"If true, allows selecting multiple colors.","name":"isMultiselect","parent":{"fileName":"core/src/components/ColorPicker/ColorPicker.tsx","name":"ColorPickerProps"},"declarations":[{"fileName":"core/src/components/ColorPicker/ColorPicker.tsx","name":"ColorPickerProps"}],"required":false,"type":{"name":"boolean"}},"colorSize":{"defaultValue":{"value":"medium"},"description":"The size of the color items.","name":"colorSize","parent":{"fileName":"core/src/components/ColorPicker/ColorPicker.tsx","name":"ColorPickerProps"},"declarations":[{"fileName":"core/src/components/ColorPicker/ColorPicker.tsx","name":"ColorPickerProps"}],"required":false,"type":{"name":"enum","raw":"ColorPickerSizes","value":[{"value":"\"small\""},{"value":"\"medium\""},{"value":"\"large\""}]}},"numberOfColorsInLine":{"defaultValue":{"value":"5"},"description":"The number of colors displayed per row.","name":"numberOfColorsInLine","parent":{"fileName":"core/src/components/ColorPicker/ColorPicker.tsx","name":"ColorPickerProps"},"declarations":[{"fileName":"core/src/components/ColorPicker/ColorPicker.tsx","name":"ColorPickerProps"}],"required":false,"type":{"name":"number"}},"focusOnMount":{"defaultValue":null,"description":"If true, the first color is focused when the component mounts.","name":"focusOnMount","parent":{"fileName":"core/src/components/ColorPicker/ColorPicker.tsx","name":"ColorPickerProps"},"declarations":[{"fileName":"core/src/components/ColorPicker/ColorPicker.tsx","name":"ColorPickerProps"}],"required":false,"type":{"name":"boolean"}},"colorShape":{"defaultValue":{"value":"square"},"description":"The shape of the color items.","name":"colorShape","parent":{"fileName":"core/src/components/ColorPicker/ColorPicker.tsx","name":"ColorPickerProps"},"declarations":[{"fileName":"core/src/components/ColorPicker/ColorPicker.tsx","name":"ColorPickerProps"}],"required":false,"type":{"name":"enum","raw":"ColorShapes","value":[{"value":"\"square\""},{"value":"\"circle\""}]}},"forceUseRawColorList":{"defaultValue":null,"description":"Used to force the component render the colorList prop as is. Usually, this flag should not be used. It's intended only for edge cases.\nUsually, only \"monday colors\" will be rendered (unless blacklist mode is used). This flag will override this behavior.","name":"forceUseRawColorList","parent":{"fileName":"core/src/components/ColorPicker/ColorPicker.tsx","name":"ColorPickerProps"},"declarations":[{"fileName":"core/src/components/ColorPicker/ColorPicker.tsx","name":"ColorPickerProps"}],"required":false,"type":{"name":"boolean"}},"showColorNameTooltip":{"defaultValue":null,"description":"Used to enable color name tooltip on each color in the component.\nWhen \"tooltipContentByColor\" is supplied, it will override the color name tooltip.","name":"showColorNameTooltip","parent":{"fileName":"core/src/components/ColorPicker/ColorPicker.tsx","name":"ColorPickerProps"},"declarations":[{"fileName":"core/src/components/ColorPicker/ColorPicker.tsx","name":"ColorPickerProps"}],"required":false,"type":{"name":"boolean"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/ColorPicker/components/ColorPickerContent/ColorPickerContent.tsx":{"hash":"3b2a20bef8a719f676b4d9be558bdc53","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/ColorPicker/components/ColorPickerContent/ColorPickerContent.tsx","components":[{"displayName":"ColorPickerContent","description":"","props":{"value":{"defaultValue":null,"description":"The selected color(s).","name":"value","parent":{"fileName":"core/src/components/ColorPicker/components/ColorPickerContent/ColorPickerContent.tsx","name":"ColorPickerContentProps"},"declarations":[{"fileName":"core/src/components/ColorPicker/components/ColorPickerContent/ColorPickerContent.tsx","name":"ColorPickerContentProps"}],"required":true,"type":{"name":"ColorPickerValue"}},"onValueChange":{"defaultValue":null,"description":"Callback fired when the selected color(s) change.","name":"onValueChange","parent":{"fileName":"core/src/components/ColorPicker/components/ColorPickerContent/ColorPickerContent.tsx","name":"ColorPickerContentProps"},"declarations":[{"fileName":"core/src/components/ColorPicker/components/ColorPickerContent/ColorPickerContent.tsx","name":"ColorPickerContentProps"}],"required":true,"type":{"name":"(value: ColorPickerArrayValueOnly) => void"}},"colorsList":{"defaultValue":null,"description":"The list of colors available for selection.","name":"colorsList","parent":{"fileName":"core/src/components/ColorPicker/components/ColorPickerContent/ColorPickerContent.tsx","name":"ColorPickerContentProps"},"declarations":[{"fileName":"core/src/components/ColorPicker/components/ColorPickerContent/ColorPickerContent.tsx","name":"ColorPickerContentProps"}],"required":true,"type":{"name":"ColorPickerArrayValueOnly"}},"ColorIndicatorIcon":{"defaultValue":null,"description":"Icon displayed as an indicator inside the color.","name":"ColorIndicatorIcon","parent":{"fileName":"core/src/components/ColorPicker/components/ColorPickerContent/ColorPickerContent.tsx","name":"ColorPickerContentProps"},"declarations":[{"fileName":"core/src/components/ColorPicker/components/ColorPickerContent/ColorPickerContent.tsx","name":"ColorPickerContentProps"}],"required":false,"type":{"name":"any"}},"SelectedIndicatorIcon":{"defaultValue":null,"description":"Icon displayed when a color is selected.","name":"SelectedIndicatorIcon","parent":{"fileName":"core/src/components/ColorPicker/components/ColorPickerContent/ColorPickerContent.tsx","name":"ColorPickerContentProps"},"declarations":[{"fileName":"core/src/components/ColorPicker/components/ColorPickerContent/ColorPickerContent.tsx","name":"ColorPickerContentProps"}],"required":false,"type":{"name":"any"}},"NoColorIcon":{"defaultValue":null,"description":"Icon used for clearing the color selection.","name":"NoColorIcon","parent":{"fileName":"core/src/components/ColorPicker/components/ColorPickerContent/ColorPickerContent.tsx","name":"ColorPickerContentProps"},"declarations":[{"fileName":"core/src/components/ColorPicker/components/ColorPickerContent/ColorPickerContent.tsx","name":"ColorPickerContentProps"}],"required":false,"type":{"name":"any"}},"colorStyle":{"defaultValue":{"value":"regular"},"description":"The style applied to the colors.","name":"colorStyle","parent":{"fileName":"core/src/components/ColorPicker/components/ColorPickerContent/ColorPickerContent.tsx","name":"ColorPickerContentProps"},"declarations":[{"fileName":"core/src/components/ColorPicker/components/ColorPickerContent/ColorPickerContent.tsx","name":"ColorPickerContentProps"}],"required":false,"type":{"name":"enum","raw":"ColorStyle","value":[{"value":"\"regular\""},{"value":"\"hover\""},{"value":"\"selected\""}]}},"colorSize":{"defaultValue":{"value":"BaseSizes.MEDIUM"},"description":"The size of the color items.","name":"colorSize","parent":{"fileName":"core/src/components/ColorPicker/components/ColorPickerContent/ColorPickerContent.tsx","name":"ColorPickerContentProps"},"declarations":[{"fileName":"core/src/components/ColorPicker/components/ColorPickerContent/ColorPickerContent.tsx","name":"ColorPickerContentProps"}],"required":false,"type":{"name":"enum","raw":"ColorPickerSizes","value":[{"value":"\"small\""},{"value":"\"medium\""},{"value":"\"large\""}]}},"colorShape":{"defaultValue":{"value":"square"},"description":"The shape of the color items.","name":"colorShape","parent":{"fileName":"core/src/components/ColorPicker/components/ColorPickerContent/ColorPickerContent.tsx","name":"ColorPickerContentProps"},"declarations":[{"fileName":"core/src/components/ColorPicker/components/ColorPickerContent/ColorPickerContent.tsx","name":"ColorPickerContentProps"}],"required":false,"type":{"name":"enum","raw":"ColorShapes","value":[{"value":"\"square\""},{"value":"\"circle\""}]}},"tooltipContentByColor":{"defaultValue":{"value":"{}"},"description":"Custom tooltip content for specific colors.","name":"tooltipContentByColor","parent":{"fileName":"core/src/components/ColorPicker/components/ColorPickerContent/ColorPickerContent.tsx","name":"ColorPickerContentProps"},"declarations":[{"fileName":"core/src/components/ColorPicker/components/ColorPickerContent/ColorPickerContent.tsx","name":"ColorPickerContentProps"}],"required":false,"type":{"name":"Partial<Record<\"grass_green\" | \"done-green\" | \"bright-green\" | \"saladish\" | \"egg_yolk\" | \"working_orange\" | \"dark-orange\" | \"peach\" | \"sunset\" | \"stuck-red\" | \"dark-red\" | \"sofia_pink\" | ... 27 more ... | \"pecan\", string>>"}},"noColorText":{"defaultValue":null,"description":"Text displayed for the \"no color\" option.","name":"noColorText","parent":{"fileName":"core/src/components/ColorPicker/components/ColorPickerContent/ColorPickerContent.tsx","name":"ColorPickerContentProps"},"declarations":[{"fileName":"core/src/components/ColorPicker/components/ColorPickerContent/ColorPickerContent.tsx","name":"ColorPickerContentProps"}],"required":false,"type":{"name":"string"}},"shouldRenderIndicatorWithoutBackground":{"defaultValue":null,"description":"If true, renders the color indicator without a background.","name":"shouldRenderIndicatorWithoutBackground","parent":{"fileName":"core/src/components/ColorPicker/components/ColorPickerContent/ColorPickerContent.tsx","name":"ColorPickerContentProps"},"declarations":[{"fileName":"core/src/components/ColorPicker/components/ColorPickerContent/ColorPickerContent.tsx","name":"ColorPickerContentProps"}],"required":false,"type":{"name":"boolean"}},"isBlackListMode":{"defaultValue":{"value":"true"},"description":"If true, treats the color list as a blacklist rather than a whitelist.","name":"isBlackListMode","parent":{"fileName":"core/src/components/ColorPicker/components/ColorPickerContent/ColorPickerContent.tsx","name":"ColorPickerContentProps"},"declarations":[{"fileName":"core/src/components/ColorPicker/components/ColorPickerContent/ColorPickerContent.tsx","name":"ColorPickerContentProps"}],"required":false,"type":{"name":"boolean"}},"numberOfColorsInLine":{"defaultValue":{"value":"5"},"description":"The number of colors displayed per row.","name":"numberOfColorsInLine","parent":{"fileName":"core/src/components/ColorPicker/components/ColorPickerContent/ColorPickerContent.tsx","name":"ColorPickerContentProps"},"declarations":[{"fileName":"core/src/components/ColorPicker/components/ColorPickerContent/ColorPickerContent.tsx","name":"ColorPickerContentProps"}],"required":false,"type":{"name":"number"}},"focusOnMount":{"defaultValue":null,"description":"If true, the first color is focused when the component mounts.","name":"focusOnMount","parent":{"fileName":"core/src/components/ColorPicker/components/ColorPickerContent/ColorPickerContent.tsx","name":"ColorPickerContentProps"},"declarations":[{"fileName":"core/src/components/ColorPicker/components/ColorPickerContent/ColorPickerContent.tsx","name":"ColorPickerContentProps"}],"required":false,"type":{"name":"boolean"}},"isMultiselect":{"defaultValue":null,"description":"If true, allows selecting multiple colors.","name":"isMultiselect","parent":{"fileName":"core/src/components/ColorPicker/components/ColorPickerContent/ColorPickerContent.tsx","name":"ColorPickerContentProps"},"declarations":[{"fileName":"core/src/components/ColorPicker/components/ColorPickerContent/ColorPickerContent.tsx","name":"ColorPickerContentProps"}],"required":false,"type":{"name":"boolean"}},"forceUseRawColorList":{"defaultValue":null,"description":"Used to force the component render the colorList prop as is. Usually, this flag should not be used. It's intended only for edge cases.\nUsually, only \"monday colors\" will be rendered (unless blacklist mode is used). This flag will override this behavior.","name":"forceUseRawColorList","parent":{"fileName":"core/src/components/ColorPicker/components/ColorPickerContent/ColorPickerContent.tsx","name":"ColorPickerContentProps"},"declarations":[{"fileName":"core/src/components/ColorPicker/components/ColorPickerContent/ColorPickerContent.tsx","name":"ColorPickerContentProps"}],"required":false,"type":{"name":"boolean"}},"showColorNameTooltip":{"defaultValue":null,"description":"Used to enable color name tooltip on each color in the component.\nWhen \"tooltipContentByColor\" is supplied, it will override the color name tooltip.","name":"showColorNameTooltip","parent":{"fileName":"core/src/components/ColorPicker/components/ColorPickerContent/ColorPickerContent.tsx","name":"ColorPickerContentProps"},"declarations":[{"fileName":"core/src/components/ColorPicker/components/ColorPickerContent/ColorPickerContent.tsx","name":"ColorPickerContentProps"}],"required":false,"type":{"name":"boolean"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Combobox/Combobox.tsx":{"hash":"6ca87d5f1801da785d930db2ce623ef3","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Combobox/Combobox.tsx","components":[{"displayName":"Combobox","description":"","props":{"optionClassName":{"defaultValue":{"value":""},"description":"Class name applied to each option item.","name":"optionClassName","parent":{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"},"declarations":[{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"}],"required":false,"type":{"name":"string"}},"searchWrapperClassName":{"defaultValue":null,"description":"Class name applied to the search wrapper.","name":"searchWrapperClassName","parent":{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"},"declarations":[{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"}],"required":false,"type":{"name":"string"}},"stickyCategoryClassName":{"defaultValue":null,"description":"Class name applied to the sticky category header.","name":"stickyCategoryClassName","parent":{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"},"declarations":[{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"}],"required":false,"type":{"name":"string"}},"placeholder":{"defaultValue":{"value":""},"description":"Placeholder text displayed in the search input.","name":"placeholder","parent":{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"},"declarations":[{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"}],"required":false,"type":{"name":"string"}},"noResultsMessage":{"defaultValue":{"value":"No results found"},"description":"Message displayed when no results are found.","name":"noResultsMessage","parent":{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"},"declarations":[{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"}],"required":false,"type":{"name":"string"}},"disabled":{"defaultValue":{"value":"false"},"description":"If true, the combobox is disabled.","name":"disabled","parent":{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"},"declarations":[{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"}],"required":false,"type":{"name":"boolean"}},"options":{"defaultValue":{"value":"[]"},"description":"The list of available options.","name":"options","parent":{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"},"declarations":[{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"}],"required":false,"type":{"name":"IComboboxOption[]"}},"categories":{"defaultValue":null,"description":"The list of available categories.","name":"categories","parent":{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"},"declarations":[{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"}],"required":false,"type":{"name":"IComboboxCategoryMap"}},"withCategoriesDivider":{"defaultValue":{"value":"false"},"description":"If true, displays a divider between category sections.","name":"withCategoriesDivider","parent":{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"},"declarations":[{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"}],"required":false,"type":{"name":"boolean"}},"size":{"defaultValue":{"value":"medium"},"description":"The size of the combobox.","name":"size","parent":{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"},"declarations":[{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"}],"required":false,"type":{"name":"enum","raw":"ComboboxSizes","value":[{"value":"\"small\""},{"value":"\"medium\""},{"value":"\"large\""}]}},"optionLineHeight":{"defaultValue":{"value":"32"},"description":"The height of each option item.","name":"optionLineHeight","parent":{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"},"declarations":[{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"}],"required":false,"type":{"name":"number"}},"optionsListHeight":{"defaultValue":null,"description":"The height of the options list.","name":"optionsListHeight","parent":{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"},"declarations":[{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"}],"required":false,"type":{"name":"number"}},"autoFocus":{"defaultValue":{"value":"false"},"description":"If true, the search input is focused when the component mounts.","name":"autoFocus","parent":{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"},"declarations":[{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"}],"required":false,"type":{"name":"boolean"}},"onAddNew":{"defaultValue":null,"description":"Callback fired when the \"Add new\" button is clicked.","name":"onAddNew","parent":{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"},"declarations":[{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"}],"required":false,"type":{"name":"(value: string) => void"}},"addNewLabel":{"defaultValue":{"value":"Add new"},"description":"Label displayed for the \"Add new\" button.","name":"addNewLabel","parent":{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"},"declarations":[{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"}],"required":false,"type":{"name":"string | ((label: string) => ElementContent)"}},"filter":{"defaultValue":{"value":"(filterValue: string, options: IComboboxOption[]) =>\n  options.filter(\n    ({ label }: { label: string }) => !filterValue || label.toLowerCase().includes(filterValue.toLowerCase())\n  )"},"description":"Custom filter function for searching options.","name":"filter","parent":{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"},"declarations":[{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"}],"required":false,"type":{"name":"(filterValue: string, options: IComboboxOption[]) => IComboboxOption[]"}},"defaultFilter":{"defaultValue":null,"description":"The default search input","name":"defaultFilter","parent":{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"},"declarations":[{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"}],"required":false,"type":{"name":"string"}},"disableFilter":{"defaultValue":{"value":"false"},"description":"If true, disables filtering.","name":"disableFilter","parent":{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"},"declarations":[{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"}],"required":false,"type":{"name":"boolean"}},"filterValue":{"defaultValue":null,"description":"Controlled search input value.","name":"filterValue","parent":{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"},"declarations":[{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"}],"required":false,"type":{"name":"string"}},"onFilterChanged":{"defaultValue":null,"description":"Callback fired when the search input value changes.","name":"onFilterChanged","parent":{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"},"declarations":[{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"}],"required":false,"type":{"name":"(value: string) => void"}},"loading":{"defaultValue":{"value":"false"},"description":"If true, displays a loading state.","name":"loading","parent":{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"},"declarations":[{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"}],"required":false,"type":{"name":"boolean"}},"onOptionHover":{"defaultValue":null,"description":"Callback fired when an option is hovered.","name":"onOptionHover","parent":{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"},"declarations":[{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"}],"required":false,"type":{"name":"(event: React.MouseEvent, index: number, option: IComboboxOption) => void"}},"onOptionLeave":{"defaultValue":null,"description":"Callback fired when the mouse leaves an option.","name":"onOptionLeave","parent":{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"},"declarations":[{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"}],"required":false,"type":{"name":"() => void"}},"shouldScrollToSelectedItem":{"defaultValue":{"value":"true"},"description":"If true, automatically scrolls to the selected option.","name":"shouldScrollToSelectedItem","parent":{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"},"declarations":[{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"}],"required":false,"type":{"name":"boolean"}},"noResultsRenderer":{"defaultValue":null,"description":"Custom renderer for when no results are found.","name":"noResultsRenderer","parent":{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"},"declarations":[{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"}],"required":false,"type":{"name":"() => Element"}},"stickyCategories":{"defaultValue":{"value":"false"},"description":"If true, keeps categories visible when scrolling.","name":"stickyCategories","parent":{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"},"declarations":[{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"}],"required":false,"type":{"name":"boolean"}},"defaultVisualFocusFirstIndex":{"defaultValue":null,"description":"If true, visually focuses the first item by default.","name":"defaultVisualFocusFirstIndex","parent":{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"},"declarations":[{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"}],"required":false,"type":{"name":"boolean"}},"clearFilterOnSelection":{"defaultValue":{"value":"false"},"description":"If true, clears the search input when an option is selected.","name":"clearFilterOnSelection","parent":{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"},"declarations":[{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"}],"required":false,"type":{"name":"boolean"}},"optionRenderer":{"defaultValue":{"value":"null"},"description":"Custom renderer for options.","name":"optionRenderer","parent":{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"},"declarations":[{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"}],"required":false,"type":{"name":"(option: IComboboxOption) => Element"}},"maxOptionsWithoutScroll":{"defaultValue":null,"description":"Maximum number of options displayed before scrolling.","name":"maxOptionsWithoutScroll","parent":{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"},"declarations":[{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"}],"required":false,"type":{"name":"number"}},"renderOnlyVisibleOptions":{"defaultValue":{"value":"false"},"description":"If true, renders only visible options for performance optimization.","name":"renderOnlyVisibleOptions","parent":{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"},"declarations":[{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"}],"required":false,"type":{"name":"boolean"}},"onClick":{"defaultValue":{"value":"(_optionData: IComboboxOption) => {}"},"description":"Callback fired when an option is clicked.","name":"onClick","parent":{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"},"declarations":[{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"}],"required":false,"type":{"name":"(optionData: IComboboxOption) => void"}},"searchIcon":{"defaultValue":null,"description":"Custom search icon.","name":"searchIcon","parent":{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"},"declarations":[{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"}],"required":false,"type":{"name":"any"}},"searchInputAriaLabel":{"defaultValue":{"value":"Search for content"},"description":"ARIA label for the search input.","name":"searchInputAriaLabel","parent":{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"},"declarations":[{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"}],"required":false,"type":{"name":"string"}},"debounceRate":{"defaultValue":null,"description":"The debounce rate for filtering.","name":"debounceRate","parent":{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"},"declarations":[{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"}],"required":false,"type":{"name":"number"}},"searchInputRef":{"defaultValue":null,"description":"Ref for the search input element.","name":"searchInputRef","parent":{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"},"declarations":[{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"}],"required":false,"type":{"name":"React.RefObject<HTMLInputElement>"}},"renderAction":{"defaultValue":null,"description":"Additional action button inside the search input.","name":"renderAction","parent":{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"},"declarations":[{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"}],"required":false,"type":{"name":"React.ReactElement<(ForwardRefExoticComponent<IconButtonProps & RefAttributes<HTMLElement>> & Required<IconButtonStaticProps>) | (ForwardRefExoticComponent<...> & Required<...>)>"}},"hideRenderActionOnInput":{"defaultValue":null,"description":"If true, hides the additional action when the user types in the search input.","name":"hideRenderActionOnInput","parent":{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"},"declarations":[{"fileName":"core/src/components/Combobox/Combobox.tsx","name":"ComboboxProps"}],"required":false,"type":{"name":"boolean"}},"className":{"defaultValue":{"value":""},"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":{"value":""},"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Counter/Counter.tsx":{"hash":"f2dbdba7aa2223d886cd55d3cb84e10c","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Counter/Counter.tsx","components":[]}},"/Users/talko/Development/vibe/packages/core/src/components/DatePicker/DatePicker.tsx":{"hash":"b37e96db656034a12508d65d3ba18c81","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/DatePicker/DatePicker.tsx","components":[{"displayName":"DatePicker","description":"","props":{"firstDayOfWeek":{"defaultValue":{"value":"1"},"description":"The first day of the week to display.","name":"firstDayOfWeek","parent":{"fileName":"core/src/components/DatePicker/DatePicker.tsx","name":"DatePickerProps"},"declarations":[{"fileName":"core/src/components/DatePicker/DatePicker.tsx","name":"DatePickerProps"}],"required":false,"type":{"name":"enum","raw":"DayOfWeekShape","value":[{"value":"0"},{"value":"1"},{"value":"2"},{"value":"3"},{"value":"4"},{"value":"5"},{"value":"6"}]}},"date":{"defaultValue":null,"description":"The currently selected date.","name":"date","parent":{"fileName":"core/src/components/DatePicker/DatePicker.tsx","name":"DatePickerProps"},"declarations":[{"fileName":"core/src/components/DatePicker/DatePicker.tsx","name":"DatePickerProps"}],"required":false,"type":{"name":"moment.Moment"}},"endDate":{"defaultValue":null,"description":"The end date for range selection mode.","name":"endDate","parent":{"fileName":"core/src/components/DatePicker/DatePicker.tsx","name":"DatePickerProps"},"declarations":[{"fileName":"core/src/components/DatePicker/DatePicker.tsx","name":"DatePickerProps"}],"required":false,"type":{"name":"moment.Moment"}},"onPickDate":{"defaultValue":null,"description":"Callback fired when a date is selected.","name":"onPickDate","parent":{"fileName":"core/src/components/DatePicker/DatePicker.tsx","name":"DatePickerProps"},"declarations":[{"fileName":"core/src/components/DatePicker/DatePicker.tsx","name":"DatePickerProps"}],"required":false,"type":{"name":"(date: any) => void"}},"hideNavigationKeys":{"defaultValue":{"value":"false"},"description":"If true, hides the navigation buttons.","name":"hideNavigationKeys","parent":{"fileName":"core/src/components/DatePicker/DatePicker.tsx","name":"DatePickerProps"},"declarations":[{"fileName":"core/src/components/DatePicker/DatePicker.tsx","name":"DatePickerProps"}],"required":false,"type":{"name":"boolean"}},"enableOutsideDays":{"defaultValue":{"value":"false"},"description":"If true, allows selecting days outside the current month.","name":"enableOutsideDays","parent":{"fileName":"core/src/components/DatePicker/DatePicker.tsx","name":"DatePickerProps"},"declarations":[{"fileName":"core/src/components/DatePicker/DatePicker.tsx","name":"DatePickerProps"}],"required":false,"type":{"name":"boolean"}},"showWeekNumber":{"defaultValue":{"value":"false"},"description":"If true, displays a column with week numbers.","name":"showWeekNumber","parent":{"fileName":"core/src/components/DatePicker/DatePicker.tsx","name":"DatePickerProps"},"declarations":[{"fileName":"core/src/components/DatePicker/DatePicker.tsx","name":"DatePickerProps"}],"required":false,"type":{"name":"boolean"}},"daySize":{"defaultValue":{"value":"40"},"description":"The size of a single day cell.","name":"daySize","parent":{"fileName":"core/src/components/DatePicker/DatePicker.tsx","name":"DatePickerProps"},"declarations":[{"fileName":"core/src/components/DatePicker/DatePicker.tsx","name":"DatePickerProps"}],"required":false,"type":{"name":"number"}},"shouldBlockDay":{"defaultValue":null,"description":"Function to determine if a specific day should be disabled.","name":"shouldBlockDay","parent":{"fileName":"core/src/components/DatePicker/DatePicker.tsx","name":"DatePickerProps"},"declarations":[{"fileName":"core/src/components/DatePicker/DatePicker.tsx","name":"DatePickerProps"}],"required":false,"type":{"name":"(date: moment.Moment) => boolean"}},"range":{"defaultValue":{"value":"false"},"description":"If true, enables date range selection mode.","name":"range","parent":{"fileName":"core/src/components/DatePicker/DatePicker.tsx","name":"DatePickerProps"},"declarations":[{"fileName":"core/src/components/DatePicker/DatePicker.tsx","name":"DatePickerProps"}],"required":false,"type":{"name":"boolean"}},"numberOfMonths":{"defaultValue":{"value":"1"},"description":"The number of months displayed in the calendar.","name":"numberOfMonths","parent":{"fileName":"core/src/components/DatePicker/DatePicker.tsx","name":"DatePickerProps"},"declarations":[{"fileName":"core/src/components/DatePicker/DatePicker.tsx","name":"DatePickerProps"}],"required":false,"type":{"name":"number"}},"shouldBlockYear":{"defaultValue":null,"description":"Function to determine if a specific year should be disabled.","name":"shouldBlockYear","parent":{"fileName":"core/src/components/DatePicker/DatePicker.tsx","name":"DatePickerProps"},"declarations":[{"fileName":"core/src/components/DatePicker/DatePicker.tsx","name":"DatePickerProps"}],"required":false,"type":{"name":"(year: number) => boolean"}},"shouldBlockRange":{"defaultValue":null,"description":"Function to determine if a specific date range should be disabled.","name":"shouldBlockRange","parent":{"fileName":"core/src/components/DatePicker/DatePicker.tsx","name":"DatePickerProps"},"declarations":[{"fileName":"core/src/components/DatePicker/DatePicker.tsx","name":"DatePickerProps"}],"required":false,"type":{"name":"(date: moment.Moment) => boolean"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Dialog/Dialog.tsx":{"hash":"b91cfb91bdde412ad9b3c4122b8e1944","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Dialog/Dialog.tsx","components":[{"displayName":"Dialog","description":"","props":{"referenceWrapperClassName":{"defaultValue":null,"description":"Class name applied to the reference wrapper element.","name":"referenceWrapperClassName","parent":{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"},"declarations":[{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"}],"required":false,"type":{"name":"string"}},"position":{"defaultValue":{"value":"top"},"description":"The placement of the dialog relative to the reference element.","name":"position","parent":{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"},"declarations":[{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"}],"required":false,"type":{"name":"enum","raw":"DialogPosition","value":[{"value":"\"top\""},{"value":"\"left\""},{"value":"\"left-start\""},{"value":"\"left-end\""},{"value":"\"right\""},{"value":"\"right-start\""},{"value":"\"right-end\""},{"value":"\"top-start\""},{"value":"\"top-end\""},{"value":"\"bottom\""},{"value":"\"bottom-start\""},{"value":"\"bottom-end\""}]}},"modifiers":{"defaultValue":{"value":"[] as Modifier<any>[]"},"description":"Custom Popper.js modifiers.\nhttps://popper.js.org/docs/v2/modifiers/","name":"modifiers","parent":{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"},"declarations":[{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"}],"required":false,"type":{"name":"(StrictModifier<any> | Partial<Modifier<any, object>>)[]"}},"startingEdge":{"defaultValue":null,"description":"The starting edge of the dialog.","name":"startingEdge","parent":{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"},"declarations":[{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"}],"required":false,"type":{"name":"string"}},"moveBy":{"defaultValue":{"value":"{ main: 0, secondary: 0 }"},"description":"Offset values for positioning adjustments.\n`main` - horizontal offset\n`secondary` - vertical offset","name":"moveBy","parent":{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"},"declarations":[{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"}],"required":false,"type":{"name":"{ main?: number; secondary?: number; }"}},"showDelay":{"defaultValue":{"value":"100"},"description":"Delay in milliseconds before showing the dialog.","name":"showDelay","parent":{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"},"declarations":[{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"}],"required":false,"type":{"name":"number"}},"hideDelay":{"defaultValue":{"value":"100"},"description":"Delay in milliseconds before hiding the dialog.","name":"hideDelay","parent":{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"},"declarations":[{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"}],"required":false,"type":{"name":"number"}},"showTrigger":{"defaultValue":{"value":"Dialog.hideShowTriggers.MOUSE_ENTER"},"description":"Events that trigger showing the dialog.","name":"showTrigger","parent":{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"},"declarations":[{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"}],"required":false,"type":{"name":"DialogTriggerEvent | DialogTriggerEvent[]"}},"hideTrigger":{"defaultValue":{"value":"Dialog.hideShowTriggers.MOUSE_LEAVE"},"description":"Events that trigger hiding the dialog.","name":"hideTrigger","parent":{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"},"declarations":[{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"}],"required":false,"type":{"name":"DialogTriggerEvent | DialogTriggerEvent[]"}},"showOnDialogEnter":{"defaultValue":{"value":"false"},"description":"If true, prevents closing the dialog when the mouse enters it.","name":"showOnDialogEnter","parent":{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"},"declarations":[{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"}],"required":false,"type":{"name":"boolean"}},"shouldShowOnMount":{"defaultValue":{"value":"false"},"description":"If true, shows the dialog when the component mounts.","name":"shouldShowOnMount","parent":{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"},"declarations":[{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"}],"required":false,"type":{"name":"boolean"}},"disable":{"defaultValue":{"value":"false"},"description":"If true, disables opening the dialog.","name":"disable","parent":{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"},"declarations":[{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"}],"required":false,"type":{"name":"boolean"}},"open":{"defaultValue":{"value":"false"},"description":"Controls the open state of the dialog.","name":"open","parent":{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"},"declarations":[{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"}],"required":false,"type":{"name":"boolean"}},"isOpen":{"defaultValue":null,"description":"Derived state control for managing dialog visibility.","name":"isOpen","parent":{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"},"declarations":[{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"}],"required":false,"type":{"name":"boolean"}},"showTriggerIgnoreClass":{"defaultValue":null,"description":"Classes that prevent showing the dialog when present.","name":"showTriggerIgnoreClass","parent":{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"},"declarations":[{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"}],"required":false,"type":{"name":"string | string[]"}},"hideTriggerIgnoreClass":{"defaultValue":null,"description":"Classes that prevent hiding the dialog when present.","name":"hideTriggerIgnoreClass","parent":{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"},"declarations":[{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"}],"required":false,"type":{"name":"string | string[]"}},"animationType":{"defaultValue":{"value":"Dialog.animationTypes.EXPAND"},"description":"The animation type used for the dialog.","name":"animationType","parent":{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"},"declarations":[{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"}],"required":false,"type":{"name":"enum","raw":"DialogAnimationType","value":[{"value":"\"opacity-and-slide\""},{"value":"\"expand\""}]}},"wrapperClassName":{"defaultValue":null,"description":"Class name applied to the dialog content container.","name":"wrapperClassName","parent":{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"},"declarations":[{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"}],"required":false,"type":{"name":"string"}},"preventAnimationOnMount":{"defaultValue":{"value":"false"},"description":"If true, prevents animation when mounting.","name":"preventAnimationOnMount","parent":{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"},"declarations":[{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"}],"required":false,"type":{"name":"boolean"}},"containerSelector":{"defaultValue":null,"description":"The CSS selector of the container where the dialog is rendered.","name":"containerSelector","parent":{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"},"declarations":[{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"}],"required":false,"type":{"name":"string"}},"tooltip":{"defaultValue":{"value":"false"},"description":"If true, positions the tooltip element.","name":"tooltip","parent":{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"},"declarations":[{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"}],"required":false,"type":{"name":"boolean"}},"tooltipClassName":{"defaultValue":null,"description":"Class name applied to the tooltip element.","name":"tooltipClassName","parent":{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"},"declarations":[{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"}],"required":false,"type":{"name":"string"}},"onDialogDidShow":{"defaultValue":null,"description":"Callback fired when the dialog is shown.","name":"onDialogDidShow","parent":{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"},"declarations":[{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"}],"required":false,"type":{"name":"(event?: any, eventName?: string) => void"}},"onDialogDidHide":{"defaultValue":null,"description":"Callback fired when the dialog is hidden.","name":"onDialogDidHide","parent":{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"},"declarations":[{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"}],"required":false,"type":{"name":"(event: any, eventName: string) => void"}},"onClickOutside":{"defaultValue":null,"description":"Callback fired when clicking outside the dialog.","name":"onClickOutside","parent":{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"},"declarations":[{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"}],"required":false,"type":{"name":"(event: React.MouseEvent) => void"}},"onContentClick":{"defaultValue":null,"description":"Callback fired when clicking inside the dialog content.","name":"onContentClick","parent":{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"},"declarations":[{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"}],"required":false,"type":{"name":"(event: React.MouseEvent) => void"}},"zIndex":{"defaultValue":null,"description":"The z-index applied to the dialog.","name":"zIndex","parent":{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"},"declarations":[{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"}],"required":false,"type":{"name":"number"}},"useDerivedStateFromProps":{"defaultValue":{"value":"false"},"description":"If true, uses derived state from props.","name":"useDerivedStateFromProps","parent":{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"},"declarations":[{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"}],"required":false,"type":{"name":"boolean"}},"hideWhenReferenceHidden":{"defaultValue":{"value":"false"},"description":"If true, makes the dialog disappear when the reference element is hidden.","name":"hideWhenReferenceHidden","parent":{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"},"declarations":[{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"}],"required":false,"type":{"name":"boolean"}},"shouldCallbackOnMount":{"defaultValue":{"value":"false"},"description":"If true, triggers the callback when the dialog mounts.","name":"shouldCallbackOnMount","parent":{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"},"declarations":[{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"}],"required":false,"type":{"name":"boolean"}},"instantShowAndHide":{"defaultValue":{"value":"false"},"description":"If true, instantly shows and hides the dialog without delay.","name":"instantShowAndHide","parent":{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"},"declarations":[{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"}],"required":false,"type":{"name":"boolean"}},"getDynamicShowDelay":{"defaultValue":null,"description":"Callback to dynamically adjust show delay and animation behavior.","name":"getDynamicShowDelay","parent":{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"},"declarations":[{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"}],"required":false,"type":{"name":"() => { showDelay: number; preventAnimation: boolean; }"}},"content":{"defaultValue":null,"description":"The content displayed inside the dialog.","name":"content","parent":{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"},"declarations":[{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"}],"required":false,"type":{"name":"(() => Element) | Element"}},"children":{"defaultValue":null,"description":"The element to position the dialog beside.","name":"children","parent":{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"},"declarations":[{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"}],"required":false,"type":{"name":"string | ReactElement<any, string | JSXElementConstructor<any>> | ReactElement<any, string | JSXElementConstructor<any>>[]"}},"addKeyboardHideShowTriggersByDefault":{"defaultValue":{"value":"false"},"description":"If true, keyboard focus/blur events behave like mouse enter/leave.","name":"addKeyboardHideShowTriggersByDefault","parent":{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"},"declarations":[{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"}],"required":false,"type":{"name":"boolean"}},"disableContainerScroll":{"defaultValue":null,"description":"If true, disables scrolling for the container element.","name":"disableContainerScroll","parent":{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"},"declarations":[{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"}],"required":false,"type":{"name":"string | boolean"}},"observeContentResize":{"defaultValue":{"value":"false"},"description":"Enables the observation of content resize for the popper element.\nWhen set to `true`, a ResizeObserver is attached to the popper content,\nautomatically triggering repositioning when the size of the content changes.\n\nThis is useful for dialogs, tooltips, or popovers with dynamic content\nthat may grow or shrink without a re-render being triggered.","name":"observeContentResize","parent":{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"},"declarations":[{"fileName":"core/src/components/Dialog/Dialog.tsx","name":"DialogProps"}],"required":false,"type":{"name":"boolean"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/DialogContentContainer/DialogContentContainer.tsx":{"hash":"25539224f5689b925bfced9a205d9db9","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/DialogContentContainer/DialogContentContainer.tsx","components":[{"displayName":"DialogContentContainer","description":"","props":{"children":{"defaultValue":null,"description":"The content inside the dialog container.","name":"children","parent":{"fileName":"core/src/components/DialogContentContainer/DialogContentContainer.tsx","name":"DialogContentContainerProps"},"declarations":[{"fileName":"core/src/components/DialogContentContainer/DialogContentContainer.tsx","name":"DialogContentContainerProps"}],"required":false,"type":{"name":"React.ReactNode"}},"ariaLabelledby":{"defaultValue":{"value":""},"description":"The ID of the element that labels this dialog.","name":"ariaLabelledby","parent":{"fileName":"core/src/components/DialogContentContainer/DialogContentContainer.tsx","name":"DialogContentContainerProps"},"declarations":[{"fileName":"core/src/components/DialogContentContainer/DialogContentContainer.tsx","name":"DialogContentContainerProps"}],"required":false,"type":{"name":"string"}},"ariaDescribedby":{"defaultValue":{"value":""},"description":"The ID of the element that describes this dialog.","name":"ariaDescribedby","parent":{"fileName":"core/src/components/DialogContentContainer/DialogContentContainer.tsx","name":"DialogContentContainerProps"},"declarations":[{"fileName":"core/src/components/DialogContentContainer/DialogContentContainer.tsx","name":"DialogContentContainerProps"}],"required":false,"type":{"name":"string"}},"type":{"defaultValue":{"value":"popover"},"description":"The type of dialog.","name":"type","parent":{"fileName":"core/src/components/DialogContentContainer/DialogContentContainer.tsx","name":"DialogContentContainerProps"},"declarations":[{"fileName":"core/src/components/DialogContentContainer/DialogContentContainer.tsx","name":"DialogContentContainerProps"}],"required":false,"type":{"name":"enum","raw":"DialogType","value":[{"value":"\"modal\""},{"value":"\"popover\""}]}},"size":{"defaultValue":{"value":"small"},"description":"The size of the dialog.","name":"size","parent":{"fileName":"core/src/components/DialogContentContainer/DialogContentContainer.tsx","name":"DialogContentContainerProps"},"declarations":[{"fileName":"core/src/components/DialogContentContainer/DialogContentContainer.tsx","name":"DialogContentContainerProps"}],"required":false,"type":{"name":"enum","raw":"DialogSize","value":[{"value":"\"none\""},{"value":"\"small\""},{"value":"\"medium\""},{"value":"\"large\""}]}},"style":{"defaultValue":null,"description":"Custom styles applied to the dialog container.","name":"style","parent":{"fileName":"core/src/components/DialogContentContainer/DialogContentContainer.tsx","name":"DialogContentContainerProps"},"declarations":[{"fileName":"core/src/components/DialogContentContainer/DialogContentContainer.tsx","name":"DialogContentContainerProps"}],"required":false,"type":{"name":"React.CSSProperties"}},"className":{"defaultValue":{"value":""},"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Divider/Divider.tsx":{"hash":"19a8c6f67ef0ddf723da4de90851c4aa","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Divider/Divider.tsx","components":[]}},"/Users/talko/Development/vibe/packages/core/src/components/Dropdown/Dropdown.tsx":{"hash":"fc32be18f2328b4d2183db48e13503f5","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Dropdown/Dropdown.tsx","components":[{"displayName":"Dropdown","description":"","props":{"singleValueWrapperClassName":{"defaultValue":null,"description":"Class name applied to the dropdown's single value wrapper.","name":"singleValueWrapperClassName","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"string"}},"placeholder":{"defaultValue":{"value":""},"description":"Placeholder text displayed when no value is selected.","name":"placeholder","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"string"}},"allowPlaceholderEllipsis":{"defaultValue":null,"description":"If true, the placeholder will be truncated with an ellipsis when too long.","name":"allowPlaceholderEllipsis","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"boolean"}},"disabled":{"defaultValue":{"value":"false"},"description":"If true, the dropdown is disabled.","name":"disabled","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"boolean"}},"readOnly":{"defaultValue":{"value":"false"},"description":"If true, the dropdown is read-only and cannot be edited.","name":"readOnly","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"boolean"}},"onMenuOpen":{"defaultValue":null,"description":"Callback fired when the dropdown menu opens.","name":"onMenuOpen","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"() => void"}},"onMenuClose":{"defaultValue":null,"description":"Callback fired when the dropdown menu closes.","name":"onMenuClose","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"() => void"}},"onKeyDown":{"defaultValue":null,"description":"Callback fired when a key is pressed inside the dropdown.","name":"onKeyDown","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"KeyboardEventHandler"}},"onFocus":{"defaultValue":null,"description":"Callback fired when the dropdown gains focus.","name":"onFocus","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"FocusEventHandler"}},"onBlur":{"defaultValue":null,"description":"Callback fired when the dropdown loses focus.","name":"onBlur","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"FocusEventHandler"}},"onScroll":{"defaultValue":null,"description":"Callback fired when scrolling inside the dropdown.","name":"onScroll","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"UIEventHandler<HTMLDivElement>"}},"onMenuScrollToBottom":{"defaultValue":null,"description":"Callback fired when the user scrolls to the bottom of the menu.","name":"onMenuScrollToBottom","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"WheelEventHandler<HTMLDivElement>"}},"captureMenuScroll":{"defaultValue":{"value":"false"},"description":"If true, prevents scrolling beyond the menu's boundaries.","name":"captureMenuScroll","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"boolean"}},"onChange":{"defaultValue":null,"description":"Callback fired when the selected value changes.","name":"onChange","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"(option: any, meta: any) => void"}},"onInputChange":{"defaultValue":null,"description":"Callback fired when the dropdown input value changes.","name":"onInputChange","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"(newValue: string, actionMeta: InputActionMeta) => void"}},"searchable":{"defaultValue":{"value":"true"},"description":"If true, enables search functionality within the dropdown.","name":"searchable","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"boolean"}},"options":{"defaultValue":{"value":"[]"},"description":"The list of options available in the dropdown.","name":"options","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"any[]"}},"noOptionsMessage":{"defaultValue":null,"description":"Function to customize the \"no options found\" message.","name":"noOptionsMessage","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"(obj: { inputValue: string; }) => string"}},"openMenuOnFocus":{"defaultValue":null,"description":"If true, the menu opens when the dropdown gains focus.","name":"openMenuOnFocus","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"boolean"}},"openMenuOnClick":{"defaultValue":null,"description":"If true, the menu opens when the dropdown is clicked.","name":"openMenuOnClick","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"boolean"}},"clearable":{"defaultValue":{"value":"true"},"description":"If true, displays a clear button inside the dropdown's input.","name":"clearable","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"boolean"}},"optionRenderer":{"defaultValue":null,"description":"Custom renderer for each option.","name":"optionRenderer","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"(option: any) => Element"}},"valueRenderer":{"defaultValue":null,"description":"Custom renderer for the selected value.","name":"valueRenderer","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"any"}},"ValueRenderer":{"defaultValue":null,"description":"Custom renderer for the selected value.","name":"ValueRenderer","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"React.ReactNode"}},"menuRenderer":{"defaultValue":null,"description":"Custom renderer for the dropdown menu.","name":"menuRenderer","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"any"}},"menuPlacement":{"defaultValue":{"value":"bottom"},"description":"The placement of the dropdown menu relative to the input.","name":"menuPlacement","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"enum","raw":"DropdownMenuPlacement","value":[{"value":"\"top\""},{"value":"\"bottom\""},{"value":"\"auto\""}]}},"menuPosition":{"defaultValue":{"value":"absolute"},"description":"The CSS position property of the dropdown menu.","name":"menuPosition","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"enum","raw":"DropdownMenuPosition","value":[{"value":"\"absolute\""},{"value":"\"fixed\""}]}},"rtl":{"defaultValue":null,"description":"If true, the dropdown is displayed in right-to-left mode.","name":"rtl","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"boolean"}},"defaultValue":{"defaultValue":null,"description":"The default selected value.","name":"defaultValue","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"any[]"}},"value":{"defaultValue":null,"description":"The controlled value of the dropdown.","name":"value","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"any"}},"size":{"defaultValue":{"value":"medium"},"description":"The size of the dropdown.","name":"size","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"enum","raw":"DropdownSize","value":[{"value":"\"small\""},{"value":"\"medium\""},{"value":"\"large\""}]}},"asyncOptions":{"defaultValue":null,"description":"Enables async loading of options.","name":"asyncOptions","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"(inputValue: string) => Promise<any[]>"}},"cacheOptions":{"defaultValue":null,"description":"If true, caches async-loaded options.","name":"cacheOptions","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"boolean"}},"defaultOptions":{"defaultValue":null,"description":"If true, `asyncOptions` is invoked on mount.","name":"defaultOptions","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"boolean | any[]"}},"isVirtualized":{"defaultValue":null,"description":"If true, enables virtualization for improved performance.","name":"isVirtualized","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"boolean"}},"menuPortalTarget":{"defaultValue":null,"description":"The target element for the dropdown menu portal.","name":"menuPortalTarget","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"HTMLElement"}},"extraStyles":{"defaultValue":{"value":"(baseStyles: string) => baseStyles"},"description":"Custom styles for the dropdown.","name":"extraStyles","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"(...args: unknown[]) => unknown"}},"maxMenuHeight":{"defaultValue":null,"description":"The maximum height of the menu before scrolling.","name":"maxMenuHeight","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"number"}},"tabIndex":{"defaultValue":{"value":"0"},"description":"The tab index of the dropdown for keyboard navigation.","name":"tabIndex","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"string | number"}},"autoFocus":{"defaultValue":{"value":"false"},"description":"If true, the dropdown input is automatically focused on mount.","name":"autoFocus","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"boolean"}},"multi":{"defaultValue":{"value":"false"},"description":"If true, enables multi-select mode.\nWhen in multi-select mode, the selected value will be an array,\nand it will be displayed as our [`<Chips>`](/?path=/docs/components-chips--sandbox) component.","name":"multi","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"boolean"}},"multiline":{"defaultValue":{"value":"false"},"description":"If true, expands the dropdown to multiple lines when multiple values are selected.","name":"multiline","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"boolean"}},"closeMenuOnSelect":{"defaultValue":{"value":"!multi"},"description":"If true, closes the menu when an option is selected.","name":"closeMenuOnSelect","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"boolean"}},"closeMenuOnScroll":{"defaultValue":null,"description":"If true, closes the menu when scrolling.","name":"closeMenuOnScroll","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"boolean"}},"onOptionRemove":{"defaultValue":null,"description":"Callback fired when an option is removed in multi-select mode.","name":"onOptionRemove","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"(option?: any) => void"}},"withMandatoryDefaultOptions":{"defaultValue":{"value":"false"},"description":"If true, prevents mandatory default options from being removed.","name":"withMandatoryDefaultOptions","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"boolean"}},"isOptionSelected":{"defaultValue":null,"description":"Custom function to determine if an option is selected.","name":"isOptionSelected","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"(option: any, options: any[]) => boolean"}},"insideOverflowContainer":{"defaultValue":{"value":"false"},"description":"If true, allows the dropdown menu to overflow its container.","name":"insideOverflowContainer","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"boolean"}},"insideOverflowWithTransformContainer":{"defaultValue":{"value":"false"},"description":"If true, allows the dropdown menu to overflow its container even with CSS transforms.","name":"insideOverflowWithTransformContainer","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"boolean"}},"insideLayerContext":{"defaultValue":{"value":"false"},"description":"If true, renders the dropdown menu inside its parent container in case it's inside a layer provider.\nUse this prop when the dropdown menu is being cut off by its parent's (such as Modal, Dialog, Tooltip, etc.)overflow settings.","name":"insideLayerContext","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"boolean"}},"tooltipContent":{"defaultValue":{"value":""},"description":"Tooltip content displayed when hovering over the selected value.","name":"tooltipContent","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"string"}},"isLoading":{"defaultValue":{"value":"false"},"description":"If true, displays a loading state inside the dropdown.","name":"isLoading","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"boolean"}},"loadingMessage":{"defaultValue":null,"description":"Function to override the default loading message.","name":"loadingMessage","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"(obj: { inputValue: string; }) => string"}},"ariaLabel":{"defaultValue":null,"description":"The ARIA label for the dropdown.","name":"ariaLabel","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"string"}},"tabSelectsValue":{"defaultValue":{"value":"true"},"description":"If true, enables selecting values with the Tab key.","name":"tabSelectsValue","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"boolean"}},"filterOption":{"defaultValue":null,"description":"Custom function to filter options based on input.","name":"filterOption","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"(option: any, inputValue: string) => boolean"}},"inputValue":{"defaultValue":null,"description":"The current value of the input field.","name":"inputValue","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"string"}},"blurInputOnSelect":{"defaultValue":null,"description":"If true, the input field loses focus when an option is selected.","name":"blurInputOnSelect","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"boolean"}},"OptionRenderer":{"defaultValue":null,"description":"Custom renderer for dropdown options.","name":"OptionRenderer","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"React.ReactNode"}},"menuIsOpen":{"defaultValue":null,"description":"If true, controls the menu open state.","name":"menuIsOpen","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"boolean"}},"onOptionSelect":{"defaultValue":null,"description":"Callback fired when an option is selected.","name":"onOptionSelect","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"(option: any) => void"}},"onClear":{"defaultValue":null,"description":"Callback fired when the clear button is clicked.","name":"onClear","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"() => void"}},"popupsContainerSelector":{"defaultValue":null,"description":"CSS selector for the container where popups are rendered.","name":"popupsContainerSelector","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"string"}},"selectProps":{"defaultValue":null,"description":"Additional properties passed to the `react-select` component.","name":"selectProps","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"Record<string, string>"}},"withGroupDivider":{"defaultValue":{"value":"false"},"description":"If true, displays dividers between grouped options.","name":"withGroupDivider","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"boolean"}},"multiValueDialogClassName":{"defaultValue":null,"description":"","name":"multiValueDialogClassName","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"DropdownComponentProps"}],"required":false,"type":{"name":"string"}},"dropdownMenuWrapperClassName":{"defaultValue":null,"description":"Class name applied to the dropdown menu wrapper.","name":"dropdownMenuWrapperClassName","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"CustomMenuBaseProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"CustomMenuBaseProps"}],"required":false,"type":{"name":"string"}},"menuId":{"defaultValue":{"value":"dropdown-menu-list-id"},"description":"The ID of the menu container.","name":"menuId","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"CustomMenuBaseProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"CustomMenuBaseProps"}],"required":false,"type":{"name":"string"}},"menuAriaLabel":{"defaultValue":{"value":"Dropdown menu"},"description":"The ARIA label for the menu container.","name":"menuAriaLabel","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"CustomMenuBaseProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"CustomMenuBaseProps"}],"required":false,"type":{"name":"string"}},"inputAriaLabel":{"defaultValue":{"value":"Dropdown input"},"description":"The ARIA label for the dropdown input.","name":"inputAriaLabel","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"CustomMenuBaseProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"CustomMenuBaseProps"}],"required":false,"type":{"name":"string"}},"optionWrapperClassName":{"defaultValue":null,"description":"","name":"optionWrapperClassName","parent":{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"CustomOptionBaseProps"},"declarations":[{"fileName":"core/src/components/Dropdown/Dropdown.types.ts","name":"CustomOptionBaseProps"}],"required":false,"type":{"name":"string"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":{"value":"dropdown-menu-id"},"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/EditableHeading/EditableHeading.tsx":{"hash":"ba1b7626966cf674ff078ed7a068c8ed","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/EditableHeading/EditableHeading.tsx","components":[{"displayName":"EditableHeading","description":"","props":{"type":{"defaultValue":{"value":"h1"},"description":"The type of the heading element.","name":"type","parent":{"fileName":"core/src/components/EditableHeading/EditableHeading.tsx","name":"EditableHeadingProps"},"declarations":[{"fileName":"core/src/components/EditableHeading/EditableHeading.tsx","name":"EditableHeadingProps"}],"required":false,"type":{"name":"enum","raw":"HeadingType","value":[{"value":"\"h1\""},{"value":"\"h2\""},{"value":"\"h3\""}]}},"weight":{"defaultValue":{"value":"normal"},"description":"The font weight of the heading.","name":"weight","parent":{"fileName":"core/src/components/EditableHeading/EditableHeading.tsx","name":"EditableHeadingProps"},"declarations":[{"fileName":"core/src/components/EditableHeading/EditableHeading.tsx","name":"EditableHeadingProps"}],"required":false,"type":{"name":"enum","raw":"HeadingWeight","value":[{"value":"\"bold\""},{"value":"\"medium\""},{"value":"\"normal\""},{"value":"\"light\""}]}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"value":{"defaultValue":null,"description":"The current value of the text.","name":"value","parent":{"fileName":"core/src/components/EditableTypography/EditableTypography.tsx","name":"EditableTypographyImplementationProps"},"declarations":[{"fileName":"core/src/components/EditableTypography/EditableTypography.tsx","name":"EditableTypographyImplementationProps"}],"required":true,"type":{"name":"string"}},"onChange":{"defaultValue":null,"description":"Callback fired when the value changes.","name":"onChange","parent":{"fileName":"core/src/components/EditableTypography/EditableTypography.tsx","name":"EditableTypographyImplementationProps"},"declarations":[{"fileName":"core/src/components/EditableTypography/EditableTypography.tsx","name":"EditableTypographyImplementationProps"}],"required":false,"type":{"name":"(value: string) => void"}},"onClick":{"defaultValue":null,"description":"Callback fired when the component is clicked.","name":"onClick","parent":{"fileName":"core/src/components/EditableTypography/EditableTypography.tsx","name":"EditableTypographyImplementationProps"},"declarations":[{"fileName":"core/src/components/EditableTypography/EditableTypography.tsx","name":"EditableTypographyImplementationProps"}],"required":false,"type":{"name":"(event: any) => void"}},"readOnly":{"defaultValue":null,"description":"If true, the text is read-only and cannot be edited.","name":"readOnly","parent":{"fileName":"core/src/components/EditableTypography/EditableTypography.tsx","name":"EditableTypographyImplementationProps"},"declarations":[{"fileName":"core/src/components/EditableTypography/EditableTypography.tsx","name":"EditableTypographyImplementationProps"}],"required":false,"type":{"name":"boolean"}},"placeholder":{"defaultValue":null,"description":"Placeholder text displayed when the value is empty.","name":"placeholder","parent":{"fileName":"core/src/components/EditableTypography/EditableTypography.tsx","name":"EditableTypographyImplementationProps"},"declarations":[{"fileName":"core/src/components/EditableTypography/EditableTypography.tsx","name":"EditableTypographyImplementationProps"}],"required":false,"type":{"name":"string"}},"ariaLabel":{"defaultValue":null,"description":"The label of the component for accessibility.","name":"ariaLabel","parent":{"fileName":"core/src/components/EditableTypography/EditableTypography.tsx","name":"EditableTypographyImplementationProps"},"declarations":[{"fileName":"core/src/components/EditableTypography/EditableTypography.tsx","name":"EditableTypographyImplementationProps"}],"required":false,"type":{"name":"string"}},"isEditMode":{"defaultValue":null,"description":"Controls whether the component is in edit mode.","name":"isEditMode","parent":{"fileName":"core/src/components/EditableTypography/EditableTypography.tsx","name":"EditableTypographyImplementationProps"},"declarations":[{"fileName":"core/src/components/EditableTypography/EditableTypography.tsx","name":"EditableTypographyImplementationProps"}],"required":false,"type":{"name":"boolean"}},"autoSelectTextOnEditMode":{"defaultValue":null,"description":"If true, automatically selects all text when entering edit mode.","name":"autoSelectTextOnEditMode","parent":{"fileName":"core/src/components/EditableTypography/EditableTypography.tsx","name":"EditableTypographyImplementationProps"},"declarations":[{"fileName":"core/src/components/EditableTypography/EditableTypography.tsx","name":"EditableTypographyImplementationProps"}],"required":false,"type":{"name":"boolean"}},"onEditModeChange":{"defaultValue":null,"description":"Callback fired when the edit mode changes.","name":"onEditModeChange","parent":{"fileName":"core/src/components/EditableTypography/EditableTypography.tsx","name":"EditableTypographyImplementationProps"},"declarations":[{"fileName":"core/src/components/EditableTypography/EditableTypography.tsx","name":"EditableTypographyImplementationProps"}],"required":false,"type":{"name":"(isEditMode: boolean) => void"}},"tooltipProps":{"defaultValue":null,"description":"Props to customize the tooltip.","name":"tooltipProps","parent":{"fileName":"core/src/components/EditableTypography/EditableTypography.tsx","name":"EditableTypographyImplementationProps"},"declarations":[{"fileName":"core/src/components/EditableTypography/EditableTypography.tsx","name":"EditableTypographyImplementationProps"}],"required":false,"type":{"name":"Partial<TooltipProps>"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/EditableText/EditableText.tsx":{"hash":"cca6579ee49ddc7a68b5c94f0bcdd4f9","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/EditableText/EditableText.tsx","components":[{"displayName":"EditableText","description":"","props":{"type":{"defaultValue":{"value":"text2"},"description":"The text style variant.","name":"type","parent":{"fileName":"core/src/components/EditableText/EditableText.tsx","name":"EditableTextProps"},"declarations":[{"fileName":"core/src/components/EditableText/EditableText.tsx","name":"EditableTextProps"}],"required":false,"type":{"name":"enum","raw":"TextType","value":[{"value":"\"text1\""},{"value":"\"text2\""},{"value":"\"text3\""}]}},"weight":{"defaultValue":{"value":"normal"},"description":"The font weight of the text.","name":"weight","parent":{"fileName":"core/src/components/EditableText/EditableText.tsx","name":"EditableTextProps"},"declarations":[{"fileName":"core/src/components/EditableText/EditableText.tsx","name":"EditableTextProps"}],"required":false,"type":{"name":"enum","raw":"TextWeight","value":[{"value":"\"bold\""},{"value":"\"medium\""},{"value":"\"normal\""}]}},"multiline":{"defaultValue":null,"description":"If true, enables editing multiple lines of text.","name":"multiline","parent":{"fileName":"core/src/components/EditableText/EditableText.tsx","name":"EditableTextProps"},"declarations":[{"fileName":"core/src/components/EditableText/EditableText.tsx","name":"EditableTextProps"}],"required":false,"type":{"name":"boolean"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"value":{"defaultValue":null,"description":"The current value of the text.","name":"value","parent":{"fileName":"core/src/components/EditableTypography/EditableTypography.tsx","name":"EditableTypographyImplementationProps"},"declarations":[{"fileName":"core/src/components/EditableTypography/EditableTypography.tsx","name":"EditableTypographyImplementationProps"}],"required":true,"type":{"name":"string"}},"onChange":{"defaultValue":null,"description":"Callback fired when the value changes.","name":"onChange","parent":{"fileName":"core/src/components/EditableTypography/EditableTypography.tsx","name":"EditableTypographyImplementationProps"},"declarations":[{"fileName":"core/src/components/EditableTypography/EditableTypography.tsx","name":"EditableTypographyImplementationProps"}],"required":false,"type":{"name":"(value: string) => void"}},"onClick":{"defaultValue":null,"description":"Callback fired when the component is clicked.","name":"onClick","parent":{"fileName":"core/src/components/EditableTypography/EditableTypography.tsx","name":"EditableTypographyImplementationProps"},"declarations":[{"fileName":"core/src/components/EditableTypography/EditableTypography.tsx","name":"EditableTypographyImplementationProps"}],"required":false,"type":{"name":"(event: any) => void"}},"readOnly":{"defaultValue":null,"description":"If true, the text is read-only and cannot be edited.","name":"readOnly","parent":{"fileName":"core/src/components/EditableTypography/EditableTypography.tsx","name":"EditableTypographyImplementationProps"},"declarations":[{"fileName":"core/src/components/EditableTypography/EditableTypography.tsx","name":"EditableTypographyImplementationProps"}],"required":false,"type":{"name":"boolean"}},"placeholder":{"defaultValue":null,"description":"Placeholder text displayed when the value is empty.","name":"placeholder","parent":{"fileName":"core/src/components/EditableTypography/EditableTypography.tsx","name":"EditableTypographyImplementationProps"},"declarations":[{"fileName":"core/src/components/EditableTypography/EditableTypography.tsx","name":"EditableTypographyImplementationProps"}],"required":false,"type":{"name":"string"}},"ariaLabel":{"defaultValue":null,"description":"The label of the component for accessibility.","name":"ariaLabel","parent":{"fileName":"core/src/components/EditableTypography/EditableTypography.tsx","name":"EditableTypographyImplementationProps"},"declarations":[{"fileName":"core/src/components/EditableTypography/EditableTypography.tsx","name":"EditableTypographyImplementationProps"}],"required":false,"type":{"name":"string"}},"isEditMode":{"defaultValue":null,"description":"Controls whether the component is in edit mode.","name":"isEditMode","parent":{"fileName":"core/src/components/EditableTypography/EditableTypography.tsx","name":"EditableTypographyImplementationProps"},"declarations":[{"fileName":"core/src/components/EditableTypography/EditableTypography.tsx","name":"EditableTypographyImplementationProps"}],"required":false,"type":{"name":"boolean"}},"autoSelectTextOnEditMode":{"defaultValue":null,"description":"If true, automatically selects all text when entering edit mode.","name":"autoSelectTextOnEditMode","parent":{"fileName":"core/src/components/EditableTypography/EditableTypography.tsx","name":"EditableTypographyImplementationProps"},"declarations":[{"fileName":"core/src/components/EditableTypography/EditableTypography.tsx","name":"EditableTypographyImplementationProps"}],"required":false,"type":{"name":"boolean"}},"onEditModeChange":{"defaultValue":null,"description":"Callback fired when the edit mode changes.","name":"onEditModeChange","parent":{"fileName":"core/src/components/EditableTypography/EditableTypography.tsx","name":"EditableTypographyImplementationProps"},"declarations":[{"fileName":"core/src/components/EditableTypography/EditableTypography.tsx","name":"EditableTypographyImplementationProps"}],"required":false,"type":{"name":"(isEditMode: boolean) => void"}},"tooltipProps":{"defaultValue":null,"description":"Props to customize the tooltip.","name":"tooltipProps","parent":{"fileName":"core/src/components/EditableTypography/EditableTypography.tsx","name":"EditableTypographyImplementationProps"},"declarations":[{"fileName":"core/src/components/EditableTypography/EditableTypography.tsx","name":"EditableTypographyImplementationProps"}],"required":false,"type":{"name":"Partial<TooltipProps>"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/EmptyState/EmptyState.tsx":{"hash":"ac7c918f5b865a84394668ea2af56542","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/EmptyState/EmptyState.tsx","components":[{"displayName":"EmptyState","description":"","props":{"title":{"defaultValue":null,"description":"Optional title for the empty state","name":"title","parent":{"fileName":"core/src/components/EmptyState/EmptyState.types.ts","name":"EmptyStateProps"},"declarations":[{"fileName":"core/src/components/EmptyState/EmptyState.types.ts","name":"EmptyStateProps"}],"required":false,"type":{"name":"string"}},"description":{"defaultValue":null,"description":"Required description text explaining the empty state","name":"description","parent":{"fileName":"core/src/components/EmptyState/EmptyState.types.ts","name":"EmptyStateProps"},"declarations":[{"fileName":"core/src/components/EmptyState/EmptyState.types.ts","name":"EmptyStateProps"}],"required":true,"type":{"name":"any"}},"visual":{"defaultValue":null,"description":"Optional visual element like image, animation, video, or illustration to display","name":"visual","parent":{"fileName":"core/src/components/EmptyState/EmptyState.types.ts","name":"EmptyStateProps"},"declarations":[{"fileName":"core/src/components/EmptyState/EmptyState.types.ts","name":"EmptyStateProps"}],"required":false,"type":{"name":"React.ReactNode"}},"mainAction":{"defaultValue":null,"description":"Main action button configuration","name":"mainAction","parent":{"fileName":"core/src/components/EmptyState/EmptyState.types.ts","name":"EmptyStateProps"},"declarations":[{"fileName":"core/src/components/EmptyState/EmptyState.types.ts","name":"EmptyStateProps"}],"required":false,"type":{"name":"any"}},"supportingAction":{"defaultValue":null,"description":"Supporting action (link or tertiary button) configuration","name":"supportingAction","parent":{"fileName":"core/src/components/EmptyState/EmptyState.types.ts","name":"EmptyStateProps"},"declarations":[{"fileName":"core/src/components/EmptyState/EmptyState.types.ts","name":"EmptyStateProps"}],"required":false,"type":{"name":"any"}},"layout":{"defaultValue":{"value":"default"},"description":"Layout style of the empty state","name":"layout","parent":{"fileName":"core/src/components/EmptyState/EmptyState.types.ts","name":"EmptyStateProps"},"declarations":[{"fileName":"core/src/components/EmptyState/EmptyState.types.ts","name":"EmptyStateProps"}],"required":false,"type":{"name":"enum","raw":"EmptyStateLayout","value":[{"value":"\"default\""},{"value":"\"compact\""}]}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/ExpandCollapse/ExpandCollapse.tsx":{"hash":"2293603eda539463565f119756bd1e6b","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/ExpandCollapse/ExpandCollapse.tsx","components":[{"displayName":"ExpandCollapse","description":"","props":{"headerComponentRenderer":{"defaultValue":{"value":"null"},"description":"Custom renderer for the header component.","name":"headerComponentRenderer","parent":{"fileName":"core/src/components/ExpandCollapse/ExpandCollapse.tsx","name":"ExpandCollapseProps"},"declarations":[{"fileName":"core/src/components/ExpandCollapse/ExpandCollapse.tsx","name":"ExpandCollapseProps"}],"required":false,"type":{"name":"() => ReactElement<any, string | JSXElementConstructor<any>>"}},"headerClassName":{"defaultValue":null,"description":"Class name applied to the header.","name":"headerClassName","parent":{"fileName":"core/src/components/ExpandCollapse/ExpandCollapse.tsx","name":"ExpandCollapseProps"},"declarations":[{"fileName":"core/src/components/ExpandCollapse/ExpandCollapse.tsx","name":"ExpandCollapseProps"}],"required":false,"type":{"name":"string"}},"contentClassName":{"defaultValue":null,"description":"Class name applied to the content.","name":"contentClassName","parent":{"fileName":"core/src/components/ExpandCollapse/ExpandCollapse.tsx","name":"ExpandCollapseProps"},"declarations":[{"fileName":"core/src/components/ExpandCollapse/ExpandCollapse.tsx","name":"ExpandCollapseProps"}],"required":false,"type":{"name":"string"}},"componentClassName":{"defaultValue":null,"description":"Class name applied to the root component.","name":"componentClassName","parent":{"fileName":"core/src/components/ExpandCollapse/ExpandCollapse.tsx","name":"ExpandCollapseProps"},"declarations":[{"fileName":"core/src/components/ExpandCollapse/ExpandCollapse.tsx","name":"ExpandCollapseProps"}],"required":false,"type":{"name":"string"}},"title":{"defaultValue":{"value":""},"description":"The title displayed in the header.","name":"title","parent":{"fileName":"core/src/components/ExpandCollapse/ExpandCollapse.tsx","name":"ExpandCollapseProps"},"declarations":[{"fileName":"core/src/components/ExpandCollapse/ExpandCollapse.tsx","name":"ExpandCollapseProps"}],"required":false,"type":{"name":"ElementContent"}},"children":{"defaultValue":null,"description":"The content inside the expandable section.","name":"children","parent":{"fileName":"core/src/components/ExpandCollapse/ExpandCollapse.tsx","name":"ExpandCollapseProps"},"declarations":[{"fileName":"core/src/components/ExpandCollapse/ExpandCollapse.tsx","name":"ExpandCollapseProps"}],"required":false,"type":{"name":"ElementContent"}},"iconSize":{"defaultValue":{"value":"24"},"description":"The size of the expand/collapse icon.","name":"iconSize","parent":{"fileName":"core/src/components/ExpandCollapse/ExpandCollapse.tsx","name":"ExpandCollapseProps"},"declarations":[{"fileName":"core/src/components/ExpandCollapse/ExpandCollapse.tsx","name":"ExpandCollapseProps"}],"required":false,"type":{"name":"string | number"}},"iconPosition":{"defaultValue":{"value":"right"},"description":"The position of the icon.","name":"iconPosition","parent":{"fileName":"core/src/components/ExpandCollapse/ExpandCollapse.tsx","name":"ExpandCollapseProps"},"declarations":[{"fileName":"core/src/components/ExpandCollapse/ExpandCollapse.tsx","name":"ExpandCollapseProps"}],"required":false,"type":{"name":"enum","raw":"ExpandCollapseIconPosition","value":[{"value":"\"left\""},{"value":"\"right\""}]}},"defaultOpenState":{"defaultValue":{"value":"false"},"description":"If true, the section is open by default when rendered.","name":"defaultOpenState","parent":{"fileName":"core/src/components/ExpandCollapse/ExpandCollapse.tsx","name":"ExpandCollapseProps"},"declarations":[{"fileName":"core/src/components/ExpandCollapse/ExpandCollapse.tsx","name":"ExpandCollapseProps"}],"required":false,"type":{"name":"boolean"}},"open":{"defaultValue":null,"description":"Controls the open state of the section.","name":"open","parent":{"fileName":"core/src/components/ExpandCollapse/ExpandCollapse.tsx","name":"ExpandCollapseProps"},"declarations":[{"fileName":"core/src/components/ExpandCollapse/ExpandCollapse.tsx","name":"ExpandCollapseProps"}],"required":false,"type":{"name":"boolean"}},"onClick":{"defaultValue":{"value":"null"},"description":"Callback fired when the header is clicked.","name":"onClick","parent":{"fileName":"core/src/components/ExpandCollapse/ExpandCollapse.tsx","name":"ExpandCollapseProps"},"declarations":[{"fileName":"core/src/components/ExpandCollapse/ExpandCollapse.tsx","name":"ExpandCollapseProps"}],"required":false,"type":{"name":"(event: React.MouseEvent) => void"}},"hideBorder":{"defaultValue":{"value":"false"},"description":"If true, hides the border around the component.","name":"hideBorder","parent":{"fileName":"core/src/components/ExpandCollapse/ExpandCollapse.tsx","name":"ExpandCollapseProps"},"declarations":[{"fileName":"core/src/components/ExpandCollapse/ExpandCollapse.tsx","name":"ExpandCollapseProps"}],"required":false,"type":{"name":"boolean"}},"captureOnClick":{"defaultValue":{"value":"true"},"description":"If true, captures the click event on the button.","name":"captureOnClick","parent":{"fileName":"core/src/components/ExpandCollapse/ExpandCollapse.tsx","name":"ExpandCollapseProps"},"declarations":[{"fileName":"core/src/components/ExpandCollapse/ExpandCollapse.tsx","name":"ExpandCollapseProps"}],"required":false,"type":{"name":"boolean"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":{"value":""},"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Flex/Flex.tsx":{"hash":"a00c942177acb6e72cdfd9c7f6187b88","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Flex/Flex.tsx","components":[{"displayName":"Flex","description":"","props":{"style":{"defaultValue":null,"description":"Inline styles applied to the flex container.","name":"style","parent":{"fileName":"core/src/components/Flex/Flex.tsx","name":"FlexProps"},"declarations":[{"fileName":"core/src/components/Flex/Flex.tsx","name":"FlexProps"}],"required":false,"type":{"name":"object"}},"direction":{"defaultValue":{"value":"row"},"description":"The direction of the flex container.","name":"direction","parent":{"fileName":"core/src/components/Flex/Flex.tsx","name":"FlexProps"},"declarations":[{"fileName":"core/src/components/Flex/Flex.tsx","name":"FlexProps"}],"required":false,"type":{"name":"enum","raw":"FlexDirection","value":[{"value":"\"row\""},{"value":"\"column\""}]}},"elementType":{"defaultValue":{"value":"div"},"description":"The HTML element or component used as the root.","name":"elementType","parent":{"fileName":"core/src/components/Flex/Flex.tsx","name":"FlexProps"},"declarations":[{"fileName":"core/src/components/Flex/Flex.tsx","name":"FlexProps"}],"required":false,"type":{"name":"React.ElementType"}},"wrap":{"defaultValue":{"value":"false"},"description":"If true, allows wrapping of flex items.","name":"wrap","parent":{"fileName":"core/src/components/Flex/Flex.tsx","name":"FlexProps"},"declarations":[{"fileName":"core/src/components/Flex/Flex.tsx","name":"FlexProps"}],"required":false,"type":{"name":"boolean"}},"children":{"defaultValue":null,"description":"The content inside the flex container.","name":"children","parent":{"fileName":"core/src/components/Flex/Flex.tsx","name":"FlexProps"},"declarations":[{"fileName":"core/src/components/Flex/Flex.tsx","name":"FlexProps"}],"required":false,"type":{"name":"ElementContent | ElementContent[]"}},"justify":{"defaultValue":{"value":"start"},"description":"Defines how flex items are aligned along the main axis.","name":"justify","parent":{"fileName":"core/src/components/Flex/Flex.tsx","name":"FlexProps"},"declarations":[{"fileName":"core/src/components/Flex/Flex.tsx","name":"FlexProps"}],"required":false,"type":{"name":"enum","raw":"FlexJustify","value":[{"value":"\"start\""},{"value":"\"center\""},{"value":"\"end\""},{"value":"\"stretch\""},{"value":"\"space-around\""},{"value":"\"space-between\""},{"value":"\"initial\""}]}},"align":{"defaultValue":{"value":"center"},"description":"Defines how flex items are aligned along the cross axis.","name":"align","parent":{"fileName":"core/src/components/Flex/Flex.tsx","name":"FlexProps"},"declarations":[{"fileName":"core/src/components/Flex/Flex.tsx","name":"FlexProps"}],"required":false,"type":{"name":"enum","raw":"FlexAlign","value":[{"value":"\"start\""},{"value":"\"center\""},{"value":"\"end\""},{"value":"\"stretch\""},{"value":"\"initial\""},{"value":"\"baseline\""}]}},"gap":{"defaultValue":null,"description":"The gap between flex items.","name":"gap","parent":{"fileName":"core/src/components/Flex/Flex.tsx","name":"FlexProps"},"declarations":[{"fileName":"core/src/components/Flex/Flex.tsx","name":"FlexProps"}],"required":false,"type":{"name":"number | FlexGap"}},"flex":{"defaultValue":null,"description":"The flex shorthand of the flex container.","name":"flex","parent":{"fileName":"core/src/components/Flex/Flex.tsx","name":"FlexProps"},"declarations":[{"fileName":"core/src/components/Flex/Flex.tsx","name":"FlexProps"}],"required":false,"type":{"name":"FlexShorthand"}},"ariaLabel":{"defaultValue":null,"description":"The label of the flex container for accessibility.","name":"ariaLabel","parent":{"fileName":"core/src/components/Flex/Flex.tsx","name":"FlexProps"},"declarations":[{"fileName":"core/src/components/Flex/Flex.tsx","name":"FlexProps"}],"required":false,"type":{"name":"string"}},"tabIndex":{"defaultValue":null,"description":"The tab order of the element.","name":"tabIndex","parent":{"fileName":"core/src/components/Flex/Flex.tsx","name":"FlexProps"},"declarations":[{"fileName":"core/src/components/Flex/Flex.tsx","name":"FlexProps"}],"required":false,"type":{"name":"number"}},"onClick":{"defaultValue":null,"description":"Callback fired when the flex container is clicked.","name":"onClick","parent":{"fileName":"core/src/components/Flex/Flex.tsx","name":"FlexProps"},"declarations":[{"fileName":"core/src/components/Flex/Flex.tsx","name":"FlexProps"}],"required":false,"type":{"name":"(event: React.MouseEvent) => void"}},"ariaLabelledby":{"defaultValue":null,"description":"ID of the element describing the flex container.","name":"ariaLabelledby","parent":{"fileName":"core/src/components/Flex/Flex.tsx","name":"FlexProps"},"declarations":[{"fileName":"core/src/components/Flex/Flex.tsx","name":"FlexProps"}],"required":false,"type":{"name":"string"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/FormattedNumber/FormattedNumber.tsx":{"hash":"266b6f7f8f9c073730e080392e1c7cdd","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/FormattedNumber/FormattedNumber.tsx","components":[{"displayName":"FormattedNumber","description":"","props":{"value":{"defaultValue":null,"description":"The numeric value to format.","name":"value","parent":{"fileName":"core/src/components/FormattedNumber/FormattedNumber.tsx","name":"FormattedNumberProps"},"declarations":[{"fileName":"core/src/components/FormattedNumber/FormattedNumber.tsx","name":"FormattedNumberProps"}],"required":false,"type":{"name":"string | number"}},"prefix":{"defaultValue":null,"description":"The text displayed before the number.","name":"prefix","parent":{"fileName":"core/src/components/FormattedNumber/FormattedNumber.tsx","name":"FormattedNumberProps"},"declarations":[{"fileName":"core/src/components/FormattedNumber/FormattedNumber.tsx","name":"FormattedNumberProps"}],"required":false,"type":{"name":"string"}},"suffix":{"defaultValue":null,"description":"The text displayed after the number.","name":"suffix","parent":{"fileName":"core/src/components/FormattedNumber/FormattedNumber.tsx","name":"FormattedNumberProps"},"declarations":[{"fileName":"core/src/components/FormattedNumber/FormattedNumber.tsx","name":"FormattedNumberProps"}],"required":false,"type":{"name":"string"}},"emptyPlaceHolder":{"defaultValue":{"value":"N/A"},"description":"The text displayed when no value is provided.","name":"emptyPlaceHolder","parent":{"fileName":"core/src/components/FormattedNumber/FormattedNumber.tsx","name":"FormattedNumberProps"},"declarations":[{"fileName":"core/src/components/FormattedNumber/FormattedNumber.tsx","name":"FormattedNumberProps"}],"required":false,"type":{"name":"string"}},"decimalPrecision":{"defaultValue":{"value":"2"},"description":"The number of decimal places to display (0 ~ 20).","name":"decimalPrecision","parent":{"fileName":"core/src/components/FormattedNumber/FormattedNumber.tsx","name":"FormattedNumberProps"},"declarations":[{"fileName":"core/src/components/FormattedNumber/FormattedNumber.tsx","name":"FormattedNumberProps"}],"required":false,"type":{"name":"number"}},"compact":{"defaultValue":{"value":"true"},"description":"If true, formats the number into a compact notation.","name":"compact","parent":{"fileName":"core/src/components/FormattedNumber/FormattedNumber.tsx","name":"FormattedNumberProps"},"declarations":[{"fileName":"core/src/components/FormattedNumber/FormattedNumber.tsx","name":"FormattedNumberProps"}],"required":false,"type":{"name":"boolean"}},"local":{"defaultValue":{"value":"formatNumberConsts.DEFAULT_LOCAL"},"description":"The locale used for formatting (Unicode BCP 47 locale identifier).","name":"local","parent":{"fileName":"core/src/components/FormattedNumber/FormattedNumber.tsx","name":"FormattedNumberProps"},"declarations":[{"fileName":"core/src/components/FormattedNumber/FormattedNumber.tsx","name":"FormattedNumberProps"}],"required":false,"type":{"name":"string"}},"rtl":{"defaultValue":null,"description":"If true, reverses the order of the prefix and suffix.","name":"rtl","parent":{"fileName":"core/src/components/FormattedNumber/FormattedNumber.tsx","name":"FormattedNumberProps"},"declarations":[{"fileName":"core/src/components/FormattedNumber/FormattedNumber.tsx","name":"FormattedNumberProps"}],"required":false,"type":{"name":"boolean"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/GridKeyboardNavigationContext/GridKeyboardNavigationContext.ts":{"hash":"9d6e02ba2b3f9ee3522a45ddbfea5569","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/GridKeyboardNavigationContext/GridKeyboardNavigationContext.ts","components":[]}},"/Users/talko/Development/vibe/packages/core/src/components/Heading/Heading.tsx":{"hash":"4ba0cffcdd8e2721b18c62d9019df401","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Heading/Heading.tsx","components":[{"displayName":"Heading","description":"","props":{"type":{"defaultValue":{"value":"h1"},"description":"The heading type.","name":"type","parent":{"fileName":"core/src/components/Heading/Heading.tsx","name":"HeadingProps"},"declarations":[{"fileName":"core/src/components/Heading/Heading.tsx","name":"HeadingProps"}],"required":false,"type":{"name":"enum","raw":"HeadingType","value":[{"value":"\"h1\""},{"value":"\"h2\""},{"value":"\"h3\""}]}},"weight":{"defaultValue":{"value":"normal"},"description":"The font weight of the heading.","name":"weight","parent":{"fileName":"core/src/components/Heading/Heading.tsx","name":"HeadingProps"},"declarations":[{"fileName":"core/src/components/Heading/Heading.tsx","name":"HeadingProps"}],"required":false,"type":{"name":"enum","raw":"HeadingWeight","value":[{"value":"\"bold\""},{"value":"\"medium\""},{"value":"\"normal\""},{"value":"\"light\""}]}},"align":{"defaultValue":null,"description":"The text alignment.","name":"align","parent":{"fileName":"core/src/components/Heading/Heading.tsx","name":"HeadingProps"},"declarations":[{"fileName":"core/src/components/Heading/Heading.tsx","name":"HeadingProps"}],"required":false,"type":{"name":"enum","raw":"TypographyAlign","value":[{"value":"\"inherit\""},{"value":"\"start\""},{"value":"\"center\""},{"value":"\"end\""}]}},"color":{"defaultValue":null,"description":"The text color.","name":"color","parent":{"fileName":"core/src/components/Heading/Heading.tsx","name":"HeadingProps"},"declarations":[{"fileName":"core/src/components/Heading/Heading.tsx","name":"HeadingProps"}],"required":false,"type":{"name":"enum","raw":"TypographyColor","value":[{"value":"\"inherit\""},{"value":"\"primary\""},{"value":"\"secondary\""},{"value":"\"onPrimary\""},{"value":"\"onInverted\""},{"value":"\"fixedLight\""},{"value":"\"fixedDark\""},{"value":"\"negative\""}]}},"children":{"defaultValue":null,"description":"The content inside the heading.","name":"children","parent":{"fileName":"core/src/components/Heading/Heading.tsx","name":"HeadingProps"},"declarations":[{"fileName":"core/src/components/Heading/Heading.tsx","name":"HeadingProps"}],"required":true,"type":{"name":"ReactNode"}},"element":{"defaultValue":null,"description":"The HTML element tag used for the text component.","name":"element","parent":{"fileName":"core/src/components/Typography/Typography.tsx","name":"TypographyProps"},"declarations":[{"fileName":"core/src/components/Typography/Typography.tsx","name":"TypographyProps"}],"required":false,"type":{"name":"string"}},"ellipsis":{"defaultValue":null,"description":"If true, truncates overflowing text with an ellipsis.","name":"ellipsis","parent":{"fileName":"core/src/components/Typography/Typography.tsx","name":"TypographyProps"},"declarations":[{"fileName":"core/src/components/Typography/Typography.tsx","name":"TypographyProps"}],"required":false,"type":{"name":"boolean"}},"maxLines":{"defaultValue":null,"description":"The maximum number of lines before truncating with an ellipsis.","name":"maxLines","parent":{"fileName":"core/src/components/Typography/Typography.tsx","name":"TypographyProps"},"declarations":[{"fileName":"core/src/components/Typography/Typography.tsx","name":"TypographyProps"}],"required":false,"type":{"name":"number"}},"tooltipProps":{"defaultValue":null,"description":"Props passed to the tooltip displayed when hovering over the text.","name":"tooltipProps","parent":{"fileName":"core/src/components/Typography/Typography.tsx","name":"TypographyProps"},"declarations":[{"fileName":"core/src/components/Typography/Typography.tsx","name":"TypographyProps"}],"required":false,"type":{"name":"Partial<TooltipProps>"}},"withoutTooltip":{"defaultValue":null,"description":"If true, disables the tooltip that appears when text is truncated.","name":"withoutTooltip","parent":{"fileName":"core/src/components/Typography/Typography.tsx","name":"TypographyProps"},"declarations":[{"fileName":"core/src/components/Typography/Typography.tsx","name":"TypographyProps"}],"required":false,"type":{"name":"boolean"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/HiddenText/HiddenText.tsx":{"hash":"35315387a0ae001187e520eecd11b4d7","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/HiddenText/HiddenText.tsx","components":[{"displayName":"HiddenText","description":"","props":{"text":{"defaultValue":null,"description":"The text content that is hidden but available for assistive technologies.","name":"text","parent":{"fileName":"core/src/components/HiddenText/HiddenText.tsx","name":"HiddenTextProps"},"declarations":[{"fileName":"core/src/components/HiddenText/HiddenText.tsx","name":"HiddenTextProps"}],"required":true,"type":{"name":"string"}},"className":{"defaultValue":{"value":""},"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":{"value":"hiddenText"},"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Icon/Icon.tsx":{"hash":"faa8e501cd711143545bfa923a4040a4","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Icon/Icon.tsx","components":[{"displayName":"Icon","description":"","props":{"icon":{"defaultValue":{"value":""},"description":"The icon name, component, or source URL.","name":"icon","parent":{"fileName":"core/src/components/Icon/Icon.tsx","name":"IconProps"},"declarations":[{"fileName":"core/src/components/Icon/Icon.tsx","name":"IconProps"}],"required":false,"type":{"name":"any"}},"iconLabel":{"defaultValue":null,"description":"The accessible label for the icon.","name":"iconLabel","parent":{"fileName":"core/src/components/Icon/Icon.tsx","name":"IconProps"},"declarations":[{"fileName":"core/src/components/Icon/Icon.tsx","name":"IconProps"}],"required":false,"type":{"name":"string"}},"iconType":{"defaultValue":{"value":"svg"},"description":"The type of the icon: `svg`, `font`, or `src` (external source).","name":"iconType","parent":{"fileName":"core/src/components/Icon/Icon.tsx","name":"IconProps"},"declarations":[{"fileName":"core/src/components/Icon/Icon.tsx","name":"IconProps"}],"required":false,"type":{"name":"enum","raw":"IconType","value":[{"value":"\"svg\""},{"value":"\"font\""},{"value":"\"src\""}]}},"iconSize":{"defaultValue":{"value":"16"},"description":"The size of the icon.","name":"iconSize","parent":{"fileName":"core/src/components/Icon/Icon.tsx","name":"IconProps"},"declarations":[{"fileName":"core/src/components/Icon/Icon.tsx","name":"IconProps"}],"required":false,"type":{"name":"string | number"}},"ignoreFocusStyle":{"defaultValue":{"value":"false"},"description":"If true, removes focus styles from the icon.","name":"ignoreFocusStyle","parent":{"fileName":"core/src/components/Icon/Icon.tsx","name":"IconProps"},"declarations":[{"fileName":"core/src/components/Icon/Icon.tsx","name":"IconProps"}],"required":false,"type":{"name":"boolean"}},"tabindex":{"defaultValue":null,"description":"The tab index of the icon for keyboard navigation.","name":"tabindex","parent":{"fileName":"core/src/components/Icon/Icon.tsx","name":"IconProps"},"declarations":[{"fileName":"core/src/components/Icon/Icon.tsx","name":"IconProps"}],"required":false,"type":{"name":"string | number"}},"ariaHidden":{"defaultValue":null,"description":"If true, hides the icon from screen readers.","name":"ariaHidden","parent":{"fileName":"core/src/components/Icon/Icon.tsx","name":"IconProps"},"declarations":[{"fileName":"core/src/components/Icon/Icon.tsx","name":"IconProps"}],"required":false,"type":{"name":"boolean"}},"style":{"defaultValue":null,"description":"Inline styles applied to the icon.","name":"style","parent":{"fileName":"core/src/components/Icon/Icon.tsx","name":"IconProps"},"declarations":[{"fileName":"core/src/components/Icon/Icon.tsx","name":"IconProps"}],"required":false,"type":{"name":"React.CSSProperties"}},"useCurrentColor":{"defaultValue":{"value":"false"},"description":"If true, replaces `fill` property with `currentColor` when using an `src` icon.","name":"useCurrentColor","parent":{"fileName":"core/src/components/Icon/Icon.tsx","name":"IconProps"},"declarations":[{"fileName":"core/src/components/Icon/Icon.tsx","name":"IconProps"}],"required":false,"type":{"name":"boolean"}},"customColor":{"defaultValue":null,"description":"Overrides the default color with a custom color.","name":"customColor","parent":{"fileName":"core/src/components/Icon/Icon.tsx","name":"IconProps"},"declarations":[{"fileName":"core/src/components/Icon/Icon.tsx","name":"IconProps"}],"required":false,"type":{"name":"string"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Icon/CustomSvgIcon/CustomSvgIcon.tsx":{"hash":"8a477a655c1d7f01f4c59b0f25531af4","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Icon/CustomSvgIcon/CustomSvgIcon.tsx","components":[{"displayName":"CustomSvgIcon","description":"","props":{"onClick":{"defaultValue":null,"description":"Callback fired when the icon is clicked.","name":"onClick","parent":{"fileName":"core/src/components/Icon/CustomSvgIcon/CustomSvgIcon.tsx","name":"CustomSvgIconProps"},"declarations":[{"fileName":"core/src/components/Icon/CustomSvgIcon/CustomSvgIcon.tsx","name":"CustomSvgIconProps"}],"required":false,"type":{"name":"(event: React.MouseEvent) => void"}},"src":{"defaultValue":null,"description":"The source URL or object of the SVG icon.","name":"src","parent":{"fileName":"core/src/components/Icon/CustomSvgIcon/CustomSvgIcon.tsx","name":"CustomSvgIconProps"},"declarations":[{"fileName":"core/src/components/Icon/CustomSvgIcon/CustomSvgIcon.tsx","name":"CustomSvgIconProps"}],"required":true,"type":{"name":"string | object"}},"ariaLabel":{"defaultValue":null,"description":"The accessible label for the icon.","name":"ariaLabel","parent":{"fileName":"core/src/components/Icon/CustomSvgIcon/CustomSvgIcon.tsx","name":"CustomSvgIconProps"},"declarations":[{"fileName":"core/src/components/Icon/CustomSvgIcon/CustomSvgIcon.tsx","name":"CustomSvgIconProps"}],"required":false,"type":{"name":"string"}},"tabIndex":{"defaultValue":null,"description":"The tab index of the icon for keyboard navigation.","name":"tabIndex","parent":{"fileName":"core/src/components/Icon/CustomSvgIcon/CustomSvgIcon.tsx","name":"CustomSvgIconProps"},"declarations":[{"fileName":"core/src/components/Icon/CustomSvgIcon/CustomSvgIcon.tsx","name":"CustomSvgIconProps"}],"required":false,"type":{"name":"number"}},"role":{"defaultValue":null,"description":"The ARIA role of the icon.","name":"role","parent":{"fileName":"core/src/components/Icon/CustomSvgIcon/CustomSvgIcon.tsx","name":"CustomSvgIconProps"},"declarations":[{"fileName":"core/src/components/Icon/CustomSvgIcon/CustomSvgIcon.tsx","name":"CustomSvgIconProps"}],"required":false,"type":{"name":"AriaRole"}},"ariaHidden":{"defaultValue":null,"description":"If true, hides the icon from screen readers.","name":"ariaHidden","parent":{"fileName":"core/src/components/Icon/CustomSvgIcon/CustomSvgIcon.tsx","name":"CustomSvgIconProps"},"declarations":[{"fileName":"core/src/components/Icon/CustomSvgIcon/CustomSvgIcon.tsx","name":"CustomSvgIconProps"}],"required":false,"type":{"name":"boolean"}},"clickable":{"defaultValue":null,"description":"If true, makes the icon clickable.","name":"clickable","parent":{"fileName":"core/src/components/Icon/CustomSvgIcon/CustomSvgIcon.tsx","name":"CustomSvgIconProps"},"declarations":[{"fileName":"core/src/components/Icon/CustomSvgIcon/CustomSvgIcon.tsx","name":"CustomSvgIconProps"}],"required":false,"type":{"name":"boolean"}},"replaceToCurrentColor":{"defaultValue":{"value":"false"},"description":"If true, replaces the `fill` attribute in the SVG with `currentColor`.","name":"replaceToCurrentColor","parent":{"fileName":"core/src/components/Icon/CustomSvgIcon/CustomSvgIcon.tsx","name":"CustomSvgIconProps"},"declarations":[{"fileName":"core/src/components/Icon/CustomSvgIcon/CustomSvgIcon.tsx","name":"CustomSvgIconProps"}],"required":false,"type":{"name":"boolean"}},"customColor":{"defaultValue":null,"description":"Overrides the default color of the icon.","name":"customColor","parent":{"fileName":"core/src/components/Icon/CustomSvgIcon/CustomSvgIcon.tsx","name":"CustomSvgIconProps"},"declarations":[{"fileName":"core/src/components/Icon/CustomSvgIcon/CustomSvgIcon.tsx","name":"CustomSvgIconProps"}],"required":false,"type":{"name":"string"}},"ref":{"defaultValue":null,"description":"Reference to the SVG element.","name":"ref","parent":{"fileName":"core/src/components/Icon/CustomSvgIcon/CustomSvgIcon.tsx","name":"CustomSvgIconProps"},"declarations":[{"fileName":"core/src/components/Icon/CustomSvgIcon/CustomSvgIcon.tsx","name":"CustomSvgIconProps"}],"required":false,"type":{"name":"Ref<SVGElement>"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/IconButton/IconButton.tsx":{"hash":"0d3e029eef9792c1d2eda79e2530fc1b","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/IconButton/IconButton.tsx","components":[{"displayName":"IconButton","description":"","props":{"onClick":{"defaultValue":null,"description":"Callback fired when the button is clicked.","name":"onClick","parent":{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"},"declarations":[{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"}],"required":false,"type":{"name":"(event: React.MouseEvent) => void"}},"wrapperClassName":{"defaultValue":null,"description":"Class name applied to the button wrapper.","name":"wrapperClassName","parent":{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"},"declarations":[{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"}],"required":false,"type":{"name":"string"}},"iconClassName":{"defaultValue":null,"description":"Class name applied to the icon.","name":"iconClassName","parent":{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"},"declarations":[{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"}],"required":false,"type":{"name":"string"}},"icon":{"defaultValue":null,"description":"The icon displayed inside the button.","name":"icon","parent":{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"},"declarations":[{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"}],"required":false,"type":{"name":"any"}},"ariaLabeledBy":{"defaultValue":null,"description":"The ID of the element that labels this button.","name":"ariaLabeledBy","parent":{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"},"declarations":[{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"}],"required":false,"type":{"name":"string"}},"ariaLabel":{"defaultValue":null,"description":"The ARIA label for accessibility.","name":"ariaLabel","parent":{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"},"declarations":[{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"}],"required":false,"type":{"name":"string"}},"ariaHasPopup":{"defaultValue":null,"description":"If true, indicates that the button controls a popup.","name":"ariaHasPopup","parent":{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"},"declarations":[{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"}],"required":false,"type":{"name":"React.HTMLProps<HTMLButtonElement>"}},"ariaExpanded":{"defaultValue":null,"description":"If true, indicates that the associated popup is open.","name":"ariaExpanded","parent":{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"},"declarations":[{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"}],"required":false,"type":{"name":"boolean"}},"ariaControls":{"defaultValue":null,"description":"The ID of the region controlled by the button.","name":"ariaControls","parent":{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"},"declarations":[{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"}],"required":false,"type":{"name":"string"}},"aria-describedby":{"defaultValue":null,"description":"ID of the element describing the button.","name":"aria-describedby","parent":{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"},"declarations":[{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"}],"required":false,"type":{"name":"string"}},"aria-hidden":{"defaultValue":null,"description":"If true, hides the button from assistive technologies.","name":"aria-hidden","parent":{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"},"declarations":[{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"}],"required":false,"type":{"name":"Booleanish"}},"aria-pressed":{"defaultValue":null,"description":"Indicates the current \"pressed\" state of toggle buttons.","name":"aria-pressed","parent":{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"},"declarations":[{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"}],"required":false,"type":{"name":"boolean | \"true\" | \"false\" | \"mixed\""}},"size":{"defaultValue":{"value":"medium"},"description":"The size of the button.","name":"size","parent":{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"},"declarations":[{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"}],"required":false,"type":{"name":"enum","raw":"Size","value":[{"value":"\"xxs\""},{"value":"\"xs\""},{"value":"\"small\""},{"value":"\"medium\""},{"value":"\"large\""}]}},"hideTooltip":{"defaultValue":{"value":"false"},"description":"If true, hides the tooltip.","name":"hideTooltip","parent":{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"},"declarations":[{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"}],"required":false,"type":{"name":"boolean"}},"tooltipProps":{"defaultValue":{"value":"{} as TooltipProps"},"description":"Props for the Tooltip component.","name":"tooltipProps","parent":{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"},"declarations":[{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"}],"required":false,"type":{"name":"Partial<TooltipProps>"}},"tooltipContent":{"defaultValue":null,"description":"Tooltip content displayed on hover.","name":"tooltipContent","parent":{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"},"declarations":[{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"}],"required":false,"type":{"name":"string"}},"kind":{"defaultValue":{"value":"tertiary"},"description":"The button variant.","name":"kind","parent":{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"},"declarations":[{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"}],"required":false,"type":{"name":"enum","raw":"ButtonType","value":[{"value":"\"primary\""},{"value":"\"secondary\""},{"value":"\"tertiary\""}]}},"active":{"defaultValue":null,"description":"If true, the button is in an active state.","name":"active","parent":{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"},"declarations":[{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"}],"required":false,"type":{"name":"boolean"}},"color":{"defaultValue":null,"description":"The color of the button.","name":"color","parent":{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"},"declarations":[{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"}],"required":false,"type":{"name":"enum","raw":"ButtonColor","value":[{"value":"\"primary\""},{"value":"\"positive\""},{"value":"\"negative\""},{"value":"\"inverted\""},{"value":"\"on-primary-color\""},{"value":"\"on-inverted-background\""},{"value":"\"brand\""},{"value":"\"fixed-light\""},{"value":"\"fixed-dark\""}]}},"disabled":{"defaultValue":{"value":"false"},"description":"If true, the button is disabled.","name":"disabled","parent":{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"},"declarations":[{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"}],"required":false,"type":{"name":"boolean"}},"disabledReason":{"defaultValue":null,"description":"If disabled, this message will be displayed in the tooltip.","name":"disabledReason","parent":{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"},"declarations":[{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"}],"required":false,"type":{"name":"string"}},"insetFocus":{"defaultValue":{"value":"false"},"description":"If true, the focus indicator is displayed inside the button instead of around it.","name":"insetFocus","parent":{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"},"declarations":[{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"}],"required":false,"type":{"name":"boolean"}},"tabIndex":{"defaultValue":null,"description":"The tab order of the button.","name":"tabIndex","parent":{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"},"declarations":[{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"}],"required":false,"type":{"name":"number"}},"loading":{"defaultValue":{"value":"false"},"description":"If true, a loader replaces the icon.","name":"loading","parent":{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"},"declarations":[{"fileName":"core/src/components/IconButton/IconButton.tsx","name":"IconButtonProps"}],"required":false,"type":{"name":"boolean"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Label/Label.tsx":{"hash":"1f8bae9c92653abe910d094f877157d8","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Label/Label.tsx","components":[{"displayName":"Label","description":"","props":{"labelClassName":{"defaultValue":null,"description":"Class name applied to the inner text wrapper.","name":"labelClassName","parent":{"fileName":"core/src/components/Label/Label.tsx","name":"LabelProps"},"declarations":[{"fileName":"core/src/components/Label/Label.tsx","name":"LabelProps"}],"required":false,"type":{"name":"string"}},"kind":{"defaultValue":{"value":"fill"},"description":"The visual style of the label.","name":"kind","parent":{"fileName":"core/src/components/Label/Label.tsx","name":"LabelProps"},"declarations":[{"fileName":"core/src/components/Label/Label.tsx","name":"LabelProps"}],"required":false,"type":{"name":"enum","raw":"LabelKind","value":[{"value":"\"fill\""},{"value":"\"line\""}]}},"color":{"defaultValue":{"value":"primary"},"description":"The background color of the label.","name":"color","parent":{"fileName":"core/src/components/Label/Label.tsx","name":"LabelProps"},"declarations":[{"fileName":"core/src/components/Label/Label.tsx","name":"LabelProps"}],"required":false,"type":{"name":"enum","raw":"LabelColor","value":[{"value":"\"primary\""},{"value":"\"dark\""},{"value":"\"negative\""},{"value":"\"positive\""},{"value":"\"grass_green\""},{"value":"\"done-green\""},{"value":"\"bright-green\""},{"value":"\"saladish\""},{"value":"\"egg_yolk\""},{"value":"\"working_orange\""},{"value":"\"dark-orange\""},{"value":"\"peach\""},{"value":"\"sunset\""},{"value":"\"stuck-red\""},{"value":"\"dark-red\""},{"value":"\"sofia_pink\""},{"value":"\"lipstick\""},{"value":"\"bubble\""},{"value":"\"purple\""},{"value":"\"dark_purple\""},{"value":"\"berry\""},{"value":"\"dark_indigo\""},{"value":"\"indigo\""},{"value":"\"navy\""},{"value":"\"bright-blue\""},{"value":"\"dark-blue\""},{"value":"\"aquamarine\""},{"value":"\"chili-blue\""},{"value":"\"river\""},{"value":"\"winter\""},{"value":"\"explosive\""},{"value":"\"american_gray\""},{"value":"\"blackish\""},{"value":"\"brown\""},{"value":"\"orchid\""},{"value":"\"tan\""},{"value":"\"sky\""},{"value":"\"coffee\""},{"value":"\"royal\""},{"value":"\"teal\""},{"value":"\"lavender\""},{"value":"\"steel\""},{"value":"\"lilac\""},{"value":"\"pecan\""}]}},"text":{"defaultValue":{"value":""},"description":"The text content of the label.","name":"text","parent":{"fileName":"core/src/components/Label/Label.tsx","name":"LabelProps"},"declarations":[{"fileName":"core/src/components/Label/Label.tsx","name":"LabelProps"}],"required":false,"type":{"name":"string"}},"isLegIncluded":{"defaultValue":{"value":"false"},"description":"If true, includes a leg (decorative extension).","name":"isLegIncluded","parent":{"fileName":"core/src/components/Label/Label.tsx","name":"LabelProps"},"declarations":[{"fileName":"core/src/components/Label/Label.tsx","name":"LabelProps"}],"required":false,"type":{"name":"boolean"}},"onClick":{"defaultValue":null,"description":"Callback fired when the label is clicked.","name":"onClick","parent":{"fileName":"core/src/components/Label/Label.tsx","name":"LabelProps"},"declarations":[{"fileName":"core/src/components/Label/Label.tsx","name":"LabelProps"}],"required":false,"type":{"name":"(event: React.MouseEvent<HTMLSpanElement, MouseEvent>) => void"}},"celebrationAnimation":{"defaultValue":null,"description":"If true, triggers a celebration animation.","name":"celebrationAnimation","parent":{"fileName":"core/src/components/Label/Label.tsx","name":"LabelProps"},"declarations":[{"fileName":"core/src/components/Label/Label.tsx","name":"LabelProps"}],"required":false,"type":{"name":"boolean"}},"size":{"defaultValue":{"value":"medium"},"description":"The size of the label.","name":"size","parent":{"fileName":"core/src/components/Label/Label.tsx","name":"LabelProps"},"declarations":[{"fileName":"core/src/components/Label/Label.tsx","name":"LabelProps"}],"required":false,"type":{"name":"enum","raw":"LabelSizes","value":[{"value":"\"small\""},{"value":"\"medium\""}]}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/LayerProvider/LayerProvider.tsx":{"hash":"ce26f3509f363d02699cbc3c5d1af422","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/LayerProvider/LayerProvider.tsx","components":[{"displayName":"LayerProvider","description":"","props":{"children":{"defaultValue":null,"description":"The child elements.","name":"children","parent":{"fileName":"core/src/components/LayerProvider/LayerProvider.tsx","name":"LayerProviderType"},"declarations":[{"fileName":"core/src/components/LayerProvider/LayerProvider.tsx","name":"LayerProviderType"}],"required":true,"type":{"name":"ReactNode | ReactNode[]"}},"layerRef":{"defaultValue":null,"description":"A reference to the layer container element.","name":"layerRef","parent":{"fileName":"core/src/components/LayerProvider/LayerProvider.tsx","name":"LayerProviderType"},"declarations":[{"fileName":"core/src/components/LayerProvider/LayerProvider.tsx","name":"LayerProviderType"}],"required":true,"type":{"name":"RefObject<HTMLElement>"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Link/Link.tsx":{"hash":"bb08fcfbd4c81adc188d82e132a60cee","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Link/Link.tsx","components":[{"displayName":"Link","description":"","props":{"textClassName":{"defaultValue":null,"description":"Class name applied to the link text.","name":"textClassName","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"string"}},"href":{"defaultValue":{"value":""},"description":"The URL the link points to.","name":"href","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"string"}},"text":{"defaultValue":{"value":""},"description":"The text content of the link.","name":"text","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"string"}},"rel":{"defaultValue":{"value":"noreferrer"},"description":"Specifies the relationship between the current document and the linked resource.","name":"rel","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"string"}},"onClick":{"defaultValue":null,"description":"Callback fired when the link is clicked.","name":"onClick","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"(event: React.MouseEvent) => void"}},"target":{"defaultValue":{"value":"_blank"},"description":"Specifies where to open the linked document.","name":"target","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"enum","raw":"LinkTarget","value":[{"value":"\"_blank\""},{"value":"\"_self\""},{"value":"\"_parent\""},{"value":"\"_top\""}]}},"ariaLabelDescription":{"defaultValue":{"value":""},"description":"The ARIA label description for accessibility.","name":"ariaLabelDescription","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"string"}},"ariaDescribedby":{"defaultValue":{"value":""},"description":"The ID of the element that describes this link.","name":"ariaDescribedby","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"string"}},"ariaLabeledBy":{"defaultValue":{"value":""},"description":"The ID of the element labeling this link.","name":"ariaLabeledBy","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"string"}},"icon":{"defaultValue":{"value":""},"description":"Icon displayed next to the link text.","name":"icon","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"any"}},"iconPosition":{"defaultValue":{"value":"start"},"description":"The position of the icon relative to the text.","name":"iconPosition","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"enum","raw":"LinkIconPosition","value":[{"value":"\"start\""},{"value":"\"end\""}]}},"disableNavigation":{"defaultValue":{"value":"false"},"description":"If true, disables navigation when the link is clicked.","name":"disableNavigation","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"boolean"}},"inheritFontSize":{"defaultValue":{"value":"false"},"description":"If true, the link inherits the surrounding text's font size.","name":"inheritFontSize","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"boolean"}},"inlineText":{"defaultValue":{"value":"false"},"description":"If true, the link is styled to fit within inline text content.","name":"inlineText","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"boolean"}},"color":{"defaultValue":{"value":"primary"},"description":"The link's color style","name":"color","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"enum","raw":"LinkColor","value":[{"value":"\"primary\""},{"value":"\"onPrimary\""},{"value":"\"onInverted\""}]}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":{"value":""},"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/List/List.tsx":{"hash":"60547b911dde9e238c00efba9d88d182","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/List/List.tsx","components":[{"displayName":"List","description":"","props":{"component":{"defaultValue":{"value":"ListWrapperComponentTypeEnum.UL"},"description":"The wrapping component for the list.","name":"component","parent":{"fileName":"core/src/components/List/List.tsx","name":"ListProps"},"declarations":[{"fileName":"core/src/components/List/List.tsx","name":"ListProps"}],"required":false,"type":{"name":"enum","raw":"ListElement","value":[{"value":"\"div\""},{"value":"\"nav\""},{"value":"\"ul\""},{"value":"\"ol\""}]}},"ariaLabel":{"defaultValue":null,"description":"The ARIA label describing the list.","name":"ariaLabel","parent":{"fileName":"core/src/components/List/List.tsx","name":"ListProps"},"declarations":[{"fileName":"core/src/components/List/List.tsx","name":"ListProps"}],"required":false,"type":{"name":"string"}},"ariaDescribedBy":{"defaultValue":null,"description":"The ID of an element that describes the list.","name":"ariaDescribedBy","parent":{"fileName":"core/src/components/List/List.tsx","name":"ListProps"},"declarations":[{"fileName":"core/src/components/List/List.tsx","name":"ListProps"}],"required":false,"type":{"name":"string"}},"aria-controls":{"defaultValue":null,"description":"The ID of an element controlled by the list.","name":"aria-controls","parent":{"fileName":"core/src/components/List/List.tsx","name":"ListProps"},"declarations":[{"fileName":"core/src/components/List/List.tsx","name":"ListProps"}],"required":false,"type":{"name":"string"}},"children":{"defaultValue":null,"description":"The child elements inside the list.","name":"children","parent":{"fileName":"core/src/components/List/List.tsx","name":"ListProps"},"declarations":[{"fileName":"core/src/components/List/List.tsx","name":"ListProps"}],"required":false,"type":{"name":"ReactElement<ListItemProps | ListTitleProps, string | JSXElementConstructor<any>> | ReactElement<ListItemProps | ListTitleProps, string | JSXElementConstructor<...>>[]"}},"renderOnlyVisibleItems":{"defaultValue":{"value":"false"},"description":"If true, uses a virtualized list to render only visible items for performance optimization.","name":"renderOnlyVisibleItems","parent":{"fileName":"core/src/components/List/List.tsx","name":"ListProps"},"declarations":[{"fileName":"core/src/components/List/List.tsx","name":"ListProps"}],"required":false,"type":{"name":"boolean"}},"style":{"defaultValue":null,"description":"Custom inline styles applied to the list.","name":"style","parent":{"fileName":"core/src/components/List/List.tsx","name":"ListProps"},"declarations":[{"fileName":"core/src/components/List/List.tsx","name":"ListProps"}],"required":false,"type":{"name":"CSSProperties"}},"role":{"defaultValue":{"value":"listbox"},"description":"The ARIA role of the list.","name":"role","parent":{"fileName":"core/src/components/List/List.tsx","name":"ListProps"},"declarations":[{"fileName":"core/src/components/List/List.tsx","name":"ListProps"}],"required":false,"type":{"name":"AriaRole"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/ListItem/ListItem.tsx":{"hash":"2604425a2fef2a7026ee06c99c18c657","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/ListItem/ListItem.tsx","components":[{"displayName":"ListItem","description":"","props":{"component":{"defaultValue":{"value":"div"},"description":"The HTML element used for the list item.","name":"component","parent":{"fileName":"core/src/components/ListItem/ListItem.tsx","name":"ListItemProps"},"declarations":[{"fileName":"core/src/components/ListItem/ListItem.tsx","name":"ListItemProps"}],"required":false,"type":{"name":"enum","raw":"ListItemElement","value":[{"value":"\"div\""},{"value":"\"li\""},{"value":"\"a\""}]}},"children":{"defaultValue":null,"description":"The textual content inside the list item.","name":"children","parent":{"fileName":"core/src/components/ListItem/ListItem.tsx","name":"ListItemProps"},"declarations":[{"fileName":"core/src/components/ListItem/ListItem.tsx","name":"ListItemProps"}],"required":false,"type":{"name":"ElementContent"}},"onClick":{"defaultValue":null,"description":"Callback fired when the item is clicked.","name":"onClick","parent":{"fileName":"core/src/components/ListItem/ListItem.tsx","name":"ListItemProps"},"declarations":[{"fileName":"core/src/components/ListItem/ListItem.tsx","name":"ListItemProps"}],"required":false,"type":{"name":"(event: any, id: string) => void"}},"onHover":{"defaultValue":null,"description":"Callback fired when the item is hovered.","name":"onHover","parent":{"fileName":"core/src/components/ListItem/ListItem.tsx","name":"ListItemProps"},"declarations":[{"fileName":"core/src/components/ListItem/ListItem.tsx","name":"ListItemProps"}],"required":false,"type":{"name":"(event: any, id: string) => void"}},"disabled":{"defaultValue":{"value":"false"},"description":"If true, disables the item and prevents interactions.","name":"disabled","parent":{"fileName":"core/src/components/ListItem/ListItem.tsx","name":"ListItemProps"},"declarations":[{"fileName":"core/src/components/ListItem/ListItem.tsx","name":"ListItemProps"}],"required":false,"type":{"name":"boolean"}},"selected":{"defaultValue":null,"description":"If true, marks the item as selected.","name":"selected","parent":{"fileName":"core/src/components/ListItem/ListItem.tsx","name":"ListItemProps"},"declarations":[{"fileName":"core/src/components/ListItem/ListItem.tsx","name":"ListItemProps"}],"required":false,"type":{"name":"boolean"}},"size":{"defaultValue":{"value":"small"},"description":"The size of the list item.","name":"size","parent":{"fileName":"core/src/components/ListItem/ListItem.tsx","name":"ListItemProps"},"declarations":[{"fileName":"core/src/components/ListItem/ListItem.tsx","name":"ListItemProps"}],"required":false,"type":{"name":"enum","raw":"ListItemSize","value":[{"value":"\"xxs\""},{"value":"\"xs\""},{"value":"\"small\""},{"value":"\"medium\""},{"value":"\"large\""}]}},"tabIndex":{"defaultValue":{"value":"0"},"description":"The tab index of the list item for keyboard navigation.","name":"tabIndex","parent":{"fileName":"core/src/components/ListItem/ListItem.tsx","name":"ListItemProps"},"declarations":[{"fileName":"core/src/components/ListItem/ListItem.tsx","name":"ListItemProps"}],"required":false,"type":{"name":"number"}},"aria-current":{"defaultValue":null,"description":"Indicates the current state of the item in a set of items.","name":"aria-current","parent":{"fileName":"core/src/components/ListItem/ListItem.tsx","name":"ListItemProps"},"declarations":[{"fileName":"core/src/components/ListItem/ListItem.tsx","name":"ListItemProps"}],"required":false,"type":{"name":"boolean | \"false\" | \"true\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\""}},"role":{"defaultValue":{"value":"option"},"description":"The ARIA role of the list item.","name":"role","parent":{"fileName":"core/src/components/ListItem/ListItem.tsx","name":"ListItemProps"},"declarations":[{"fileName":"core/src/components/ListItem/ListItem.tsx","name":"ListItemProps"}],"required":false,"type":{"name":"AriaRole"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/ListItemAvatar/ListItemAvatar.tsx":{"hash":"dca02c20da72fd58795f459343a3e4a0","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/ListItemAvatar/ListItemAvatar.tsx","components":[{"displayName":"ListItemAvatar","description":"","props":{"component":{"defaultValue":null,"description":"The HTML element used for the list item avatar.","name":"component","parent":{"fileName":"core/src/components/ListItemAvatar/ListItemAvatar.tsx","name":"ListItemAvatarProps"},"declarations":[{"fileName":"core/src/components/ListItemAvatar/ListItemAvatar.tsx","name":"ListItemAvatarProps"}],"required":false,"type":{"name":"enum","raw":"ListItemElement","value":[{"value":"\"div\""},{"value":"\"li\""},{"value":"\"a\""}]}},"src":{"defaultValue":null,"description":"The source URL of the avatar image.","name":"src","parent":{"fileName":"core/src/components/ListItemAvatar/ListItemAvatar.tsx","name":"ListItemAvatarProps"},"declarations":[{"fileName":"core/src/components/ListItemAvatar/ListItemAvatar.tsx","name":"ListItemAvatarProps"}],"required":false,"type":{"name":"string"}},"avatarClassName":{"defaultValue":null,"description":"Class name applied to the avatar.","name":"avatarClassName","parent":{"fileName":"core/src/components/ListItemAvatar/ListItemAvatar.tsx","name":"ListItemAvatarProps"},"declarations":[{"fileName":"core/src/components/ListItemAvatar/ListItemAvatar.tsx","name":"ListItemAvatarProps"}],"required":false,"type":{"name":"string"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/ListItemIcon/ListItemIcon.tsx":{"hash":"c3c06d396268354ffb14565629577b69","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/ListItemIcon/ListItemIcon.tsx","components":[{"displayName":"ListItemIcon","description":"","props":{"component":{"defaultValue":null,"description":"The HTML element used for the list item icon.","name":"component","parent":{"fileName":"core/src/components/ListItemIcon/ListItemIcon.tsx","name":"ListItemIconProps"},"declarations":[{"fileName":"core/src/components/ListItemIcon/ListItemIcon.tsx","name":"ListItemIconProps"}],"required":false,"type":{"name":"enum","raw":"ListItemElement","value":[{"value":"\"div\""},{"value":"\"li\""},{"value":"\"a\""}]}},"icon":{"defaultValue":null,"description":"The icon displayed inside the list item.","name":"icon","parent":{"fileName":"core/src/components/ListItemIcon/ListItemIcon.tsx","name":"ListItemIconProps"},"declarations":[{"fileName":"core/src/components/ListItemIcon/ListItemIcon.tsx","name":"ListItemIconProps"}],"required":false,"type":{"name":"any"}},"margin":{"defaultValue":{"value":"start"},"description":"The position of the icon inside the list item, determining its margins.","name":"margin","parent":{"fileName":"core/src/components/ListItemIcon/ListItemIcon.tsx","name":"ListItemIconProps"},"declarations":[{"fileName":"core/src/components/ListItemIcon/ListItemIcon.tsx","name":"ListItemIconProps"}],"required":false,"type":{"name":"enum","raw":"ListItemIconMargin","value":[{"value":"\"start\""},{"value":"\"end\""}]}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/ListTitle/ListTitle.tsx":{"hash":"8ad1ec68bbbfa4549c44fd829d4102e7","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/ListTitle/ListTitle.tsx","components":[]}},"/Users/talko/Development/vibe/packages/core/src/components/Loader/Loader.tsx":{"hash":"d50a8739a63570f829d8295a333ed28f","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Loader/Loader.tsx","components":[{"displayName":"Loader","description":"","props":{"size":{"defaultValue":null,"description":"The size of the loader, either a predefined size or a custom number.","name":"size","parent":{"fileName":"core/src/components/Loader/Loader.tsx","name":"LoaderProps"},"declarations":[{"fileName":"core/src/components/Loader/Loader.tsx","name":"LoaderProps"}],"required":false,"type":{"name":"LoaderSize"}},"color":{"defaultValue":null,"description":"The color of the loader.","name":"color","parent":{"fileName":"core/src/components/Loader/Loader.tsx","name":"LoaderProps"},"declarations":[{"fileName":"core/src/components/Loader/Loader.tsx","name":"LoaderProps"}],"required":false,"type":{"name":"enum","raw":"LoaderColors","value":[{"value":"\"primary\""},{"value":"\"secondary\""},{"value":"\"onPrimary\""},{"value":"\"dark\""}]}},"hasBackground":{"defaultValue":{"value":"false"},"description":"If true, a background circle is displayed behind the loader.","name":"hasBackground","parent":{"fileName":"core/src/components/Loader/Loader.tsx","name":"LoaderProps"},"declarations":[{"fileName":"core/src/components/Loader/Loader.tsx","name":"LoaderProps"}],"required":false,"type":{"name":"boolean"}},"wrapperClassName":{"defaultValue":null,"description":"Class name applied to the wrapper element.","name":"wrapperClassName","parent":{"fileName":"core/src/components/Loader/Loader.tsx","name":"LoaderProps"},"declarations":[{"fileName":"core/src/components/Loader/Loader.tsx","name":"LoaderProps"}],"required":false,"type":{"name":"string"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Menu/Menu/Menu.tsx":{"hash":"e913e6d4c66828ef8fe34cad4d5c0844","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Menu/Menu/Menu.tsx","components":[{"displayName":"Menu","description":"","props":{"size":{"defaultValue":{"value":"medium"},"description":"Size of the menu.","name":"size","parent":{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"},"declarations":[{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"}],"required":false,"type":{"name":"enum","raw":"\"xxs\" | \"xs\" | \"small\" | \"medium\" | \"large\"","value":[{"value":"\"xxs\""},{"value":"\"xs\""},{"value":"\"small\""},{"value":"\"medium\""},{"value":"\"large\""}]}},"tabIndex":{"defaultValue":{"value":"0"},"description":"The tab index of the menu.","name":"tabIndex","parent":{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"},"declarations":[{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"}],"required":false,"type":{"name":"number"}},"ariaLabel":{"defaultValue":{"value":"Menu"},"description":"ARIA label for accessibility.","name":"ariaLabel","parent":{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"},"declarations":[{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"}],"required":false,"type":{"name":"string"}},"ariaDescribedBy":{"defaultValue":null,"description":"ARIA description ID.","name":"ariaDescribedBy","parent":{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"},"declarations":[{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"}],"required":false,"type":{"name":"string"}},"focusOnMount":{"defaultValue":{"value":"false"},"description":"If true, the menu will automatically focus on mount.","name":"focusOnMount","parent":{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"},"declarations":[{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"}],"required":false,"type":{"name":"boolean"}},"onItemFocus":{"defaultValue":null,"description":"Callback when a menu item gains focus.","name":"onItemFocus","parent":{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"},"declarations":[{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"}],"required":false,"type":{"name":"(index: number) => void"}},"isVisible":{"defaultValue":{"value":"true"},"description":"Controls the visibility of the menu.","name":"isVisible","parent":{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"},"declarations":[{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"}],"required":false,"type":{"name":"boolean"}},"onClose":{"defaultValue":null,"description":"Callback triggered when the menu closes.","name":"onClose","parent":{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"},"declarations":[{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"}],"required":false,"type":{"name":"(option: CloseMenuOption) => void"}},"focusItemIndex":{"defaultValue":{"value":"-1"},"description":"Index of the focused menu item.","name":"focusItemIndex","parent":{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"},"declarations":[{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"}],"required":false,"type":{"name":"number"}},"isSubMenu":{"defaultValue":{"value":"false"},"description":"If true, this menu is a submenu.","name":"isSubMenu","parent":{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"},"declarations":[{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"}],"required":false,"type":{"name":"boolean"}},"useDocumentEventListeners":{"defaultValue":{"value":"false"},"description":"If true, event listeners will be attached to the document.","name":"useDocumentEventListeners","parent":{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"},"declarations":[{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"}],"required":false,"type":{"name":"boolean"}},"focusItemIndexOnMount":{"defaultValue":{"value":"-1"},"description":"Index of the item that should be focused when the menu mounts.","name":"focusItemIndexOnMount","parent":{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"},"declarations":[{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"}],"required":false,"type":{"name":"number"}},"shouldScrollMenu":{"defaultValue":{"value":"false"},"description":"If true, enables scrolling within the menu.","name":"shouldScrollMenu","parent":{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"},"declarations":[{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"}],"required":false,"type":{"name":"boolean"}},"children":{"defaultValue":null,"description":"The menu items.","name":"children","parent":{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"},"declarations":[{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"}],"required":false,"type":{"name":"ElementContent"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Menu/MenuItem/MenuItem.tsx":{"hash":"738bbe69c219984ae971a3e2dc4b1af6","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Menu/MenuItem/MenuItem.tsx","components":[{"displayName":"MenuItem","description":"","props":{"title":{"defaultValue":{"value":""},"description":"The title of the menu item.","name":"title","parent":{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemTitleComponentProps"}],"required":false,"type":{"name":"string | ReactElement<any, string | JSXElementConstructor<any>>"}},"label":{"defaultValue":{"value":""},"description":"The label displayed alongside the title.","name":"label","parent":{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"}],"required":false,"type":{"name":"any"}},"icon":{"defaultValue":{"value":""},"description":"The icon displayed in the menu item.","name":"icon","parent":{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"}],"required":false,"type":{"name":"any"}},"iconType":{"defaultValue":null,"description":"The type of icon.","name":"iconType","parent":{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"}],"required":false,"type":{"name":"enum","raw":"IconType","value":[{"value":"\"svg\""},{"value":"\"font\""},{"value":"\"src\""}]}},"iconBackgroundColor":{"defaultValue":null,"description":"The background color of the icon.","name":"iconBackgroundColor","parent":{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"}],"required":false,"type":{"name":"string"}},"disabled":{"defaultValue":{"value":"false"},"description":"If true, the menu item is disabled.","name":"disabled","parent":{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"}],"required":false,"type":{"name":"boolean"}},"disableReason":{"defaultValue":null,"description":"The reason for disabling the item, shown in a tooltip.","name":"disableReason","parent":{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"}],"required":false,"type":{"name":"string"}},"selected":{"defaultValue":{"value":"false"},"description":"If true, the menu item is selected.","name":"selected","parent":{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"}],"required":false,"type":{"name":"boolean"}},"onClick":{"defaultValue":null,"description":"Callback fired when the menu item is clicked.","name":"onClick","parent":{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"}],"required":false,"type":{"name":"(event: any) => void"}},"activeItemIndex":{"defaultValue":null,"description":"The active item index in the menu.","name":"activeItemIndex","parent":{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"}],"required":false,"type":{"name":"number"}},"setActiveItemIndex":{"defaultValue":null,"description":"Callback to set the active item index.","name":"setActiveItemIndex","parent":{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"}],"required":false,"type":{"name":"(index: number) => void"}},"index":{"defaultValue":null,"description":"The index of the menu item.","name":"index","parent":{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"}],"required":false,"type":{"name":"number"}},"key":{"defaultValue":null,"description":"The key of the menu item.","name":"key","parent":{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},{"fileName":"vibe/node_modules/@types/react/ts5.0/index.d.ts","name":"Attributes"},{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},{"fileName":"vibe/node_modules/@types/react/ts5.0/index.d.ts","name":"Attributes"}],"required":false,"type":{"name":"string"}},"isParentMenuVisible":{"defaultValue":null,"description":"If true, the parent menu is visible.","name":"isParentMenuVisible","parent":{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"}],"required":false,"type":{"name":"boolean"}},"resetOpenSubMenuIndex":{"defaultValue":null,"description":"Callback to reset the open submenu index.","name":"resetOpenSubMenuIndex","parent":{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"}],"required":false,"type":{"name":"() => void"}},"hasOpenSubMenu":{"defaultValue":null,"description":"If true, a submenu is open.","name":"hasOpenSubMenu","parent":{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"}],"required":false,"type":{"name":"boolean"}},"setSubMenuIsOpenByIndex":{"defaultValue":null,"description":"Callback to open or close a submenu by index.","name":"setSubMenuIsOpenByIndex","parent":{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"}],"required":false,"type":{"name":"(index: number, isOpen: boolean) => void"}},"useDocumentEventListeners":{"defaultValue":null,"description":"If true, document event listeners are used for handling interactions.","name":"useDocumentEventListeners","parent":{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"}],"required":false,"type":{"name":"boolean"}},"tooltipContent":{"defaultValue":null,"description":"The tooltip content for the menu item.","name":"tooltipContent","parent":{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"}],"required":false,"type":{"name":"string"}},"tooltipPosition":{"defaultValue":{"value":"right"},"description":"The position of the tooltip.","name":"tooltipPosition","parent":{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"}],"required":false,"type":{"name":"enum","raw":"TooltipPositions","value":[{"value":"\"top\""},{"value":"\"right\""},{"value":"\"bottom\""},{"value":"\"left\""}]}},"tooltipShowDelay":{"defaultValue":{"value":"300"},"description":"The delay in milliseconds before the tooltip shows.","name":"tooltipShowDelay","parent":{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"}],"required":false,"type":{"name":"number"}},"tooltipProps":{"defaultValue":null,"description":"Additional props for customizing the tooltip.","name":"tooltipProps","parent":{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"}],"required":false,"type":{"name":"Partial<TooltipProps>"}},"onMouseLeave":{"defaultValue":null,"description":"Callback fired when the mouse leaves the item.","name":"onMouseLeave","parent":{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"}],"required":false,"type":{"name":"(event: React.MouseEvent) => void"}},"onMouseEnter":{"defaultValue":null,"description":"Callback fired when the mouse enters the item.","name":"onMouseEnter","parent":{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"}],"required":false,"type":{"name":"(event: React.MouseEvent) => void"}},"iconWrapperClassName":{"defaultValue":null,"description":"Class name applied to the icon wrapper.","name":"iconWrapperClassName","parent":{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"}],"required":false,"type":{"name":"string"}},"isInitialSelectedState":{"defaultValue":null,"description":"If true, the menu item starts as selected.","name":"isInitialSelectedState","parent":{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"}],"required":false,"type":{"name":"boolean"}},"shouldScrollMenu":{"defaultValue":null,"description":"If true, the menu scrolls to ensure visibility.","name":"shouldScrollMenu","parent":{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"}],"required":false,"type":{"name":"boolean"}},"closeMenu":{"defaultValue":null,"description":"Function to close the menu with a given option.","name":"closeMenu","parent":{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"}],"required":false,"type":{"name":"(option: CloseMenuOption) => void"}},"menuRef":{"defaultValue":null,"description":"Reference to the menu container.","name":"menuRef","parent":{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"}],"required":false,"type":{"name":"any"}},"children":{"defaultValue":null,"description":"The submenu items, if applicable.","name":"children","parent":{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"}],"required":false,"type":{"name":"MenuChild | MenuChild[]"}},"splitMenuItem":{"defaultValue":null,"description":"If true, enables a split menu item interaction where the main area triggers an action,\nwhile the icon button opens the submenu.","name":"splitMenuItem","parent":{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"}],"required":false,"type":{"name":"boolean"}},"aria-label":{"defaultValue":null,"description":"The label of the menu item for accessibility.","name":"aria-label","parent":{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemTitleComponentProps"}],"required":false,"type":{"name":"string"}},"submenuPosition":{"defaultValue":null,"description":"The position of a submenu relative to the menu item.","name":"submenuPosition","parent":{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"}],"required":false,"type":{"name":"enum","raw":"SubmenuPosition","value":[{"value":"\"right\""},{"value":"\"left\""}]}},"autoAdjustOnSubMenuContentResize":{"defaultValue":null,"description":"If true, automatically repositions the submenu when its content changes.","name":"autoAdjustOnSubMenuContentResize","parent":{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"},{"fileName":"core/src/components/Menu/MenuItem/MenuItem.tsx","name":"MenuItemProps"}],"required":false,"type":{"name":"boolean"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Menu/MenuItemButton/MenuItemButton.tsx":{"hash":"fae76e00ebf9b0296af9fd8ae4aa6c63","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Menu/MenuItemButton/MenuItemButton.tsx","components":[]}},"/Users/talko/Development/vibe/packages/core/src/components/Menu/MenuDivider/MenuDivider.tsx":{"hash":"98730bb67b1b789840d912d4d2ed7811","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Menu/MenuDivider/MenuDivider.tsx","components":[{"displayName":"MenuDivider","description":"","props":{"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Menu/MenuTitle/MenuTitle.tsx":{"hash":"d00cc43c58e100023f20b97b7dfecdfa","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Menu/MenuTitle/MenuTitle.tsx","components":[]}},"/Users/talko/Development/vibe/packages/core/src/components/Menu/MenuGridItem/MenuGridItem.tsx":{"hash":"a89906635b98ffce344f4ac2dac2b0a3","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Menu/MenuGridItem/MenuGridItem.tsx","components":[{"displayName":"MenuGridItem","description":"","props":{"children":{"defaultValue":null,"description":"The content of the menu grid item.","name":"children","parent":{"fileName":"core/src/components/Menu/MenuGridItem/MenuGridItem.tsx","name":"MenuGridItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuGridItem/MenuGridItem.tsx","name":"MenuGridItemProps"}],"required":false,"type":{"name":"ReactElement<any, string | JSXElementConstructor<any>> | ReactElement<any, string | JSXElementConstructor<any>>[]"}},"disabled":{"defaultValue":{"value":"false"},"description":"If true, keyboard navigation will skip this item. This prop is also passed to the child.","name":"disabled","parent":{"fileName":"core/src/components/Menu/MenuGridItem/MenuGridItem.tsx","name":"MenuGridItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuGridItem/MenuGridItem.tsx","name":"MenuGridItemProps"}],"required":false,"type":{"name":"boolean"}},"closeMenu":{"defaultValue":null,"description":"A callback function to close the wrapping menu.","name":"closeMenu","parent":{"fileName":"core/src/components/Menu/MenuGridItem/MenuGridItem.tsx","name":"MenuGridItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuGridItem/MenuGridItem.tsx","name":"MenuGridItemProps"}],"required":false,"type":{"name":"(option: CloseMenuOption) => void"}},"activeItemIndex":{"defaultValue":{"value":"-1"},"description":"The currently active index of the wrapping menu.","name":"activeItemIndex","parent":{"fileName":"core/src/components/Menu/MenuGridItem/MenuGridItem.tsx","name":"MenuGridItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuGridItem/MenuGridItem.tsx","name":"MenuGridItemProps"}],"required":false,"type":{"name":"number"}},"setActiveItemIndex":{"defaultValue":null,"description":"Callback function to set the active item index.","name":"setActiveItemIndex","parent":{"fileName":"core/src/components/Menu/MenuGridItem/MenuGridItem.tsx","name":"MenuGridItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuGridItem/MenuGridItem.tsx","name":"MenuGridItemProps"}],"required":false,"type":{"name":"(index: number) => void"}},"getNextSelectableIndex":{"defaultValue":null,"description":"Function to get the next selectable index.","name":"getNextSelectableIndex","parent":{"fileName":"core/src/components/Menu/MenuGridItem/MenuGridItem.tsx","name":"MenuGridItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuGridItem/MenuGridItem.tsx","name":"MenuGridItemProps"}],"required":false,"type":{"name":"(activeItemIndex: number) => number"}},"getPreviousSelectableIndex":{"defaultValue":null,"description":"Function to get the previous selectable index.","name":"getPreviousSelectableIndex","parent":{"fileName":"core/src/components/Menu/MenuGridItem/MenuGridItem.tsx","name":"MenuGridItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuGridItem/MenuGridItem.tsx","name":"MenuGridItemProps"}],"required":false,"type":{"name":"(activeItemIndex: number) => number"}},"index":{"defaultValue":null,"description":"The index of this menu grid item.","name":"index","parent":{"fileName":"core/src/components/Menu/MenuGridItem/MenuGridItem.tsx","name":"MenuGridItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuGridItem/MenuGridItem.tsx","name":"MenuGridItemProps"}],"required":false,"type":{"name":"number"}},"isUnderSubMenu":{"defaultValue":{"value":"false"},"description":"If true, this item is under a submenu instead of a top-level menu.","name":"isUnderSubMenu","parent":{"fileName":"core/src/components/Menu/MenuGridItem/MenuGridItem.tsx","name":"MenuGridItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuGridItem/MenuGridItem.tsx","name":"MenuGridItemProps"}],"required":false,"type":{"name":"boolean"}},"setSubMenuIsOpenByIndex":{"defaultValue":null,"description":"Callback function to open or close a submenu by its index.","name":"setSubMenuIsOpenByIndex","parent":{"fileName":"core/src/components/Menu/MenuGridItem/MenuGridItem.tsx","name":"MenuGridItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuGridItem/MenuGridItem.tsx","name":"MenuGridItemProps"}],"required":false,"type":{"name":"(index: number, isOpen: boolean) => void"}},"useDocumentEventListeners":{"defaultValue":{"value":"false"},"description":"If true, event listeners will be attached to the document.","name":"useDocumentEventListeners","parent":{"fileName":"core/src/components/Menu/MenuGridItem/MenuGridItem.tsx","name":"MenuGridItemProps"},"declarations":[{"fileName":"core/src/components/Menu/MenuGridItem/MenuGridItem.tsx","name":"MenuGridItemProps"}],"required":false,"type":{"name":"boolean"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Menu/MenuTitle/MenuTitle.type.ts":{"hash":"a915f347a2a81b27246e9461384d73ad","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Menu/MenuTitle/MenuTitle.type.ts","components":[]}},"/Users/talko/Development/vibe/packages/core/src/components/MenuButton/MenuButton.tsx":{"hash":"ec42a6d11bc33bcf2462ac8aa7a3c58d","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/MenuButton/MenuButton.tsx","components":[{"displayName":"MenuButton","description":"","props":{"active":{"defaultValue":null,"description":"If true, the button is in an active state.","name":"active","parent":{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"},"declarations":[{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"}],"required":false,"type":{"name":"boolean"}},"openDialogComponentClassName":{"defaultValue":null,"description":"Class name applied to the button when the dialog is open.","name":"openDialogComponentClassName","parent":{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"},"declarations":[{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"}],"required":false,"type":{"name":"string"}},"component":{"defaultValue":null,"description":"The component used as the button icon.","name":"component","parent":{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"},"declarations":[{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"}],"required":false,"type":{"name":"any"}},"size":{"defaultValue":{"value":"small"},"description":"The size of the button.","name":"size","parent":{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"},"declarations":[{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"}],"required":false,"type":{"name":"enum","raw":"MenuButtonSize","value":[{"value":"\"xxs\""},{"value":"\"xs\""},{"value":"\"small\""},{"value":"\"medium\""},{"value":"\"large\""}]}},"open":{"defaultValue":{"value":"false"},"description":"If true, the menu is open.","name":"open","parent":{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"},"declarations":[{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"}],"required":false,"type":{"name":"boolean"}},"onClick":{"defaultValue":null,"description":"Callback fired when the button is clicked.","name":"onClick","parent":{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"},"declarations":[{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"}],"required":false,"type":{"name":"(event: React.MouseEvent) => void"}},"zIndex":{"defaultValue":{"value":"null"},"description":"The z-index of the menu.","name":"zIndex","parent":{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"},"declarations":[{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"}],"required":false,"type":{"name":"number"}},"ariaLabel":{"defaultValue":{"value":"Menu"},"description":"The label of the button for accessibility.","name":"ariaLabel","parent":{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"},"declarations":[{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"}],"required":false,"type":{"name":"string"}},"dialogClassName":{"defaultValue":null,"description":"Class name applied to the menu dialog wrapper.","name":"dialogClassName","parent":{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"},"declarations":[{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"}],"required":false,"type":{"name":"string"}},"dialogOffset":{"defaultValue":{"value":"{ main: 8, secondary: 0 }"},"description":"The offset of the menu relative to the button.","name":"dialogOffset","parent":{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"},"declarations":[{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"}],"required":false,"type":{"name":"DialogOffset"}},"dialogPaddingSize":{"defaultValue":{"value":"DialogContentContainer.sizes.SMALL"},"description":"The padding size inside the menu dialog.","name":"dialogPaddingSize","parent":{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"},"declarations":[{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"}],"required":false,"type":{"name":"enum","raw":"DialogSize","value":[{"value":"\"small\""},{"value":"\"medium\""},{"value":"\"large\""},{"value":"\"none\""}]}},"dialogPosition":{"defaultValue":{"value":"Dialog.positions.BOTTOM_START"},"description":"The position of the menu dialog relative to the button.","name":"dialogPosition","parent":{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"},"declarations":[{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"}],"required":false,"type":{"name":"enum","raw":"DialogPosition","value":[{"value":"\"left\""},{"value":"\"left-start\""},{"value":"\"left-end\""},{"value":"\"right\""},{"value":"\"right-start\""},{"value":"\"right-end\""},{"value":"\"top\""},{"value":"\"top-start\""},{"value":"\"top-end\""},{"value":"\"bottom\""},{"value":"\"bottom-start\""},{"value":"\"bottom-end\""}]}},"dialogShowTriggerIgnoreClass":{"defaultValue":null,"description":"Classes that prevent showing the dialog when present.","name":"dialogShowTriggerIgnoreClass","parent":{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"},"declarations":[{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"}],"required":false,"type":{"name":"string | string[]"}},"dialogHideTriggerIgnoreClass":{"defaultValue":null,"description":"Classes that prevent hiding the dialog when present.","name":"dialogHideTriggerIgnoreClass","parent":{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"},"declarations":[{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"}],"required":false,"type":{"name":"string | string[]"}},"dialogContainerSelector":{"defaultValue":null,"description":"The container selector in which to append the dialog.","name":"dialogContainerSelector","parent":{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"},"declarations":[{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"}],"required":false,"type":{"name":"string"}},"startingEdge":{"defaultValue":{"value":"bottom"},"description":"The starting edge alignment of the menu.","name":"startingEdge","parent":{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"},"declarations":[{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"}],"required":false,"type":{"name":"string"}},"onMenuShow":{"defaultValue":null,"description":"Callback fired when the menu is shown.","name":"onMenuShow","parent":{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"},"declarations":[{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"}],"required":false,"type":{"name":"() => void"}},"onMenuHide":{"defaultValue":null,"description":"Callback fired when the menu is hidden.","name":"onMenuHide","parent":{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"},"declarations":[{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"}],"required":false,"type":{"name":"() => void"}},"text":{"defaultValue":null,"description":"The text displayed inside the button.","name":"text","parent":{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"},"declarations":[{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"}],"required":false,"type":{"name":"string"}},"disabled":{"defaultValue":{"value":"false"},"description":"If true, the button is disabled.","name":"disabled","parent":{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"},"declarations":[{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"}],"required":false,"type":{"name":"boolean"}},"tooltipContent":{"defaultValue":null,"description":"The tooltip content displayed when hovering over the button.","name":"tooltipContent","parent":{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"},"declarations":[{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"}],"required":false,"type":{"name":"string"}},"removeTabCloseTrigger":{"defaultValue":{"value":"false"},"description":"If true, removes the tab key from the hide trigger.","name":"removeTabCloseTrigger","parent":{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"},"declarations":[{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"}],"required":false,"type":{"name":"boolean"}},"tooltipTriggers":{"defaultValue":{"value":"[\"mouseleave\"]"},"description":"The triggers that cause the tooltip to show or hide.","name":"tooltipTriggers","parent":{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"},"declarations":[{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"}],"required":false,"type":{"name":"DialogTriggerEvent | DialogTriggerEvent[]"}},"tooltipPosition":{"defaultValue":{"value":"right"},"description":"The position of the tooltip.","name":"tooltipPosition","parent":{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"},"declarations":[{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"}],"required":false,"type":{"name":"enum","raw":"TooltipPositions","value":[{"value":"\"left\""},{"value":"\"right\""},{"value":"\"top\""},{"value":"\"bottom\""}]}},"tooltipReferenceClassName":{"defaultValue":null,"description":"Class name applied to the tooltip reference wrapper.","name":"tooltipReferenceClassName","parent":{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"},"declarations":[{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"}],"required":false,"type":{"name":"string"}},"tooltipProps":{"defaultValue":null,"description":"Additional props for customizing the tooltip.","name":"tooltipProps","parent":{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"},"declarations":[{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"}],"required":false,"type":{"name":"Partial<TooltipProps>"}},"hideWhenReferenceHidden":{"defaultValue":{"value":"true"},"description":"If true, hides the menu and tooltip when the button is not visible.","name":"hideWhenReferenceHidden","parent":{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"},"declarations":[{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"}],"required":false,"type":{"name":"boolean"}},"children":{"defaultValue":null,"description":"The content inside the menu button.","name":"children","parent":{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"},"declarations":[{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"}],"required":false,"type":{"name":"ElementContent"}},"componentPosition":{"defaultValue":{"value":"start"},"description":"The position of the component relative to the text.","name":"componentPosition","parent":{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"},"declarations":[{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"}],"required":false,"type":{"name":"enum","raw":"MenuButtonComponentPosition","value":[{"value":"\"start\""},{"value":"\"end\""}]}},"triggerElement":{"defaultValue":null,"description":"The element used as the trigger for the menu.","name":"triggerElement","parent":{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"},"declarations":[{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"}],"required":false,"type":{"name":"React.ElementType"}},"closeMenuOnItemClick":{"defaultValue":null,"description":"If true, closes the menu when a menu item is clicked.","name":"closeMenuOnItemClick","parent":{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"},"declarations":[{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"}],"required":false,"type":{"name":"boolean"}},"showTooltipOnlyOnTriggerElement":{"defaultValue":null,"description":"If true, the tooltip appears only when hovering over the trigger element, not the menu dialog.","name":"showTooltipOnlyOnTriggerElement","parent":{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"},"declarations":[{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"}],"required":false,"type":{"name":"boolean"}},"closeDialogOnContentClick":{"defaultValue":{"value":"false"},"description":"If true, closes the menu when clicking inside the dialog.","name":"closeDialogOnContentClick","parent":{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"},"declarations":[{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"}],"required":false,"type":{"name":"boolean"}},"ariaControls":{"defaultValue":null,"description":"The ARIA control of the menu button for accessibility.","name":"ariaControls","parent":{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"},"declarations":[{"fileName":"core/src/components/MenuButton/MenuButton.tsx","name":"MenuButtonProps"}],"required":false,"type":{"name":"string"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/LegacyModal/LegacyModal.tsx":{"hash":"c9d7c6fc833795f21593dd4379888d45","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/LegacyModal/LegacyModal.tsx","components":[]}},"/Users/talko/Development/vibe/packages/core/src/components/LegacyModal/LegacyModalHeader/LegacyModalHeader.tsx":{"hash":"923b2225e4daa6355ef377c0299831a8","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/LegacyModal/LegacyModalHeader/LegacyModalHeader.tsx","components":[{"displayName":"LegacyModalHeader","description":"","props":{"title":{"defaultValue":null,"description":"","name":"title","parent":{"fileName":"core/src/components/LegacyModal/LegacyModalHeader/LegacyModalHeader.tsx","name":"LegacyModalHeaderWithOnlyTitle"},"declarations":[{"fileName":"core/src/components/LegacyModal/LegacyModalHeader/LegacyModalHeader.tsx","name":"LegacyModalHeaderWithOnlyTitle"},{"fileName":"core/src/components/LegacyModal/LegacyModalHeader/LegacyModalHeader.tsx","name":"LegacyModalHeaderWithOnlyChildren"}],"required":false,"type":{"name":"ElementContent"}},"description":{"defaultValue":{"value":""},"description":"Description of the modal - pure string description is a recommended standard, use JSX ability only if there is a need to add links","name":"description","parent":{"fileName":"core/src/components/LegacyModal/LegacyModalHeader/LegacyModalHeader.tsx","name":"BaseLegacyModalHeaderProps"},"declarations":[{"fileName":"core/src/components/LegacyModal/LegacyModalHeader/LegacyModalHeader.tsx","name":"BaseLegacyModalHeaderProps"}],"required":false,"type":{"name":"ElementContent"}},"icon":{"defaultValue":null,"description":"Icon to be rendered before the title","name":"icon","parent":{"fileName":"core/src/components/LegacyModal/LegacyModalHeader/LegacyModalHeader.tsx","name":"BaseLegacyModalHeaderProps"},"declarations":[{"fileName":"core/src/components/LegacyModal/LegacyModalHeader/LegacyModalHeader.tsx","name":"BaseLegacyModalHeaderProps"}],"required":false,"type":{"name":"any"}},"titleClassName":{"defaultValue":null,"description":"Class name for the title","name":"titleClassName","parent":{"fileName":"core/src/components/LegacyModal/LegacyModalHeader/LegacyModalHeader.tsx","name":"BaseLegacyModalHeaderProps"},"declarations":[{"fileName":"core/src/components/LegacyModal/LegacyModalHeader/LegacyModalHeader.tsx","name":"BaseLegacyModalHeaderProps"}],"required":false,"type":{"name":"string"}},"closeModal":{"defaultValue":null,"description":"closes the Modal. No need to provide it, it is being provided by the modal","name":"closeModal","parent":{"fileName":"core/src/components/LegacyModal/LegacyModalHeader/LegacyModalHeader.tsx","name":"BaseLegacyModalHeaderProps"},"declarations":[{"fileName":"core/src/components/LegacyModal/LegacyModalHeader/LegacyModalHeader.tsx","name":"BaseLegacyModalHeaderProps"}],"required":false,"type":{"name":"() => void"}},"descriptionClassName":{"defaultValue":null,"description":"Class name for the description","name":"descriptionClassName","parent":{"fileName":"core/src/components/LegacyModal/LegacyModalHeader/LegacyModalHeader.tsx","name":"BaseLegacyModalHeaderProps"},"declarations":[{"fileName":"core/src/components/LegacyModal/LegacyModalHeader/LegacyModalHeader.tsx","name":"BaseLegacyModalHeaderProps"}],"required":false,"type":{"name":"string"}},"iconSize":{"defaultValue":{"value":"24"},"description":"Size of the icon","name":"iconSize","parent":{"fileName":"core/src/components/LegacyModal/LegacyModalHeader/LegacyModalHeader.tsx","name":"BaseLegacyModalHeaderProps"},"declarations":[{"fileName":"core/src/components/LegacyModal/LegacyModalHeader/LegacyModalHeader.tsx","name":"BaseLegacyModalHeaderProps"}],"required":false,"type":{"name":"number"}},"iconClassName":{"defaultValue":null,"description":"class name for the icon","name":"iconClassName","parent":{"fileName":"core/src/components/LegacyModal/LegacyModalHeader/LegacyModalHeader.tsx","name":"BaseLegacyModalHeaderProps"},"declarations":[{"fileName":"core/src/components/LegacyModal/LegacyModalHeader/LegacyModalHeader.tsx","name":"BaseLegacyModalHeaderProps"}],"required":false,"type":{"name":"string"}},"closeButtonAriaLabel":{"defaultValue":{"value":"close"},"description":"Aria label for the close button","name":"closeButtonAriaLabel","parent":{"fileName":"core/src/components/LegacyModal/LegacyModalHeader/LegacyModalHeader.tsx","name":"BaseLegacyModalHeaderProps"},"declarations":[{"fileName":"core/src/components/LegacyModal/LegacyModalHeader/LegacyModalHeader.tsx","name":"BaseLegacyModalHeaderProps"}],"required":false,"type":{"name":"string"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/LegacyModal/LegacyModalContent/LegacyModalContent.tsx":{"hash":"75a488f1604e49fd381d6e637b3afc51","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/LegacyModal/LegacyModalContent/LegacyModalContent.tsx","components":[{"displayName":"LegacyModalContent","description":"","props":{"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/LegacyModal/LegacyModalFooter/LegacyModalFooter.tsx":{"hash":"758cc5f1eb663acf4b453cc5ebcd650f","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/LegacyModal/LegacyModalFooter/LegacyModalFooter.tsx","components":[{"displayName":"LegacyModalFooter","description":"","props":{"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/LegacyModal/LegacyModalFooter/LegacyModalFooterButtons/LegacyModalFooterButtons.tsx":{"hash":"81e3f5023abee8456628e801f15597e0","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/LegacyModal/LegacyModalFooter/LegacyModalFooterButtons/LegacyModalFooterButtons.tsx","components":[{"displayName":"LegacyModalFooterButtons","description":"","props":{"primaryButtonText":{"defaultValue":null,"description":"","name":"primaryButtonText","parent":{"fileName":"core/src/components/LegacyModal/LegacyModalFooter/LegacyModalFooterButtons/LegacyModalFooterButtons.tsx","name":"LegacyModalFooterButtonsProps"},"declarations":[{"fileName":"core/src/components/LegacyModal/LegacyModalFooter/LegacyModalFooterButtons/LegacyModalFooterButtons.tsx","name":"LegacyModalFooterButtonsProps"}],"required":true,"type":{"name":"string"}},"secondaryButtonText":{"defaultValue":null,"description":"","name":"secondaryButtonText","parent":{"fileName":"core/src/components/LegacyModal/LegacyModalFooter/LegacyModalFooterButtons/LegacyModalFooterButtons.tsx","name":"LegacyModalFooterButtonsProps"},"declarations":[{"fileName":"core/src/components/LegacyModal/LegacyModalFooter/LegacyModalFooterButtons/LegacyModalFooterButtons.tsx","name":"LegacyModalFooterButtonsProps"}],"required":false,"type":{"name":"string"}},"disablePrimaryButton":{"defaultValue":null,"description":"","name":"disablePrimaryButton","parent":{"fileName":"core/src/components/LegacyModal/LegacyModalFooter/LegacyModalFooterButtons/LegacyModalFooterButtons.tsx","name":"LegacyModalFooterButtonsProps"},"declarations":[{"fileName":"core/src/components/LegacyModal/LegacyModalFooter/LegacyModalFooterButtons/LegacyModalFooterButtons.tsx","name":"LegacyModalFooterButtonsProps"}],"required":false,"type":{"name":"boolean"}},"onPrimaryButtonClick":{"defaultValue":null,"description":"","name":"onPrimaryButtonClick","parent":{"fileName":"core/src/components/LegacyModal/LegacyModalFooter/LegacyModalFooterButtons/LegacyModalFooterButtons.tsx","name":"LegacyModalFooterButtonsProps"},"declarations":[{"fileName":"core/src/components/LegacyModal/LegacyModalFooter/LegacyModalFooterButtons/LegacyModalFooterButtons.tsx","name":"LegacyModalFooterButtonsProps"}],"required":false,"type":{"name":"() => void"}},"onSecondaryButtonClick":{"defaultValue":null,"description":"","name":"onSecondaryButtonClick","parent":{"fileName":"core/src/components/LegacyModal/LegacyModalFooter/LegacyModalFooterButtons/LegacyModalFooterButtons.tsx","name":"LegacyModalFooterButtonsProps"},"declarations":[{"fileName":"core/src/components/LegacyModal/LegacyModalFooter/LegacyModalFooterButtons/LegacyModalFooterButtons.tsx","name":"LegacyModalFooterButtonsProps"}],"required":false,"type":{"name":"() => void"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/MultiStepIndicator/MultiStepIndicator.tsx":{"hash":"0154fa80f364ea71b0bfdc93650b263f","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/MultiStepIndicator/MultiStepIndicator.tsx","components":[{"displayName":"MultiStepIndicator","description":"","props":{"steps":{"defaultValue":{"value":"[]"},"description":"The list of steps in the multi-step indicator.","name":"steps","parent":{"fileName":"core/src/components/MultiStepIndicator/MultiStepIndicator.tsx","name":"MultiStepIndicatorProps"},"declarations":[{"fileName":"core/src/components/MultiStepIndicator/MultiStepIndicator.tsx","name":"MultiStepIndicatorProps"}],"required":false,"type":{"name":"Step[]"}},"type":{"defaultValue":{"value":"primary"},"description":"The visual style of the multi-step indicator.","name":"type","parent":{"fileName":"core/src/components/MultiStepIndicator/MultiStepIndicator.tsx","name":"MultiStepIndicatorProps"},"declarations":[{"fileName":"core/src/components/MultiStepIndicator/MultiStepIndicator.tsx","name":"MultiStepIndicatorProps"}],"required":false,"type":{"name":"enum","raw":"MultiStepType","value":[{"value":"\"primary\""},{"value":"\"success\""},{"value":"\"danger\""},{"value":"\"dark\""}]}},"stepComponentClassName":{"defaultValue":null,"description":"Class name applied to each step component.","name":"stepComponentClassName","parent":{"fileName":"core/src/components/MultiStepIndicator/MultiStepIndicator.tsx","name":"MultiStepIndicatorProps"},"declarations":[{"fileName":"core/src/components/MultiStepIndicator/MultiStepIndicator.tsx","name":"MultiStepIndicatorProps"}],"required":false,"type":{"name":"string"}},"dividerComponentClassName":{"defaultValue":null,"description":"Class name applied to the divider between steps.","name":"dividerComponentClassName","parent":{"fileName":"core/src/components/MultiStepIndicator/MultiStepIndicator.tsx","name":"MultiStepIndicatorProps"},"declarations":[{"fileName":"core/src/components/MultiStepIndicator/MultiStepIndicator.tsx","name":"MultiStepIndicatorProps"}],"required":false,"type":{"name":"string"}},"fulfilledStepIcon":{"defaultValue":null,"description":"The icon used for fulfilled steps.","name":"fulfilledStepIcon","parent":{"fileName":"core/src/components/MultiStepIndicator/MultiStepIndicator.tsx","name":"MultiStepIndicatorProps"},"declarations":[{"fileName":"core/src/components/MultiStepIndicator/MultiStepIndicator.tsx","name":"MultiStepIndicatorProps"}],"required":false,"type":{"name":"any"}},"fulfilledStepIconType":{"defaultValue":{"value":"svg"},"description":"The type of the fulfilled step icon.","name":"fulfilledStepIconType","parent":{"fileName":"core/src/components/MultiStepIndicator/MultiStepIndicator.tsx","name":"MultiStepIndicatorProps"},"declarations":[{"fileName":"core/src/components/MultiStepIndicator/MultiStepIndicator.tsx","name":"MultiStepIndicatorProps"}],"required":false,"type":{"name":"enum","raw":"\"svg\" | \"font\"","value":[{"value":"\"svg\""},{"value":"\"font\""}]}},"isFulfilledStepDisplayNumber":{"defaultValue":{"value":"false"},"description":"If true, displays the step number instead of the fulfilled step icon.","name":"isFulfilledStepDisplayNumber","parent":{"fileName":"core/src/components/MultiStepIndicator/MultiStepIndicator.tsx","name":"MultiStepIndicatorProps"},"declarations":[{"fileName":"core/src/components/MultiStepIndicator/MultiStepIndicator.tsx","name":"MultiStepIndicatorProps"}],"required":false,"type":{"name":"boolean"}},"onClick":{"defaultValue":null,"description":"Callback fired when a step is clicked.","name":"onClick","parent":{"fileName":"core/src/components/MultiStepIndicator/MultiStepIndicator.tsx","name":"MultiStepIndicatorProps"},"declarations":[{"fileName":"core/src/components/MultiStepIndicator/MultiStepIndicator.tsx","name":"MultiStepIndicatorProps"}],"required":false,"type":{"name":"(stepNumber: number) => void"}},"textPlacement":{"defaultValue":{"value":"horizontal"},"description":"The placement of the step text.","name":"textPlacement","parent":{"fileName":"core/src/components/MultiStepIndicator/MultiStepIndicator.tsx","name":"MultiStepIndicatorProps"},"declarations":[{"fileName":"core/src/components/MultiStepIndicator/MultiStepIndicator.tsx","name":"MultiStepIndicatorProps"}],"required":false,"type":{"name":"enum","raw":"TextPlacement","value":[{"value":"\"horizontal\""},{"value":"\"vertical\""}]}},"size":{"defaultValue":null,"description":"The size of the multi-step indicator.","name":"size","parent":{"fileName":"core/src/components/MultiStepIndicator/MultiStepIndicator.tsx","name":"MultiStepIndicatorProps"},"declarations":[{"fileName":"core/src/components/MultiStepIndicator/MultiStepIndicator.tsx","name":"MultiStepIndicatorProps"}],"required":false,"type":{"name":"enum","raw":"MultiStepSize","value":[{"value":"\"regular\""},{"value":"\"compact\""}]}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/ProgressBars/LinearProgressBar/LinearProgressBar.tsx":{"hash":"cd4029dde29ad7532747523ae9b86306","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/ProgressBars/LinearProgressBar/LinearProgressBar.tsx","components":[{"displayName":"LinearProgressBar","description":"","props":{"barStyle":{"defaultValue":{"value":"primary"},"description":"Determines the visual style of the progress bar.","name":"barStyle","parent":{"fileName":"core/src/components/ProgressBars/LinearProgressBar/LinearProgressBar.tsx","name":"LinearProgressBarProps"},"declarations":[{"fileName":"core/src/components/ProgressBars/LinearProgressBar/LinearProgressBar.tsx","name":"LinearProgressBarProps"}],"required":false,"type":{"name":"enum","raw":"LinearProgressBarStyle","value":[{"value":"\"primary\""},{"value":"\"secondary\""},{"value":"\"positive\""},{"value":"\"negative\""},{"value":"\"warning\""},{"value":"\"none\""}]}},"min":{"defaultValue":{"value":"0"},"description":"The minimum value of the progress bar.","name":"min","parent":{"fileName":"core/src/components/ProgressBars/LinearProgressBar/LinearProgressBar.tsx","name":"LinearProgressBarProps"},"declarations":[{"fileName":"core/src/components/ProgressBars/LinearProgressBar/LinearProgressBar.tsx","name":"LinearProgressBarProps"}],"required":false,"type":{"name":"number"}},"max":{"defaultValue":{"value":"100"},"description":"The maximum value of the progress bar.","name":"max","parent":{"fileName":"core/src/components/ProgressBars/LinearProgressBar/LinearProgressBar.tsx","name":"LinearProgressBarProps"},"declarations":[{"fileName":"core/src/components/ProgressBars/LinearProgressBar/LinearProgressBar.tsx","name":"LinearProgressBarProps"}],"required":false,"type":{"name":"number"}},"value":{"defaultValue":{"value":"0"},"description":"The current progress value.","name":"value","parent":{"fileName":"core/src/components/ProgressBars/LinearProgressBar/LinearProgressBar.tsx","name":"LinearProgressBarProps"},"declarations":[{"fileName":"core/src/components/ProgressBars/LinearProgressBar/LinearProgressBar.tsx","name":"LinearProgressBarProps"}],"required":false,"type":{"name":"number"}},"valueSecondary":{"defaultValue":{"value":"0"},"description":"The secondary progress value.","name":"valueSecondary","parent":{"fileName":"core/src/components/ProgressBars/LinearProgressBar/LinearProgressBar.tsx","name":"LinearProgressBarProps"},"declarations":[{"fileName":"core/src/components/ProgressBars/LinearProgressBar/LinearProgressBar.tsx","name":"LinearProgressBarProps"}],"required":false,"type":{"name":"number"}},"animated":{"defaultValue":{"value":"true"},"description":"If true, enables animation effects.","name":"animated","parent":{"fileName":"core/src/components/ProgressBars/LinearProgressBar/LinearProgressBar.tsx","name":"LinearProgressBarProps"},"declarations":[{"fileName":"core/src/components/ProgressBars/LinearProgressBar/LinearProgressBar.tsx","name":"LinearProgressBarProps"}],"required":false,"type":{"name":"boolean"}},"size":{"defaultValue":{"value":"small"},"description":"The size of the progress bar.","name":"size","parent":{"fileName":"core/src/components/ProgressBars/LinearProgressBar/LinearProgressBar.tsx","name":"LinearProgressBarProps"},"declarations":[{"fileName":"core/src/components/ProgressBars/LinearProgressBar/LinearProgressBar.tsx","name":"LinearProgressBarProps"}],"required":false,"type":{"name":"enum","raw":"LinearProgressBarSize","value":[{"value":"\"xxs\""},{"value":"\"xs\""},{"value":"\"small\""},{"value":"\"medium\""},{"value":"\"large\""}]}},"indicateProgress":{"defaultValue":{"value":"false"},"description":"If true, displays the progress percentage.","name":"indicateProgress","parent":{"fileName":"core/src/components/ProgressBars/LinearProgressBar/LinearProgressBar.tsx","name":"LinearProgressBarProps"},"declarations":[{"fileName":"core/src/components/ProgressBars/LinearProgressBar/LinearProgressBar.tsx","name":"LinearProgressBarProps"}],"required":false,"type":{"name":"boolean"}},"multi":{"defaultValue":{"value":"false"},"description":"If true, enables multiple progress bars.\n**Note:** `value`, `valueSecondary`, and `barStyle` will not be used.","name":"multi","parent":{"fileName":"core/src/components/ProgressBars/LinearProgressBar/LinearProgressBar.tsx","name":"LinearProgressBarProps"},"declarations":[{"fileName":"core/src/components/ProgressBars/LinearProgressBar/LinearProgressBar.tsx","name":"LinearProgressBarProps"}],"required":false,"type":{"name":"boolean"}},"multiValues":{"defaultValue":{"value":"[]"},"description":"An array of bar values and colors for multi-bar mode.","name":"multiValues","parent":{"fileName":"core/src/components/ProgressBars/LinearProgressBar/LinearProgressBar.tsx","name":"LinearProgressBarProps"},"declarations":[{"fileName":"core/src/components/ProgressBars/LinearProgressBar/LinearProgressBar.tsx","name":"LinearProgressBarProps"}],"required":false,"type":{"name":"{ value?: number; color?: string; }[]"}},"ariaLabel":{"defaultValue":{"value":""},"description":"The ARIA label for the progress bar.","name":"ariaLabel","parent":{"fileName":"core/src/components/ProgressBars/LinearProgressBar/LinearProgressBar.tsx","name":"LinearProgressBarProps"},"declarations":[{"fileName":"core/src/components/ProgressBars/LinearProgressBar/LinearProgressBar.tsx","name":"LinearProgressBarProps"}],"required":false,"type":{"name":"string"}},"fullWidth":{"defaultValue":{"value":"false"},"description":"If true, makes the progress bar span the full container width.","name":"fullWidth","parent":{"fileName":"core/src/components/ProgressBars/LinearProgressBar/LinearProgressBar.tsx","name":"LinearProgressBarProps"},"declarations":[{"fileName":"core/src/components/ProgressBars/LinearProgressBar/LinearProgressBar.tsx","name":"LinearProgressBarProps"}],"required":false,"type":{"name":"boolean"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/RadioButton/RadioButton.tsx":{"hash":"29e96d09ecae4e4913dbc50bd5760e6d","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/RadioButton/RadioButton.tsx","components":[{"displayName":"RadioButton","description":"","props":{"labelClassName":{"defaultValue":null,"description":"Class name applied to the label text.","name":"labelClassName","parent":{"fileName":"core/src/components/RadioButton/RadioButton.tsx","name":"RadioButtonProps"},"declarations":[{"fileName":"core/src/components/RadioButton/RadioButton.tsx","name":"RadioButtonProps"}],"required":false,"type":{"name":"string"}},"radioButtonClassName":{"defaultValue":null,"description":"Class name applied to the radio button element.","name":"radioButtonClassName","parent":{"fileName":"core/src/components/RadioButton/RadioButton.tsx","name":"RadioButtonProps"},"declarations":[{"fileName":"core/src/components/RadioButton/RadioButton.tsx","name":"RadioButtonProps"}],"required":false,"type":{"name":"string"}},"text":{"defaultValue":{"value":""},"description":"The label text displayed next to the radio button.","name":"text","parent":{"fileName":"core/src/components/RadioButton/RadioButton.tsx","name":"RadioButtonProps"},"declarations":[{"fileName":"core/src/components/RadioButton/RadioButton.tsx","name":"RadioButtonProps"}],"required":false,"type":{"name":"string"}},"value":{"defaultValue":{"value":""},"description":"The value associated with the radio button.","name":"value","parent":{"fileName":"core/src/components/RadioButton/RadioButton.tsx","name":"RadioButtonProps"},"declarations":[{"fileName":"core/src/components/RadioButton/RadioButton.tsx","name":"RadioButtonProps"}],"required":false,"type":{"name":"string"}},"name":{"defaultValue":{"value":""},"description":"The name of the radio button group.","name":"name","parent":{"fileName":"core/src/components/RadioButton/RadioButton.tsx","name":"RadioButtonProps"},"declarations":[{"fileName":"core/src/components/RadioButton/RadioButton.tsx","name":"RadioButtonProps"}],"required":false,"type":{"name":"string"}},"autoFocus":{"defaultValue":null,"description":"If true, the radio button automatically receives focus on mount.","name":"autoFocus","parent":{"fileName":"core/src/components/RadioButton/RadioButton.tsx","name":"RadioButtonProps"},"declarations":[{"fileName":"core/src/components/RadioButton/RadioButton.tsx","name":"RadioButtonProps"}],"required":false,"type":{"name":"boolean"}},"disabled":{"defaultValue":{"value":"false"},"description":"If true, the radio button is disabled.","name":"disabled","parent":{"fileName":"core/src/components/RadioButton/RadioButton.tsx","name":"RadioButtonProps"},"declarations":[{"fileName":"core/src/components/RadioButton/RadioButton.tsx","name":"RadioButtonProps"}],"required":false,"type":{"name":"boolean"}},"disabledReason":{"defaultValue":null,"description":"The reason why the radio button is disabled, displayed in a tooltip.","name":"disabledReason","parent":{"fileName":"core/src/components/RadioButton/RadioButton.tsx","name":"RadioButtonProps"},"declarations":[{"fileName":"core/src/components/RadioButton/RadioButton.tsx","name":"RadioButtonProps"}],"required":false,"type":{"name":"string"}},"defaultChecked":{"defaultValue":{"value":"false"},"description":"If true, the radio button is checked by default.","name":"defaultChecked","parent":{"fileName":"core/src/components/RadioButton/RadioButton.tsx","name":"RadioButtonProps"},"declarations":[{"fileName":"core/src/components/RadioButton/RadioButton.tsx","name":"RadioButtonProps"}],"required":false,"type":{"name":"boolean"}},"children":{"defaultValue":null,"description":"The child elements inside the radio button.","name":"children","parent":{"fileName":"core/src/components/RadioButton/RadioButton.tsx","name":"RadioButtonProps"},"declarations":[{"fileName":"core/src/components/RadioButton/RadioButton.tsx","name":"RadioButtonProps"}],"required":false,"type":{"name":"React.ReactNode"}},"onSelect":{"defaultValue":null,"description":"Callback fired when the radio button selection changes.","name":"onSelect","parent":{"fileName":"core/src/components/RadioButton/RadioButton.tsx","name":"RadioButtonProps"},"declarations":[{"fileName":"core/src/components/RadioButton/RadioButton.tsx","name":"RadioButtonProps"}],"required":false,"type":{"name":"(event: React.ChangeEvent<HTMLInputElement>) => void"}},"checked":{"defaultValue":null,"description":"If provided, controls the checked state of the radio button.","name":"checked","parent":{"fileName":"core/src/components/RadioButton/RadioButton.tsx","name":"RadioButtonProps"},"declarations":[{"fileName":"core/src/components/RadioButton/RadioButton.tsx","name":"RadioButtonProps"}],"required":false,"type":{"name":"boolean"}},"retainChildClick":{"defaultValue":{"value":"true"},"description":"If true, clicking on children will trigger selection.","name":"retainChildClick","parent":{"fileName":"core/src/components/RadioButton/RadioButton.tsx","name":"RadioButtonProps"},"declarations":[{"fileName":"core/src/components/RadioButton/RadioButton.tsx","name":"RadioButtonProps"}],"required":false,"type":{"name":"boolean"}},"childrenTabIndex":{"defaultValue":{"value":"0"},"description":"The tab index applied to the children.","name":"childrenTabIndex","parent":{"fileName":"core/src/components/RadioButton/RadioButton.tsx","name":"RadioButtonProps"},"declarations":[{"fileName":"core/src/components/RadioButton/RadioButton.tsx","name":"RadioButtonProps"}],"required":false,"type":{"name":"string"}},"noLabelAnimation":{"defaultValue":{"value":"false"},"description":"If true, disables the label animation.","name":"noLabelAnimation","parent":{"fileName":"core/src/components/RadioButton/RadioButton.tsx","name":"RadioButtonProps"},"declarations":[{"fileName":"core/src/components/RadioButton/RadioButton.tsx","name":"RadioButtonProps"}],"required":false,"type":{"name":"boolean"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Search/Search.tsx":{"hash":"b3be750189782f34b9929deb268b6618","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Search/Search.tsx","components":[{"displayName":"Search","description":"","props":{"searchIconName":{"defaultValue":null,"description":"The icon used for the search button.","name":"searchIconName","parent":{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"},"declarations":[{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"}],"required":false,"type":{"name":"any"}},"clearIconName":{"defaultValue":null,"description":"The icon used for the clear button.","name":"clearIconName","parent":{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"},"declarations":[{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"}],"required":false,"type":{"name":"any"}},"clearIconLabel":{"defaultValue":{"value":"Clear"},"description":"The label for the clear button, for accessibility purposes.","name":"clearIconLabel","parent":{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"},"declarations":[{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"}],"required":false,"type":{"name":"string"}},"renderAction":{"defaultValue":null,"description":"Renders an additional action button in the search input.","name":"renderAction","parent":{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"},"declarations":[{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"}],"required":false,"type":{"name":"React.ReactElement<(ForwardRefExoticComponent<IconButtonProps & RefAttributes<HTMLElement>> & Required<IconButtonStaticProps>) | (ForwardRefExoticComponent<...> & Required<...>)>"}},"hideRenderActionOnInput":{"defaultValue":null,"description":"If true, hides the additional action button when input has text.","name":"hideRenderActionOnInput","parent":{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"},"declarations":[{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"}],"required":false,"type":{"name":"boolean"}},"value":{"defaultValue":null,"description":"The current value of the search input.","name":"value","parent":{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"},"declarations":[{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"}],"required":false,"type":{"name":"string"}},"placeholder":{"defaultValue":null,"description":"The placeholder text displayed when the input is empty.","name":"placeholder","parent":{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"},"declarations":[{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"}],"required":false,"type":{"name":"string"}},"size":{"defaultValue":{"value":"medium"},"description":"The size of the search input, affecting padding and font size.","name":"size","parent":{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"},"declarations":[{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"}],"required":false,"type":{"name":"enum","raw":"InputSize","value":[{"value":"\"small\""},{"value":"\"medium\""},{"value":"\"large\""}]}},"disabled":{"defaultValue":null,"description":"If true, disables the search input.","name":"disabled","parent":{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"},"declarations":[{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"}],"required":false,"type":{"name":"boolean"}},"loading":{"defaultValue":null,"description":"If true, displays a loading indicator inside the input.","name":"loading","parent":{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"},"declarations":[{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"}],"required":false,"type":{"name":"boolean"}},"autoFocus":{"defaultValue":null,"description":"If true, automatically focuses the search input on mount.","name":"autoFocus","parent":{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"},"declarations":[{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"}],"required":false,"type":{"name":"boolean"}},"autoComplete":{"defaultValue":{"value":"off"},"description":"Configures the browser's autocomplete behavior.","name":"autoComplete","parent":{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"},"declarations":[{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"}],"required":false,"type":{"name":"string"}},"inputAriaLabel":{"defaultValue":null,"description":"The ARIA label for the search input.","name":"inputAriaLabel","parent":{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"},"declarations":[{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"}],"required":false,"type":{"name":"React.AriaAttributes"}},"ariaExpanded":{"defaultValue":null,"description":"If true, indicates that a popup is open.","name":"ariaExpanded","parent":{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"},"declarations":[{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"}],"required":false,"type":{"name":"React.AriaAttributes"}},"ariaHasPopup":{"defaultValue":null,"description":"Specifies the type of popup associated with the search input.","name":"ariaHasPopup","parent":{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"},"declarations":[{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"}],"required":false,"type":{"name":"React.AriaAttributes"}},"debounceRate":{"defaultValue":{"value":"400"},"description":"The debounce rate for input value changes.","name":"debounceRate","parent":{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"},"declarations":[{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"}],"required":false,"type":{"name":"number"}},"searchResultsContainerId":{"defaultValue":null,"description":"The ID of the container where search results are displayed.","name":"searchResultsContainerId","parent":{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"},"declarations":[{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"}],"required":false,"type":{"name":"string"}},"currentAriaResultId":{"defaultValue":null,"description":"ARIA property indicating the currently active search result.","name":"currentAriaResultId","parent":{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"},"declarations":[{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"}],"required":false,"type":{"name":"React.AriaAttributes"}},"onChange":{"defaultValue":null,"description":"Callback fired when the search input value changes.","name":"onChange","parent":{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"},"declarations":[{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"}],"required":false,"type":{"name":"(value: string) => void"}},"onBlur":{"defaultValue":null,"description":"Callback fired when the search input loses focus.","name":"onBlur","parent":{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"},"declarations":[{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"}],"required":false,"type":{"name":"(event: React.FocusEvent) => void"}},"onFocus":{"defaultValue":null,"description":"Callback fired when the search input gains focus.","name":"onFocus","parent":{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"},"declarations":[{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"}],"required":false,"type":{"name":"(event: React.FocusEvent) => void"}},"onClear":{"defaultValue":null,"description":"Callback fired when the clear button is clicked.","name":"onClear","parent":{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"},"declarations":[{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"}],"required":false,"type":{"name":"() => void"}},"onKeyDown":{"defaultValue":null,"description":"Callback fired when a key is pressed inside the input.","name":"onKeyDown","parent":{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"},"declarations":[{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"}],"required":false,"type":{"name":"(event: React.KeyboardEvent<HTMLInputElement>) => void"}},"showClearIcon":{"defaultValue":{"value":"true"},"description":"If true, displays a clear button inside the search input.","name":"showClearIcon","parent":{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"},"declarations":[{"fileName":"core/src/components/Search/Search.types.ts","name":"SearchProps"}],"required":false,"type":{"name":"boolean"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Skeleton/Skeleton.tsx":{"hash":"07e9e93e4e9c803ef6cb1ad22e67b323","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Skeleton/Skeleton.tsx","components":[]}},"/Users/talko/Development/vibe/packages/core/src/components/Slider/Slider.tsx":{"hash":"f25b7af5f7cd1dbd6f8d889854c12656","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Slider/Slider.tsx","components":[{"displayName":"Slider","description":"","props":{"ariaLabel":{"defaultValue":null,"description":"Define a string that labels the current element (Slider)","name":"ariaLabel","declarations":[{"fileName":"core/src/components/Slider/Slider.tsx","name":"TypeLiteral"}],"required":false,"type":{"name":"string"}},"ariaLabelledby":{"defaultValue":null,"description":"ElementId of Node that have the text needed for labeling the current element (Slider)","name":"ariaLabelledby","declarations":[{"fileName":"core/src/components/Slider/Slider.tsx","name":"TypeLiteral"}],"required":false,"type":{"name":"string"}},"className":{"defaultValue":null,"description":"Custom `class name` to be added to the component-root-node","name":"className","declarations":[{"fileName":"core/src/components/Slider/Slider.tsx","name":"TypeLiteral"}],"required":false,"type":{"name":"string"}},"color":{"defaultValue":null,"description":"Color Mode (primary/positive/negative) of the component (Slider)","name":"color","declarations":[{"fileName":"core/src/components/Slider/Slider.tsx","name":"TypeLiteral"}],"required":false,"type":{"name":"enum","raw":"SliderColor","value":[{"value":"\"primary\""},{"value":"\"negative\""},{"value":"\"positive\""}]}},"data-testid":{"defaultValue":null,"description":"Unique TestId - can be used as Selector for integration tests and other needs (tracking, etc)","name":"data-testid","declarations":[{"fileName":"core/src/components/Slider/Slider.tsx","name":"TypeLiteral"}],"required":false,"type":{"name":"string"}},"defaultValue":{"defaultValue":{"value":"0"},"description":"","name":"defaultValue","declarations":[{"fileName":"core/src/components/Slider/Slider.tsx","name":"TypeLiteral"}],"required":false,"type":{"name":"number | number[]"}},"disabled":{"defaultValue":{"value":"false"},"description":"If set to true, Component (Slider) will be disabled\n - impossible to change value of component (Slider)\n - visual changes (opacity)","name":"disabled","declarations":[{"fileName":"core/src/components/Slider/Slider.tsx","name":"TypeLiteral"}],"required":false,"type":{"name":"boolean"}},"id":{"defaultValue":null,"description":"Attribute `id` to be added to the component-root-node","name":"id","declarations":[{"fileName":"core/src/components/Slider/Slider.tsx","name":"TypeLiteral"}],"required":false,"type":{"name":"string"}},"max":{"defaultValue":{"value":"100"},"description":"Max range value of the component (Slider)","name":"max","declarations":[{"fileName":"core/src/components/Slider/Slider.tsx","name":"TypeLiteral"}],"required":false,"type":{"name":"number"}},"min":{"defaultValue":{"value":"0"},"description":"Min range value of the component (Slider)","name":"min","declarations":[{"fileName":"core/src/components/Slider/Slider.tsx","name":"TypeLiteral"}],"required":false,"type":{"name":"number"}},"onChange":{"defaultValue":null,"description":"Optional onChange callback (for outer trigger or Controlled mode)\n- required in Controlled Mode","name":"onChange","declarations":[{"fileName":"core/src/components/Slider/Slider.tsx","name":"TypeLiteral"}],"required":false,"type":{"name":"(value: number | number[]) => void"}},"ranged":{"defaultValue":{"value":"false"},"description":"If true switch slider to RRange mode (two Thumbs)","name":"ranged","declarations":[{"fileName":"core/src/components/Slider/Slider.tsx","name":"TypeLiteral"}],"required":false,"type":{"name":"boolean"}},"step":{"defaultValue":{"value":"1"},"description":"The granularity with which the slider can step through values.\n(A \"discrete\" slider.) The min prop serves as the origin for the valid values.\nWe recommend (max - min) to be evenly divisible by the step.","name":"step","declarations":[{"fileName":"core/src/components/Slider/Slider.tsx","name":"TypeLiteral"}],"required":false,"type":{"name":"number"}},"showValue":{"defaultValue":{"value":"false"},"description":"Always show `value` instead of Tooltip","name":"showValue","declarations":[{"fileName":"core/src/components/Slider/Slider.tsx","name":"TypeLiteral"}],"required":false,"type":{"name":"boolean"}},"valueLabelPosition":{"defaultValue":{"value":"top"},"description":"Position of the `value` when `showValue` is true","name":"valueLabelPosition","declarations":[{"fileName":"core/src/components/Slider/Slider.tsx","name":"TypeLiteral"}],"required":false,"type":{"name":"enum","raw":"SliderLabelPosition","value":[{"value":"\"top\""},{"value":"\"bottom\""}]}},"valueLabelColor":{"defaultValue":{"value":"primary"},"description":"Color of the `value` when `showValue` is true","name":"valueLabelColor","declarations":[{"fileName":"core/src/components/Slider/Slider.tsx","name":"TypeLiteral"}],"required":false,"type":{"name":"enum","raw":"SliderLabelColor","value":[{"value":"\"primary\""},{"value":"\"secondary\""}]}},"size":{"defaultValue":{"value":"small"},"description":"Size small/medium/large of the component (Slider)","name":"size","declarations":[{"fileName":"core/src/components/Slider/Slider.tsx","name":"TypeLiteral"}],"required":false,"type":{"name":"enum","raw":"SliderSize","value":[{"value":"\"small\""},{"value":"\"medium\""},{"value":"\"large\""}]}},"value":{"defaultValue":null,"description":"Current/selected value of the range of the Component (Slider)\n  - should be used in Controlled Mode only\n  - in ranged mode should be an array of two numbers","name":"value","declarations":[{"fileName":"core/src/components/Slider/Slider.tsx","name":"TypeLiteral"}],"required":false,"type":{"name":"number | number[]"}},"valueFormatter":{"defaultValue":{"value":"(value: number) => `${value}%`"},"description":"Function to format the value, e.g. add %. By default, returns `${value}%`","name":"valueFormatter","declarations":[{"fileName":"core/src/components/Slider/Slider.tsx","name":"TypeLiteral"}],"required":false,"type":{"name":"(value: number) => string"}},"valueText":{"defaultValue":null,"description":"Text/presentation of current/selected value\n - should be used in Controlled Mode only","name":"valueText","declarations":[{"fileName":"core/src/components/Slider/Slider.tsx","name":"TypeLiteral"}],"required":false,"type":{"name":"string"}},"indicateSelection":{"defaultValue":{"value":"false"},"description":"Show selected from Slider range value","name":"indicateSelection","declarations":[{"fileName":"core/src/components/Slider/Slider.tsx","name":"TypeLiteral"}],"required":false,"type":{"name":"boolean"}},"prefix":{"defaultValue":null,"description":"Options for initial/start/prefix element, it can be one of:\n - Any Component (react component, node, text, number etc.)\n - Or it can be an object of options for Icons component (see Icon components props)\n - Or it can be an object for Label (Icon, Heading - and other components)\n - Or it can be Render Props Function witch are getting value and valueText","name":"prefix","declarations":[{"fileName":"core/src/components/Slider/Slider.tsx","name":"TypeLiteral"}],"required":false,"type":{"name":"string | { icon: IconType; } | ((value: number, valueText: string) => void) | ReactElement<any, string | JSXElementConstructor<any>>"}},"postfix":{"defaultValue":null,"description":"Options for postfix/end/finishing element. Same as prefix element.","name":"postfix","declarations":[{"fileName":"core/src/components/Slider/Slider.tsx","name":"TypeLiteral"}],"required":false,"type":{"name":"string | ReactElement<any, string | JSXElementConstructor<any>> | { icon: IconType; } | ((value: number, valueText: string) => void)"}},"selectionIndicatorWidth":{"defaultValue":{"value":"60px"},"description":"Width of SelectionIndicator (i.e. TextField)","name":"selectionIndicatorWidth","declarations":[{"fileName":"core/src/components/Slider/Slider.tsx","name":"TypeLiteral"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/SplitButton/SplitButton.tsx":{"hash":"e047a5f5b587d41ab761c08828d802fb","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/SplitButton/SplitButton.tsx","components":[]}},"/Users/talko/Development/vibe/packages/core/src/components/SplitButton/SplitButtonMenu/SplitButtonMenu.tsx":{"hash":"66b816bbaad3e11744bb18204ca8f1ee","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/SplitButton/SplitButtonMenu/SplitButtonMenu.tsx","components":[{"displayName":"SplitButtonMenu","description":"","props":{"size":{"defaultValue":null,"description":"Size of the menu.","name":"size","parent":{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"},"declarations":[{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"}],"required":false,"type":{"name":"enum","raw":"\"xxs\" | \"xs\" | \"small\" | \"medium\" | \"large\"","value":[{"value":"\"xxs\""},{"value":"\"xs\""},{"value":"\"small\""},{"value":"\"medium\""},{"value":"\"large\""}]}},"tabIndex":{"defaultValue":null,"description":"The tab index of the menu.","name":"tabIndex","parent":{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"},"declarations":[{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"}],"required":false,"type":{"name":"number"}},"ariaLabel":{"defaultValue":null,"description":"ARIA label for accessibility.","name":"ariaLabel","parent":{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"},"declarations":[{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"}],"required":false,"type":{"name":"string"}},"ariaDescribedBy":{"defaultValue":null,"description":"ARIA description ID.","name":"ariaDescribedBy","parent":{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"},"declarations":[{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"}],"required":false,"type":{"name":"string"}},"focusOnMount":{"defaultValue":null,"description":"If true, the menu will automatically focus on mount.","name":"focusOnMount","parent":{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"},"declarations":[{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"}],"required":false,"type":{"name":"boolean"}},"onItemFocus":{"defaultValue":null,"description":"Callback when a menu item gains focus.","name":"onItemFocus","parent":{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"},"declarations":[{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"}],"required":false,"type":{"name":"(index: number) => void"}},"isVisible":{"defaultValue":null,"description":"Controls the visibility of the menu.","name":"isVisible","parent":{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"},"declarations":[{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"}],"required":false,"type":{"name":"boolean"}},"onClose":{"defaultValue":null,"description":"Callback triggered when the menu closes.","name":"onClose","parent":{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"},"declarations":[{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"}],"required":false,"type":{"name":"(option: CloseMenuOption) => void"}},"focusItemIndex":{"defaultValue":null,"description":"Index of the focused menu item.","name":"focusItemIndex","parent":{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"},"declarations":[{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"}],"required":false,"type":{"name":"number"}},"isSubMenu":{"defaultValue":null,"description":"If true, this menu is a submenu.","name":"isSubMenu","parent":{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"},"declarations":[{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"}],"required":false,"type":{"name":"boolean"}},"useDocumentEventListeners":{"defaultValue":null,"description":"If true, event listeners will be attached to the document.","name":"useDocumentEventListeners","parent":{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"},"declarations":[{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"}],"required":false,"type":{"name":"boolean"}},"shouldScrollMenu":{"defaultValue":null,"description":"If true, enables scrolling within the menu.","name":"shouldScrollMenu","parent":{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"},"declarations":[{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"}],"required":false,"type":{"name":"boolean"}},"children":{"defaultValue":null,"description":"The menu items.","name":"children","parent":{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"},"declarations":[{"fileName":"core/src/components/Menu/Menu/Menu.tsx","name":"MenuProps"},{"fileName":"core/src/components/SplitButton/SplitButtonMenu/SplitButtonMenu.tsx","name":"TypeLiteral"}],"required":false,"type":{"name":"any"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Steps/Steps.tsx":{"hash":"06f2c8e4606a0ced2c63cf66420dd82a","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Steps/Steps.tsx","components":[{"displayName":"Steps","description":"","props":{"activeStepIndex":{"defaultValue":{"value":"0"},"description":"The index of the currently active step.","name":"activeStepIndex","parent":{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"},"declarations":[{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"}],"required":false,"type":{"name":"number"}},"onChangeActiveStep":{"defaultValue":null,"description":"Callback fired when the active step changes.","name":"onChangeActiveStep","parent":{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"},"declarations":[{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"}],"required":false,"type":{"name":"(e: React.MouseEvent, stepIndex: number) => void"}},"areNavigationButtonsHidden":{"defaultValue":{"value":"false"},"description":"If true, hides the navigation buttons.","name":"areNavigationButtonsHidden","parent":{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"},"declarations":[{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"}],"required":false,"type":{"name":"boolean"}},"steps":{"defaultValue":{"value":"[]"},"description":"The list of steps in the steps component.","name":"steps","parent":{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"},"declarations":[{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"}],"required":false,"type":{"name":"ReactElement<any, string | JSXElementConstructor<any>>[]"}},"type":{"defaultValue":{"value":"gallery"},"description":"The visual style of the steps component.","name":"type","parent":{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"},"declarations":[{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"}],"required":false,"type":{"name":"enum","raw":"StepsType","value":[{"value":"\"numbers\""},{"value":"\"gallery\""}]}},"color":{"defaultValue":null,"description":"The color theme of the steps component.","name":"color","parent":{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"},"declarations":[{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"}],"required":false,"type":{"name":"enum","raw":"StepsColor","value":[{"value":"\"primary\""},{"value":"\"on-primary-color\""},{"value":"\"on-inverted-background\""}]}},"isContentOnTop":{"defaultValue":{"value":"false"},"description":"If true, the content is displayed above the step navigation.","name":"isContentOnTop","parent":{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"},"declarations":[{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"}],"required":false,"type":{"name":"boolean"}},"areButtonsIconsHidden":{"defaultValue":{"value":"false"},"description":"If true, hides the icons in the navigation buttons.","name":"areButtonsIconsHidden","parent":{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"},"declarations":[{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"}],"required":false,"type":{"name":"boolean"}},"backButtonProps":{"defaultValue":{"value":"{}"},"description":"Props applied to the back button.","name":"backButtonProps","parent":{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"},"declarations":[{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"}],"required":false,"type":{"name":"Partial<ButtonProps>"}},"nextButtonProps":{"defaultValue":{"value":"{}"},"description":"Props applied to the next button.","name":"nextButtonProps","parent":{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"},"declarations":[{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"}],"required":false,"type":{"name":"Partial<ButtonProps>"}},"finishButtonProps":{"defaultValue":{"value":"{}"},"description":"Props applied to the finish button.","name":"finishButtonProps","parent":{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"},"declarations":[{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"}],"required":false,"type":{"name":"Partial<ButtonProps>"}},"onFinish":{"defaultValue":null,"description":"Callback fired when the finish button is clicked.","name":"onFinish","parent":{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"},"declarations":[{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"}],"required":false,"type":{"name":"(e: any) => void"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Table/Table/Table.tsx":{"hash":"6f29f730b983e9e895344eed125e4fbc","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Table/Table/Table.tsx","components":[{"displayName":"Table","description":"","props":{"columns":{"defaultValue":null,"description":"Defines the columns of the table.","name":"columns","parent":{"fileName":"core/src/components/Table/Table/Table.tsx","name":"TableProps"},"declarations":[{"fileName":"core/src/components/Table/Table/Table.tsx","name":"TableProps"}],"required":true,"type":{"name":"TableColumn[]"}},"dataState":{"defaultValue":null,"description":"State of the data being displayed (loading or error).","name":"dataState","parent":{"fileName":"core/src/components/Table/Table/Table.tsx","name":"TableProps"},"declarations":[{"fileName":"core/src/components/Table/Table/Table.tsx","name":"TableProps"}],"required":false,"type":{"name":"{ isLoading?: boolean; isError?: boolean; }"}},"errorState":{"defaultValue":null,"description":"React element displayed when there is an error state.","name":"errorState","parent":{"fileName":"core/src/components/Table/Table/Table.tsx","name":"TableProps"},"declarations":[{"fileName":"core/src/components/Table/Table/Table.tsx","name":"TableProps"}],"required":true,"type":{"name":"ReactElement<any, string | JSXElementConstructor<any>>"}},"emptyState":{"defaultValue":null,"description":"React element displayed when there is no data.","name":"emptyState","parent":{"fileName":"core/src/components/Table/Table/Table.tsx","name":"TableProps"},"declarations":[{"fileName":"core/src/components/Table/Table/Table.tsx","name":"TableProps"}],"required":true,"type":{"name":"ReactElement<any, string | JSXElementConstructor<any>>"}},"style":{"defaultValue":null,"description":"Custom styles for the table.","name":"style","parent":{"fileName":"core/src/components/Table/Table/Table.tsx","name":"TableProps"},"declarations":[{"fileName":"core/src/components/Table/Table/Table.tsx","name":"TableProps"}],"required":false,"type":{"name":"React.CSSProperties"}},"children":{"defaultValue":null,"description":"The child components inside the table, such as `<TableHeader />` and `<TableBody />`.","name":"children","parent":{"fileName":"core/src/components/Table/Table/Table.tsx","name":"TableProps"},"declarations":[{"fileName":"core/src/components/Table/Table/Table.tsx","name":"TableProps"}],"required":false,"type":{"name":"ReactElement<TableHeaderProps, string | JSXElementConstructor<any>> | ReactElement<TableBodyProps, string | JSXElementConstructor<...>> | (ReactElement<...> | ReactElement<...>)[]"}},"size":{"defaultValue":{"value":"medium"},"description":"The row size of the table.","name":"size","parent":{"fileName":"core/src/components/Table/Table/Table.tsx","name":"TableProps"},"declarations":[{"fileName":"core/src/components/Table/Table/Table.tsx","name":"TableProps"}],"required":false,"type":{"name":"enum","raw":"RowSizes","value":[{"value":"\"small\""},{"value":"\"medium\""},{"value":"\"large\""}]}},"withoutBorder":{"defaultValue":null,"description":"If true, removes the table's outer border.","name":"withoutBorder","parent":{"fileName":"core/src/components/Table/Table/Table.tsx","name":"TableProps"},"declarations":[{"fileName":"core/src/components/Table/Table/Table.tsx","name":"TableProps"}],"required":false,"type":{"name":"boolean"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Table/TableContainer/TableContainer.tsx":{"hash":"daac751ce3cb4637839b73c7848aa2a5","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Table/TableContainer/TableContainer.tsx","components":[{"displayName":"TableContainer","description":"","props":{"style":{"defaultValue":null,"description":"Custom styles for the table container.","name":"style","parent":{"fileName":"core/src/components/Table/TableContainer/TableContainer.types.ts","name":"TableContainerProps"},"declarations":[{"fileName":"core/src/components/Table/TableContainer/TableContainer.types.ts","name":"TableContainerProps"}],"required":false,"type":{"name":"React.CSSProperties"}},"children":{"defaultValue":null,"description":"The child elements inside the table container.","name":"children","parent":{"fileName":"core/src/components/Table/TableContainer/TableContainer.types.ts","name":"TableContainerProps"},"declarations":[{"fileName":"core/src/components/Table/TableContainer/TableContainer.types.ts","name":"TableContainerProps"}],"required":true,"type":{"name":"React.ReactNode"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Table/TableHeader/TableHeader.tsx":{"hash":"1cffe9399ccae2e5bd64edbd3afe2b31","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Table/TableHeader/TableHeader.tsx","components":[{"displayName":"TableHeader","description":"","props":{"children":{"defaultValue":null,"description":"The child elements inside the table header, typically `<TableHeaderCell />` components.","name":"children","parent":{"fileName":"core/src/components/Table/TableHeader/TableHeader.tsx","name":"TableHeaderProps"},"declarations":[{"fileName":"core/src/components/Table/TableHeader/TableHeader.tsx","name":"TableHeaderProps"}],"required":false,"type":{"name":"any"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Table/TableHeaderCell/TableHeaderCell.tsx":{"hash":"8ebd9913da0c32f3100f589b1e28cf48","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Table/TableHeaderCell/TableHeaderCell.tsx","components":[{"displayName":"TableHeaderCell","description":"","props":{"title":{"defaultValue":null,"description":"The title of the column, displayed inside the header cell.","name":"title","parent":{"fileName":"core/src/components/Table/TableHeaderCell/TableHeaderCell.tsx","name":"TableHeaderCellProps"},"declarations":[{"fileName":"core/src/components/Table/TableHeaderCell/TableHeaderCell.tsx","name":"TableHeaderCellProps"}],"required":true,"type":{"name":"any"}},"icon":{"defaultValue":null,"description":"Icon displayed next to the column title.","name":"icon","parent":{"fileName":"core/src/components/Table/TableHeaderCell/TableHeaderCell.tsx","name":"TableHeaderCellProps"},"declarations":[{"fileName":"core/src/components/Table/TableHeaderCell/TableHeaderCell.tsx","name":"TableHeaderCellProps"}],"required":false,"type":{"name":"any"}},"infoContent":{"defaultValue":null,"description":"Tooltip content for additional information about the column.","name":"infoContent","parent":{"fileName":"core/src/components/Table/TableHeaderCell/TableHeaderCell.tsx","name":"TableHeaderCellProps"},"declarations":[{"fileName":"core/src/components/Table/TableHeaderCell/TableHeaderCell.tsx","name":"TableHeaderCellProps"}],"required":false,"type":{"name":"string"}},"sortState":{"defaultValue":{"value":"none"},"description":"Current sorting state of the column.","name":"sortState","parent":{"fileName":"core/src/components/Table/TableHeaderCell/TableHeaderCell.tsx","name":"TableHeaderCellProps"},"declarations":[{"fileName":"core/src/components/Table/TableHeaderCell/TableHeaderCell.tsx","name":"TableHeaderCellProps"}],"required":false,"type":{"name":"enum","raw":"\"asc\" | \"desc\" | \"none\"","value":[{"value":"\"asc\""},{"value":"\"desc\""},{"value":"\"none\""}]}},"onSortClicked":{"defaultValue":null,"description":"Callback fired when the column header is clicked to change sorting.","name":"onSortClicked","parent":{"fileName":"core/src/components/Table/TableHeaderCell/TableHeaderCell.tsx","name":"TableHeaderCellProps"},"declarations":[{"fileName":"core/src/components/Table/TableHeaderCell/TableHeaderCell.tsx","name":"TableHeaderCellProps"}],"required":false,"type":{"name":"(direction: \"asc\" | \"desc\" | \"none\") => void"}},"sortButtonAriaLabel":{"defaultValue":{"value":"Sort"},"description":"ARIA label for the sort button.","name":"sortButtonAriaLabel","parent":{"fileName":"core/src/components/Table/TableHeaderCell/TableHeaderCell.tsx","name":"TableHeaderCellProps"},"declarations":[{"fileName":"core/src/components/Table/TableHeaderCell/TableHeaderCell.tsx","name":"TableHeaderCellProps"}],"required":false,"type":{"name":"string"}},"sticky":{"defaultValue":null,"description":"If true, the header cell remains visible while scrolling horizontally.","name":"sticky","parent":{"fileName":"core/src/components/Table/TableHeaderCell/TableHeaderCell.tsx","name":"TableHeaderCellProps"},"declarations":[{"fileName":"core/src/components/Table/TableHeaderCell/TableHeaderCell.tsx","name":"TableHeaderCellProps"}],"required":false,"type":{"name":"boolean"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Table/TableBody/TableBody.tsx":{"hash":"a61ba5dc041a7f4a866ce0aeb6ef2d9c","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Table/TableBody/TableBody.tsx","components":[{"displayName":"TableBody","description":"","props":{"children":{"defaultValue":null,"description":"The child components inside the table body, such as `<TableRow />` elements.","name":"children","parent":{"fileName":"core/src/components/Table/TableBody/TableBody.tsx","name":"TableBodyProps"},"declarations":[{"fileName":"core/src/components/Table/TableBody/TableBody.tsx","name":"TableBodyProps"}],"required":false,"type":{"name":"ReactElement<TableRowProps, string | JSXElementConstructor<any>> | ReactElement<TableRowProps, string | JSXElementConstructor<...>>[] | ReactElement<...>"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Table/TableVirtualizedBody/TableVirtualizedBody.tsx":{"hash":"9fd62a69f47ccbfd87a543211ee94929","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Table/TableVirtualizedBody/TableVirtualizedBody.tsx","components":[{"displayName":"TableVirtualizedBody","description":"","props":{"items":{"defaultValue":null,"description":"The list of items to render in the virtualized table.","name":"items","parent":{"fileName":"core/src/components/Table/TableVirtualizedBody/TableVirtualizedBody.tsx","name":"TableVirtualizedBodyProps"},"declarations":[{"fileName":"core/src/components/Table/TableVirtualizedBody/TableVirtualizedBody.tsx","name":"TableVirtualizedBodyProps"}],"required":true,"type":{"name":"TableVirtualizedRow[]"}},"rowRenderer":{"defaultValue":null,"description":"Function to render a row in the table.","name":"rowRenderer","parent":{"fileName":"core/src/components/Table/TableVirtualizedBody/TableVirtualizedBody.tsx","name":"TableVirtualizedBodyProps"},"declarations":[{"fileName":"core/src/components/Table/TableVirtualizedBody/TableVirtualizedBody.tsx","name":"TableVirtualizedBodyProps"}],"required":true,"type":{"name":"(item: TableVirtualizedRow) => Element"}},"onScroll":{"defaultValue":null,"description":"Callback function triggered on scroll.","name":"onScroll","parent":{"fileName":"core/src/components/Table/TableVirtualizedBody/TableVirtualizedBody.tsx","name":"TableVirtualizedBodyProps"},"declarations":[{"fileName":"core/src/components/Table/TableVirtualizedBody/TableVirtualizedBody.tsx","name":"TableVirtualizedBodyProps"}],"required":false,"type":{"name":"(horizontalScrollDirection: ScrollDirection, scrollTop: number, scrollUpdateWasRequested: boolean) => void"}},"columns":{"defaultValue":null,"description":"The columns configuration for the table.","name":"columns","parent":{"fileName":"core/src/components/Table/TableVirtualizedBody/TableVirtualizedBody.tsx","name":"TableVirtualizedBodyProps"},"declarations":[{"fileName":"core/src/components/Table/TableVirtualizedBody/TableVirtualizedBody.tsx","name":"TableVirtualizedBodyProps"}],"required":false,"type":{"name":"TableColumn[]"}},"headerRenderer":{"defaultValue":null,"description":"Function to render the table header.","name":"headerRenderer","parent":{"fileName":"core/src/components/Table/TableVirtualizedBody/TableVirtualizedBody.tsx","name":"TableVirtualizedBodyProps"},"declarations":[{"fileName":"core/src/components/Table/TableVirtualizedBody/TableVirtualizedBody.tsx","name":"TableVirtualizedBodyProps"}],"required":false,"type":{"name":"(columns: TableColumn[]) => Element"}},"overscanCount":{"defaultValue":{"value":"1"},"description":"Number of rows to render above/below the visible area.","name":"overscanCount","parent":{"fileName":"core/src/components/Table/TableVirtualizedBody/TableVirtualizedBody.tsx","name":"TableVirtualizedBodyProps"},"declarations":[{"fileName":"core/src/components/Table/TableVirtualizedBody/TableVirtualizedBody.tsx","name":"TableVirtualizedBodyProps"}],"required":false,"type":{"name":"number"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Table/TableRow/TableRow.tsx":{"hash":"acdd271cb4ccb29004708a034dc9d5a8","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Table/TableRow/TableRow.tsx","components":[{"displayName":"TableRow","description":"","props":{"highlighted":{"defaultValue":null,"description":"If true, applies a highlighted style to the row.","name":"highlighted","parent":{"fileName":"core/src/components/Table/TableRow/TableRow.tsx","name":"TableRowProps"},"declarations":[{"fileName":"core/src/components/Table/TableRow/TableRow.tsx","name":"TableRowProps"}],"required":false,"type":{"name":"boolean"}},"children":{"defaultValue":null,"description":"The child components inside the table row, typically `<TableCell />` elements.","name":"children","parent":{"fileName":"core/src/components/Table/TableRow/TableRow.tsx","name":"TableRowProps"},"declarations":[{"fileName":"core/src/components/Table/TableRow/TableRow.tsx","name":"TableRowProps"}],"required":false,"type":{"name":"any"}},"style":{"defaultValue":null,"description":"Custom styles applied to the table row.","name":"style","parent":{"fileName":"core/src/components/Table/TableRow/TableRow.tsx","name":"TableRowProps"},"declarations":[{"fileName":"core/src/components/Table/TableRow/TableRow.tsx","name":"TableRowProps"}],"required":false,"type":{"name":"React.CSSProperties"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Table/TableRowMenu/TableRowMenu.tsx":{"hash":"136aced53086094fba5a3c692c9a447d","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Table/TableRowMenu/TableRowMenu.tsx","components":[{"displayName":"TableRowMenu","description":"","props":{"rowId":{"defaultValue":null,"description":"The ID of the row that the menu is associated with.","name":"rowId","parent":{"fileName":"core/src/components/Table/TableRowMenu/TableRowMenu.types.ts","name":"TableMenuProps"},"declarations":[{"fileName":"core/src/components/Table/TableRowMenu/TableRowMenu.types.ts","name":"TableMenuProps"}],"required":true,"type":{"name":"string"}},"children":{"defaultValue":null,"description":"The child elements inside the table menu.","name":"children","parent":{"fileName":"core/src/components/Table/TableRowMenu/TableRowMenu.types.ts","name":"TableMenuProps"},"declarations":[{"fileName":"core/src/components/Table/TableRowMenu/TableRowMenu.types.ts","name":"TableMenuProps"}],"required":false,"type":{"name":"React.ReactNode"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Table/TableCell/TableCell.tsx":{"hash":"b4b5b9d0731b75f2964e12366a8bc95d","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Table/TableCell/TableCell.tsx","components":[{"displayName":"TableCell","description":"","props":{"children":{"defaultValue":null,"description":"The content inside the table cell.","name":"children","parent":{"fileName":"core/src/components/Table/TableCell/TableCell.tsx","name":"TableCellProps"},"declarations":[{"fileName":"core/src/components/Table/TableCell/TableCell.tsx","name":"TableCellProps"}],"required":false,"type":{"name":"React.ReactNode"}},"sticky":{"defaultValue":null,"description":"If true, makes the cell sticky (typically used for frozen columns).","name":"sticky","parent":{"fileName":"core/src/components/Table/TableCell/TableCell.tsx","name":"TableCellProps"},"declarations":[{"fileName":"core/src/components/Table/TableCell/TableCell.tsx","name":"TableCellProps"}],"required":false,"type":{"name":"boolean"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Tabs/Tab/Tab.tsx":{"hash":"3763b00b988eb1c49415aa405bae9275","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Tabs/Tab/Tab.tsx","components":[{"displayName":"Tab","description":"","props":{"tabInnerClassName":{"defaultValue":null,"description":"Class name applied to the inner tab content.","name":"tabInnerClassName","parent":{"fileName":"core/src/components/Tabs/Tab/Tab.tsx","name":"TabProps"},"declarations":[{"fileName":"core/src/components/Tabs/Tab/Tab.tsx","name":"TabProps"}],"required":false,"type":{"name":"string"}},"value":{"defaultValue":{"value":"0"},"description":"The index value of the tab.","name":"value","parent":{"fileName":"core/src/components/Tabs/Tab/Tab.tsx","name":"TabProps"},"declarations":[{"fileName":"core/src/components/Tabs/Tab/Tab.tsx","name":"TabProps"}],"required":false,"type":{"name":"number"}},"disabled":{"defaultValue":{"value":"false"},"description":"If true, disables the tab.","name":"disabled","parent":{"fileName":"core/src/components/Tabs/Tab/Tab.tsx","name":"TabProps"},"declarations":[{"fileName":"core/src/components/Tabs/Tab/Tab.tsx","name":"TabProps"}],"required":false,"type":{"name":"boolean"}},"active":{"defaultValue":{"value":"false"},"description":"If true, marks the tab as active.","name":"active","parent":{"fileName":"core/src/components/Tabs/Tab/Tab.tsx","name":"TabProps"},"declarations":[{"fileName":"core/src/components/Tabs/Tab/Tab.tsx","name":"TabProps"}],"required":false,"type":{"name":"boolean"}},"focus":{"defaultValue":{"value":"false"},"description":"If true, applies focus styles to the tab.","name":"focus","parent":{"fileName":"core/src/components/Tabs/Tab/Tab.tsx","name":"TabProps"},"declarations":[{"fileName":"core/src/components/Tabs/Tab/Tab.tsx","name":"TabProps"}],"required":false,"type":{"name":"boolean"}},"icon":{"defaultValue":null,"description":"The icon displayed in the tab.","name":"icon","parent":{"fileName":"core/src/components/Tabs/Tab/Tab.tsx","name":"TabProps"},"declarations":[{"fileName":"core/src/components/Tabs/Tab/Tab.tsx","name":"TabProps"}],"required":false,"type":{"name":"any"}},"iconType":{"defaultValue":null,"description":"The type of icon.","name":"iconType","parent":{"fileName":"core/src/components/Tabs/Tab/Tab.tsx","name":"TabProps"},"declarations":[{"fileName":"core/src/components/Tabs/Tab/Tab.tsx","name":"TabProps"}],"required":false,"type":{"name":"enum","raw":"IconType","value":[{"value":"\"svg\""},{"value":"\"font\""},{"value":"\"src\""}]}},"iconSide":{"defaultValue":{"value":"left"},"description":"The position of the icon relative to the text.","name":"iconSide","parent":{"fileName":"core/src/components/Tabs/Tab/Tab.tsx","name":"TabProps"},"declarations":[{"fileName":"core/src/components/Tabs/Tab/Tab.tsx","name":"TabProps"}],"required":false,"type":{"name":"string"}},"onClick":{"defaultValue":null,"description":"Callback fired when the tab is clicked.","name":"onClick","parent":{"fileName":"core/src/components/Tabs/Tab/Tab.tsx","name":"TabProps"},"declarations":[{"fileName":"core/src/components/Tabs/Tab/Tab.tsx","name":"TabProps"}],"required":false,"type":{"name":"(value: number) => void"}},"tooltipProps":{"defaultValue":{"value":"{} as TooltipProps"},"description":"Props passed to the tab's tooltip.","name":"tooltipProps","parent":{"fileName":"core/src/components/Tabs/Tab/Tab.tsx","name":"TabProps"},"declarations":[{"fileName":"core/src/components/Tabs/Tab/Tab.tsx","name":"TabProps"}],"required":false,"type":{"name":"Partial<TooltipProps>"}},"children":{"defaultValue":null,"description":"The content displayed inside the tab.","name":"children","parent":{"fileName":"core/src/components/Tabs/Tab/Tab.tsx","name":"TabProps"},"declarations":[{"fileName":"core/src/components/Tabs/Tab/Tab.tsx","name":"TabProps"}],"required":false,"type":{"name":"string | ReactElement<any, string | JSXElementConstructor<any>> | ReactElement<any, string | JSXElementConstructor<any>>[]"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Tabs/TabList/TabList.tsx":{"hash":"2a8f6319d786fbc8b5a3ce1cd0b5c4ae","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Tabs/TabList/TabList.tsx","components":[{"displayName":"TabList","description":"","props":{"onTabChange":{"defaultValue":null,"description":"Callback fired when the active tab changes.","name":"onTabChange","parent":{"fileName":"core/src/components/Tabs/TabList/TabList.tsx","name":"TabListProps"},"declarations":[{"fileName":"core/src/components/Tabs/TabList/TabList.tsx","name":"TabListProps"}],"required":false,"type":{"name":"(tabId: number) => void"}},"activeTabId":{"defaultValue":{"value":"0"},"description":"The index of the currently active tab.","name":"activeTabId","parent":{"fileName":"core/src/components/Tabs/TabList/TabList.tsx","name":"TabListProps"},"declarations":[{"fileName":"core/src/components/Tabs/TabList/TabList.tsx","name":"TabListProps"}],"required":false,"type":{"name":"number"}},"tabType":{"defaultValue":{"value":"Compact"},"description":"The type of tab style.","name":"tabType","parent":{"fileName":"core/src/components/Tabs/TabList/TabList.tsx","name":"TabListProps"},"declarations":[{"fileName":"core/src/components/Tabs/TabList/TabList.tsx","name":"TabListProps"}],"required":false,"type":{"name":"string"}},"size":{"defaultValue":null,"description":"The size of the tab list.","name":"size","parent":{"fileName":"core/src/components/Tabs/TabList/TabList.tsx","name":"TabListProps"},"declarations":[{"fileName":"core/src/components/Tabs/TabList/TabList.tsx","name":"TabListProps"}],"required":false,"type":{"name":"string"}},"children":{"defaultValue":null,"description":"The child elements representing tabs.","name":"children","parent":{"fileName":"core/src/components/Tabs/TabList/TabList.tsx","name":"TabListProps"},"declarations":[{"fileName":"core/src/components/Tabs/TabList/TabList.tsx","name":"TabListProps"}],"required":false,"type":{"name":"ReactElement<TabProps, string | JSXElementConstructor<any>>[]"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Tabs/TabPanel/TabPanel.tsx":{"hash":"17639eaf663285d617f74f0bc87f5888","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Tabs/TabPanel/TabPanel.tsx","components":[{"displayName":"TabPanel","description":"","props":{"children":{"defaultValue":null,"description":"The content inside the tab panel.","name":"children","parent":{"fileName":"core/src/components/Tabs/TabPanel/TabPanel.tsx","name":"TabPanelProps"},"declarations":[{"fileName":"core/src/components/Tabs/TabPanel/TabPanel.tsx","name":"TabPanelProps"}],"required":false,"type":{"name":"string | ReactElement<any, string | JSXElementConstructor<any>> | ReactElement<any, string | JSXElementConstructor<any>>[]"}},"index":{"defaultValue":null,"description":"The index of the tab panel.","name":"index","parent":{"fileName":"core/src/components/Tabs/TabPanel/TabPanel.tsx","name":"TabPanelProps"},"declarations":[{"fileName":"core/src/components/Tabs/TabPanel/TabPanel.tsx","name":"TabPanelProps"}],"required":false,"type":{"name":"number"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Tabs/TabsContext/TabsContext.tsx":{"hash":"e0f1b7703da1ddf885c3bcab3afe6175","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Tabs/TabsContext/TabsContext.tsx","components":[{"displayName":"TabsContext","description":"","props":{"activeTabId":{"defaultValue":{"value":"0"},"description":"The index of the currently active tab.","name":"activeTabId","parent":{"fileName":"core/src/components/Tabs/TabsContext/TabsContext.tsx","name":"TabsContextProps"},"declarations":[{"fileName":"core/src/components/Tabs/TabsContext/TabsContext.tsx","name":"TabsContextProps"}],"required":false,"type":{"name":"number"}},"children":{"defaultValue":null,"description":"The child elements representing the tab list and tab panels.","name":"children","parent":{"fileName":"core/src/components/Tabs/TabsContext/TabsContext.tsx","name":"TabsContextProps"},"declarations":[{"fileName":"core/src/components/Tabs/TabsContext/TabsContext.tsx","name":"TabsContextProps"}],"required":false,"type":{"name":"ReactElement<any, string | JSXElementConstructor<any>> | ReactElement<any, string | JSXElementConstructor<any>>[]"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Tabs/TabPanels/TabPanels.tsx":{"hash":"93dfa2c7eb50685257bef19f98aeb1c0","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Tabs/TabPanels/TabPanels.tsx","components":[{"displayName":"TabPanels","description":"","props":{"activeTabId":{"defaultValue":{"value":"0"},"description":"The index of the currently active tab panel.","name":"activeTabId","parent":{"fileName":"core/src/components/Tabs/TabPanels/TabPanels.tsx","name":"TabPanelsProps"},"declarations":[{"fileName":"core/src/components/Tabs/TabPanels/TabPanels.tsx","name":"TabPanelsProps"}],"required":false,"type":{"name":"number"}},"animationDirection":{"defaultValue":{"value":"rtl"},"description":"The animation direction when switching between tab panels.","name":"animationDirection","parent":{"fileName":"core/src/components/Tabs/TabPanels/TabPanels.tsx","name":"TabPanelsProps"},"declarations":[{"fileName":"core/src/components/Tabs/TabPanels/TabPanels.tsx","name":"TabPanelsProps"}],"required":false,"type":{"name":"enum","raw":"TabPanelsAnimationDirection","value":[{"value":"\"rtl\""},{"value":"\"ltr\""}]}},"children":{"defaultValue":null,"description":"The child elements representing tab panels.","name":"children","parent":{"fileName":"core/src/components/Tabs/TabPanels/TabPanels.tsx","name":"TabPanelsProps"},"declarations":[{"fileName":"core/src/components/Tabs/TabPanels/TabPanels.tsx","name":"TabPanelsProps"}],"required":false,"type":{"name":"ReactElement<TabPanelProps, string | JSXElementConstructor<any>> | ReactElement<TabPanelProps, string | JSXElementConstructor<...>>[]"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Text/Text.tsx":{"hash":"5fb899d5c74218da115d33270968081e","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Text/Text.tsx","components":[{"displayName":"Text","description":"","props":{"type":{"defaultValue":{"value":"text2"},"description":"The text style variant.","name":"type","parent":{"fileName":"core/src/components/Text/Text.tsx","name":"TextProps"},"declarations":[{"fileName":"core/src/components/Text/Text.tsx","name":"TextProps"}],"required":false,"type":{"name":"enum","raw":"TextType","value":[{"value":"\"text1\""},{"value":"\"text2\""},{"value":"\"text3\""}]}},"weight":{"defaultValue":{"value":"normal"},"description":"The font weight of the text.","name":"weight","parent":{"fileName":"core/src/components/Text/Text.tsx","name":"TextProps"},"declarations":[{"fileName":"core/src/components/Text/Text.tsx","name":"TextProps"}],"required":false,"type":{"name":"enum","raw":"TextWeight","value":[{"value":"\"bold\""},{"value":"\"medium\""},{"value":"\"normal\""}]}},"children":{"defaultValue":null,"description":"The content inside the text component.","name":"children","parent":{"fileName":"core/src/components/Text/Text.tsx","name":"TextProps"},"declarations":[{"fileName":"core/src/components/Text/Text.tsx","name":"TextProps"}],"required":true,"type":{"name":"ReactNode"}},"element":{"defaultValue":{"value":"div"},"description":"The HTML element tag used for the text component.","name":"element","parent":{"fileName":"core/src/components/Typography/Typography.tsx","name":"TypographyProps"},"declarations":[{"fileName":"core/src/components/Typography/Typography.tsx","name":"TypographyProps"}],"required":false,"type":{"name":"string"}},"color":{"defaultValue":null,"description":"The text color.","name":"color","parent":{"fileName":"core/src/components/Typography/Typography.tsx","name":"TypographyProps"},"declarations":[{"fileName":"core/src/components/Typography/Typography.tsx","name":"TypographyProps"}],"required":false,"type":{"name":"enum","raw":"TypographyColor","value":[{"value":"\"inherit\""},{"value":"\"primary\""},{"value":"\"secondary\""},{"value":"\"onPrimary\""},{"value":"\"onInverted\""},{"value":"\"fixedLight\""},{"value":"\"fixedDark\""},{"value":"\"negative\""}]}},"align":{"defaultValue":null,"description":"The text alignment.","name":"align","parent":{"fileName":"core/src/components/Typography/Typography.tsx","name":"TypographyProps"},"declarations":[{"fileName":"core/src/components/Typography/Typography.tsx","name":"TypographyProps"}],"required":false,"type":{"name":"enum","raw":"TypographyAlign","value":[{"value":"\"inherit\""},{"value":"\"start\""},{"value":"\"center\""},{"value":"\"end\""}]}},"ellipsis":{"defaultValue":null,"description":"If true, truncates overflowing text with an ellipsis.","name":"ellipsis","parent":{"fileName":"core/src/components/Typography/Typography.tsx","name":"TypographyProps"},"declarations":[{"fileName":"core/src/components/Typography/Typography.tsx","name":"TypographyProps"}],"required":false,"type":{"name":"boolean"}},"maxLines":{"defaultValue":null,"description":"The maximum number of lines before truncating with an ellipsis.","name":"maxLines","parent":{"fileName":"core/src/components/Typography/Typography.tsx","name":"TypographyProps"},"declarations":[{"fileName":"core/src/components/Typography/Typography.tsx","name":"TypographyProps"}],"required":false,"type":{"name":"number"}},"tooltipProps":{"defaultValue":null,"description":"Props passed to the tooltip displayed when hovering over the text.","name":"tooltipProps","parent":{"fileName":"core/src/components/Typography/Typography.tsx","name":"TypographyProps"},"declarations":[{"fileName":"core/src/components/Typography/Typography.tsx","name":"TypographyProps"}],"required":false,"type":{"name":"Partial<TooltipProps>"}},"withoutTooltip":{"defaultValue":null,"description":"If true, disables the tooltip that appears when text is truncated.","name":"withoutTooltip","parent":{"fileName":"core/src/components/Typography/Typography.tsx","name":"TypographyProps"},"declarations":[{"fileName":"core/src/components/Typography/Typography.tsx","name":"TypographyProps"}],"required":false,"type":{"name":"boolean"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/TextArea/TextArea.tsx":{"hash":"281554dbef0d92058d05bb6fa1f5cf5d","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/TextArea/TextArea.tsx","components":[{"displayName":"TextArea","description":"","props":{"value":{"defaultValue":null,"description":"The current value of the textarea.","name":"value","parent":{"fileName":"core/src/components/TextArea/TextArea.types.ts","name":"TextAreaProps"},"declarations":[{"fileName":"core/src/components/TextArea/TextArea.types.ts","name":"TextAreaProps"}],"required":false,"type":{"name":"string"}},"size":{"defaultValue":{"value":"small"},"description":"Determines the size of the textarea text as well as the default row count.","name":"size","parent":{"fileName":"core/src/components/TextArea/TextArea.types.ts","name":"TextAreaProps"},"declarations":[{"fileName":"core/src/components/TextArea/TextArea.types.ts","name":"TextAreaProps"}],"required":false,"type":{"name":"enum","raw":"TextAreaSize","value":[{"value":"\"small\""},{"value":"\"large\""}]}},"success":{"defaultValue":null,"description":"If true, applies success styling to the textarea.","name":"success","parent":{"fileName":"core/src/components/TextArea/TextArea.types.ts","name":"TextAreaProps"},"declarations":[{"fileName":"core/src/components/TextArea/TextArea.types.ts","name":"TextAreaProps"}],"required":false,"type":{"name":"boolean"}},"error":{"defaultValue":null,"description":"If true, applies error styling to the textarea.","name":"error","parent":{"fileName":"core/src/components/TextArea/TextArea.types.ts","name":"TextAreaProps"},"declarations":[{"fileName":"core/src/components/TextArea/TextArea.types.ts","name":"TextAreaProps"}],"required":false,"type":{"name":"boolean"}},"label":{"defaultValue":null,"description":"The label associated with the textarea.","name":"label","parent":{"fileName":"core/src/components/TextArea/TextArea.types.ts","name":"TextAreaProps"},"declarations":[{"fileName":"core/src/components/TextArea/TextArea.types.ts","name":"TextAreaProps"}],"required":false,"type":{"name":"string"}},"onChange":{"defaultValue":null,"description":"Callback fired when the textarea value changes.","name":"onChange","parent":{"fileName":"core/src/components/TextArea/TextArea.types.ts","name":"TextAreaProps"},"declarations":[{"fileName":"core/src/components/TextArea/TextArea.types.ts","name":"TextAreaProps"}],"required":false,"type":{"name":"(event: ChangeEvent<HTMLTextAreaElement>) => void"}},"helpText":{"defaultValue":null,"description":"Help text displayed below the textarea.","name":"helpText","parent":{"fileName":"core/src/components/TextArea/TextArea.types.ts","name":"TextAreaProps"},"declarations":[{"fileName":"core/src/components/TextArea/TextArea.types.ts","name":"TextAreaProps"}],"required":false,"type":{"name":"string"}},"aria-label":{"defaultValue":null,"description":"The accessibility label for the textarea.","name":"aria-label","parent":{"fileName":"core/src/components/TextArea/TextArea.types.ts","name":"TextAreaProps"},"declarations":[{"fileName":"core/src/components/TextArea/TextArea.types.ts","name":"TextAreaProps"}],"required":false,"type":{"name":"string"}},"resize":{"defaultValue":{"value":"true"},"description":"If true, the textarea can be resized vertically.","name":"resize","parent":{"fileName":"core/src/components/TextArea/TextArea.types.ts","name":"TextAreaProps"},"declarations":[{"fileName":"core/src/components/TextArea/TextArea.types.ts","name":"TextAreaProps"}],"required":false,"type":{"name":"boolean"}},"placeholder":{"defaultValue":null,"description":"The placeholder text displayed when the textarea is empty.","name":"placeholder","parent":{"fileName":"core/src/components/TextArea/TextArea.types.ts","name":"TextAreaProps"},"declarations":[{"fileName":"core/src/components/TextArea/TextArea.types.ts","name":"TextAreaProps"}],"required":false,"type":{"name":"string"}},"maxLength":{"defaultValue":null,"description":"The maximum number of characters allowed.","name":"maxLength","parent":{"fileName":"core/src/components/TextArea/TextArea.types.ts","name":"TextAreaProps"},"declarations":[{"fileName":"core/src/components/TextArea/TextArea.types.ts","name":"TextAreaProps"}],"required":false,"type":{"name":"number"}},"allowExceedingMaxLength":{"defaultValue":null,"description":"If true, allows the user to exceed the character limit set by `maxLength`.","name":"allowExceedingMaxLength","parent":{"fileName":"core/src/components/TextArea/TextArea.types.ts","name":"TextAreaProps"},"declarations":[{"fileName":"core/src/components/TextArea/TextArea.types.ts","name":"TextAreaProps"}],"required":false,"type":{"name":"boolean"}},"showCharCount":{"defaultValue":{"value":"false"},"description":"If true, displays the character count below the textarea.","name":"showCharCount","parent":{"fileName":"core/src/components/TextArea/TextArea.types.ts","name":"TextAreaProps"},"declarations":[{"fileName":"core/src/components/TextArea/TextArea.types.ts","name":"TextAreaProps"}],"required":false,"type":{"name":"boolean"}},"disabled":{"defaultValue":null,"description":"If true, disables the textarea.","name":"disabled","parent":{"fileName":"core/src/components/TextArea/TextArea.types.ts","name":"TextAreaProps"},"declarations":[{"fileName":"core/src/components/TextArea/TextArea.types.ts","name":"TextAreaProps"}],"required":false,"type":{"name":"boolean"}},"readOnly":{"defaultValue":null,"description":"If true, makes the textarea read-only.","name":"readOnly","parent":{"fileName":"core/src/components/TextArea/TextArea.types.ts","name":"TextAreaProps"},"declarations":[{"fileName":"core/src/components/TextArea/TextArea.types.ts","name":"TextAreaProps"}],"required":false,"type":{"name":"boolean"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/TextField/TextField.tsx":{"hash":"173285918837bdf28f0e181df01a5333","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/TextField/TextField.tsx","components":[{"displayName":"TextField","description":"","props":{"placeholder":{"defaultValue":{"value":""},"description":"The placeholder text displayed when the input is empty.","name":"placeholder","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"string"}},"autoComplete":{"defaultValue":{"value":"off"},"description":"Configures the browser's autocomplete behavior.","name":"autoComplete","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"string"}},"value":{"defaultValue":null,"description":"The current value of the text field.","name":"value","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"string"}},"onChange":{"defaultValue":null,"description":"Callback fired when the text field value changes.","name":"onChange","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"(value: string, event: any) => void"}},"onBlur":{"defaultValue":null,"description":"Callback fired when the text field loses focus.","name":"onBlur","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"(event: React.FocusEvent) => void"}},"onFocus":{"defaultValue":null,"description":"Callback fired when the text field gains focus.","name":"onFocus","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"(event: React.FocusEvent) => void"}},"onKeyDown":{"defaultValue":null,"description":"Callback fired when a key is pressed inside the text field.","name":"onKeyDown","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"(event: React.KeyboardEvent) => void"}},"onWheel":{"defaultValue":null,"description":"Callback fired when the mouse wheel is used inside the text field.","name":"onWheel","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"(event: React.WheelEvent) => void"}},"debounceRate":{"defaultValue":{"value":"0"},"description":"The debounce rate for input value changes.","name":"debounceRate","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"number"}},"autoFocus":{"defaultValue":{"value":"false"},"description":"If true, the input is automatically focused on mount.","name":"autoFocus","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"boolean"}},"disabled":{"defaultValue":{"value":"false"},"description":"If true, disables the text field.","name":"disabled","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"boolean"}},"readonly":{"defaultValue":{"value":"false"},"description":"If true, makes the text field read-only.","name":"readonly","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"boolean"}},"setRef":{"defaultValue":null,"description":"A function to set a reference to the input element.","name":"setRef","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"(node: HTMLElement) => void"}},"iconName":{"defaultValue":null,"description":"The primary icon displayed inside the text field.","name":"iconName","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"any"}},"secondaryIconName":{"defaultValue":null,"description":"The secondary icon displayed inside the text field.","name":"secondaryIconName","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"any"}},"title":{"defaultValue":{"value":""},"description":"The label displayed above the text field.","name":"title","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"string"}},"size":{"defaultValue":{"value":"small"},"description":"The size of the text field.","name":"size","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"enum","raw":"TextFieldSize","value":[{"value":"\"small\""},{"value":"\"medium\""},{"value":"\"large\""}]}},"validation":{"defaultValue":{"value":"null"},"description":"Validation state for the text field.","name":"validation","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"{ status?: \"error\" | \"success\"; text?: any; }"}},"wrapperClassName":{"defaultValue":{"value":""},"description":"Class name applied to the text field wrapper.","name":"wrapperClassName","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"string"}},"onIconClick":{"defaultValue":null,"description":"Callback fired when the icon inside the text field is clicked.","name":"onIconClick","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"(icon: any) => void"}},"clearOnIconClick":{"defaultValue":{"value":"false"},"description":"If true, clears the input when the icon is clicked.","name":"clearOnIconClick","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"boolean"}},"labelIconName":{"defaultValue":null,"description":"The icon displayed inside the label.","name":"labelIconName","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"any"}},"showCharCount":{"defaultValue":{"value":"false"},"description":"If true, displays the character count.","name":"showCharCount","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"boolean"}},"inputAriaLabel":{"defaultValue":null,"description":"The ARIA label for the input field.","name":"inputAriaLabel","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"string"}},"searchResultsContainerId":{"defaultValue":{"value":""},"description":"The ID of the container where search results are displayed.","name":"searchResultsContainerId","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"string"}},"activeDescendant":{"defaultValue":{"value":""},"description":"The ID of the currently active search result.","name":"activeDescendant","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"string"}},"iconsNames":{"defaultValue":{"value":"{ primary: \"\", secondary: \"\" }"},"description":"Icon labels for accessibility.","name":"iconsNames","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"{ primary: string; secondary: string; }"}},"type":{"defaultValue":{"value":"text"},"description":"The type of the text field.","name":"type","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"enum","raw":"TextFieldType","value":[{"value":"\"number\""},{"value":"\"text\""},{"value":"\"password\""},{"value":"\"search\""},{"value":"\"date\""},{"value":"\"datetime-local\""},{"value":"\"tel\""},{"value":"\"url\""},{"value":"\"email\""}]}},"maxLength":{"defaultValue":{"value":"null"},"description":"The maximum number of characters allowed.","name":"maxLength","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"number"}},"allowExceedingMaxLength":{"defaultValue":{"value":"false"},"description":"If true, allows the user to exceed the character limit set by `maxLength`.","name":"allowExceedingMaxLength","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"boolean"}},"trim":{"defaultValue":{"value":"false"},"description":"If true, trims whitespace from the input value.","name":"trim","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"boolean"}},"role":{"defaultValue":{"value":""},"description":"The ARIA role of the text field.","name":"role","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"string"}},"required":{"defaultValue":{"value":"false"},"description":"If true, marks the input as required.","name":"required","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"boolean"}},"requiredErrorText":{"defaultValue":{"value":""},"description":"The error message displayed when a required field is left empty.","name":"requiredErrorText","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"string"}},"loading":{"defaultValue":{"value":"false"},"description":"If true, displays a loading indicator inside the text field.","name":"loading","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"boolean"}},"secondaryDataTestId":{"defaultValue":null,"description":"Test ID for the secondary icon.","name":"secondaryDataTestId","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"string"}},"tabIndex":{"defaultValue":null,"description":"The tab order of the input field.","name":"tabIndex","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"number"}},"name":{"defaultValue":null,"description":"The name attribute for the input field.","name":"name","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"string"}},"underline":{"defaultValue":{"value":"false"},"description":"If true, renders only an underline style for the text field.","name":"underline","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"boolean"}},"controlled":{"defaultValue":{"value":"false"},"description":"If true, the component is controlled by an external state.","name":"controlled","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"boolean"}},"iconTooltipContent":{"defaultValue":null,"description":"Tooltip content for the primary icon.","name":"iconTooltipContent","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"string"}},"secondaryTooltipContent":{"defaultValue":null,"description":"Tooltip content for the secondary icon.","name":"secondaryTooltipContent","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"string"}},"dir":{"defaultValue":null,"description":"The text direction of the input.","name":"dir","parent":{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"},"declarations":[{"fileName":"core/src/components/TextField/TextField.tsx","name":"TextFieldProps"}],"required":false,"type":{"name":"enum","raw":"\"ltr\" | \"rtl\" | \"auto\"","value":[{"value":"\"ltr\""},{"value":"\"rtl\""},{"value":"\"auto\""}]}},"className":{"defaultValue":{"value":""},"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":{"value":"input"},"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/TextWithHighlight/TextWithHighlight.tsx":{"hash":"7fd187bcad7ea3cdaa046dcdb4211ebe","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/TextWithHighlight/TextWithHighlight.tsx","components":[]}},"/Users/talko/Development/vibe/packages/core/src/components/ThemeProvider/ThemeProvider.tsx":{"hash":"fe9b9ea9b19b378cb28127a9a60de7a6","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/ThemeProvider/ThemeProvider.tsx","components":[]}},"/Users/talko/Development/vibe/packages/core/src/components/Tipseen/Tipseen.tsx":{"hash":"6626c5f95f495a55b1ac0e003cebd800","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Tipseen/Tipseen.tsx","components":[{"displayName":"Tipseen","description":"","props":{"titleClassName":{"defaultValue":null,"description":"Class name applied to the Tipseen title.","name":"titleClassName","parent":{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"},"declarations":[{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"}],"required":false,"type":{"name":"string"}},"position":{"defaultValue":{"value":"bottom"},"description":"The position of the Tipseen relative to the target element.","name":"position","parent":{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"},"declarations":[{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"}],"required":false,"type":{"name":"enum","raw":"TooltipPositions","value":[{"value":"\"top\""},{"value":"\"right\""},{"value":"\"bottom\""},{"value":"\"left\""}]}},"animationType":{"defaultValue":{"value":"expand"},"description":"The animation type used for showing/hiding the Tipseen.","name":"animationType","parent":{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"},"declarations":[{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"}],"required":false,"type":{"name":"enum","raw":"DialogAnimationType","value":[{"value":"\"opacity-and-slide\""},{"value":"\"expand\""}]}},"hideDelay":{"defaultValue":{"value":"0"},"description":"The delay in milliseconds before hiding the Tipseen.","name":"hideDelay","parent":{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"},"declarations":[{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"}],"required":false,"type":{"name":"number"}},"showDelay":{"defaultValue":{"value":"100"},"description":"The delay in milliseconds before showing the Tipseen.","name":"showDelay","parent":{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"},"declarations":[{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"}],"required":false,"type":{"name":"number"}},"title":{"defaultValue":null,"description":"The title text of the Tipseen.","name":"title","parent":{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"},"declarations":[{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"}],"required":false,"type":{"name":"string"}},"hideCloseButton":{"defaultValue":null,"description":"If true, hides the close button.","name":"hideCloseButton","parent":{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"},"declarations":[{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"}],"required":false,"type":{"name":"boolean"}},"children":{"defaultValue":{"value":"null"},"description":"The child element that triggers the Tipseen.","name":"children","parent":{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"},"declarations":[{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"}],"required":false,"type":{"name":"ReactElement<any, string | JSXElementConstructor<any>>"}},"containerSelector":{"defaultValue":null,"description":"The CSS selector of the container where the Tipseen should be rendered.","name":"containerSelector","parent":{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"},"declarations":[{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"}],"required":false,"type":{"name":"string"}},"hideTrigger":{"defaultValue":{"value":"[]"},"description":"Events that trigger hiding the Tipseen.","name":"hideTrigger","parent":{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"},"declarations":[{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"}],"required":false,"type":{"name":"DialogTriggerEvent | DialogTriggerEvent[]"}},"showTrigger":{"defaultValue":{"value":"[]"},"description":"Events that trigger showing the Tipseen.","name":"showTrigger","parent":{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"},"declarations":[{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"}],"required":false,"type":{"name":"DialogTriggerEvent | DialogTriggerEvent[]"}},"width":{"defaultValue":null,"description":"The width of the Tipseen.","name":"width","parent":{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"},"declarations":[{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"}],"required":false,"type":{"name":"number"}},"moveBy":{"defaultValue":null,"description":"Offset values for positioning adjustments.","name":"moveBy","parent":{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"},"declarations":[{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"}],"required":false,"type":{"name":"MoveBy"}},"hideWhenReferenceHidden":{"defaultValue":{"value":"false"},"description":"If true, hides the Tipseen when the reference element is hidden.","name":"hideWhenReferenceHidden","parent":{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"},"declarations":[{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"}],"required":false,"type":{"name":"boolean"}},"referenceWrapperClassName":{"defaultValue":null,"description":"Class name applied to the reference wrapper element.","name":"referenceWrapperClassName","parent":{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"},"declarations":[{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"}],"required":false,"type":{"name":"string"}},"tip":{"defaultValue":{"value":"true"},"description":"If false, hides the arrow of the Tipseen.","name":"tip","parent":{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"},"declarations":[{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"}],"required":false,"type":{"name":"boolean"}},"tooltipArrowClassName":{"defaultValue":null,"description":"Class name applied to the Tipseen arrow.","name":"tooltipArrowClassName","parent":{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"},"declarations":[{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"}],"required":false,"type":{"name":"string"}},"modifiers":{"defaultValue":{"value":"[]"},"description":"Custom Popper.js modifiers.\nhttps://popper.js.org/docs/v2/modifiers/","name":"modifiers","parent":{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"},"declarations":[{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"}],"required":false,"type":{"name":"Partial<Modifier<unknown, object>>[]"}},"closeAriaLabel":{"defaultValue":null,"description":"The aria-label for the close button.","name":"closeAriaLabel","parent":{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"},"declarations":[{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"}],"required":false,"type":{"name":"string"}},"onClose":{"defaultValue":null,"description":"Callback fired when the Tipseen is closed.","name":"onClose","parent":{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"},"declarations":[{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"}],"required":false,"type":{"name":"(event?: React.MouseEvent<HTMLButtonElement>) => void"}},"content":{"defaultValue":null,"description":"The content displayed inside the Tipseen.","name":"content","parent":{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"},"declarations":[{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"}],"required":true,"type":{"name":"ElementContent"}},"closeButtonTheme":{"defaultValue":{"value":"light"},"description":"The theme of the Tipseen close button.","name":"closeButtonTheme","parent":{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"},"declarations":[{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"}],"required":false,"type":{"name":"enum","raw":"TipseenCloseButtonTheme","value":[{"value":"\"light\""},{"value":"\"dark\""},{"value":"\"fixed-light\""},{"value":"\"fixed-dark\""}]}},"floating":{"defaultValue":{"value":"false"},"description":"If true, renders the Tipseen as a floating element without a reference.","name":"floating","parent":{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"},"declarations":[{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"}],"required":false,"type":{"name":"boolean"}},"color":{"defaultValue":null,"description":"The color theme of the Tipseen.","name":"color","parent":{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"},"declarations":[{"fileName":"core/src/components/Tipseen/Tipseen.tsx","name":"TipseenProps"}],"required":false,"type":{"name":"enum","raw":"TipseenColor","value":[{"value":"\"primary\""},{"value":"\"inverted\""}]}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Tipseen/TipseenContent.tsx":{"hash":"2b49becfc941c617a73b7a72289b52ef","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Tipseen/TipseenContent.tsx","components":[{"displayName":"TipseenContent","description":"","props":{"title":{"defaultValue":null,"description":"The title text displayed in the Tipseen content.","name":"title","parent":{"fileName":"core/src/components/Tipseen/TipseenContent.tsx","name":"TipseenContentProps"},"declarations":[{"fileName":"core/src/components/Tipseen/TipseenContent.tsx","name":"TipseenContentProps"}],"required":false,"type":{"name":"string"}},"titleClassName":{"defaultValue":null,"description":"Class name applied to the Tipseen title.","name":"titleClassName","parent":{"fileName":"core/src/components/Tipseen/TipseenContent.tsx","name":"TipseenContentProps"},"declarations":[{"fileName":"core/src/components/Tipseen/TipseenContent.tsx","name":"TipseenContentProps"}],"required":false,"type":{"name":"string"}},"hideDismiss":{"defaultValue":{"value":"true"},"description":"If true, hides the dismiss button.","name":"hideDismiss","parent":{"fileName":"core/src/components/Tipseen/TipseenContent.tsx","name":"TipseenContentProps"},"declarations":[{"fileName":"core/src/components/Tipseen/TipseenContent.tsx","name":"TipseenContentProps"}],"required":false,"type":{"name":"boolean"}},"children":{"defaultValue":{"value":"null"},"description":"The content inside the Tipseen.","name":"children","parent":{"fileName":"core/src/components/Tipseen/TipseenContent.tsx","name":"TipseenContentProps"},"declarations":[{"fileName":"core/src/components/Tipseen/TipseenContent.tsx","name":"TipseenContentProps"}],"required":false,"type":{"name":"ElementContent"}},"hideSubmit":{"defaultValue":null,"description":"If true, hides the submit button.","name":"hideSubmit","parent":{"fileName":"core/src/components/Tipseen/TipseenContent.tsx","name":"TipseenContentProps"},"declarations":[{"fileName":"core/src/components/Tipseen/TipseenContent.tsx","name":"TipseenContentProps"}],"required":false,"type":{"name":"boolean"}},"submitButtonText":{"defaultValue":{"value":"Submit"},"description":"The text displayed on the submit button.","name":"submitButtonText","parent":{"fileName":"core/src/components/Tipseen/TipseenContent.tsx","name":"TipseenContentProps"},"declarations":[{"fileName":"core/src/components/Tipseen/TipseenContent.tsx","name":"TipseenContentProps"}],"required":false,"type":{"name":"string"}},"submitButtonIcon":{"defaultValue":null,"description":"Icon to display in the submit button","name":"submitButtonIcon","parent":{"fileName":"core/src/components/Tipseen/TipseenContent.tsx","name":"TipseenContentProps"},"declarations":[{"fileName":"core/src/components/Tipseen/TipseenContent.tsx","name":"TipseenContentProps"}],"required":false,"type":{"name":"any"}},"onSubmit":{"defaultValue":null,"description":"Callback fired when the submit button is clicked.","name":"onSubmit","parent":{"fileName":"core/src/components/Tipseen/TipseenContent.tsx","name":"TipseenContentProps"},"declarations":[{"fileName":"core/src/components/Tipseen/TipseenContent.tsx","name":"TipseenContentProps"}],"required":false,"type":{"name":"(event: React.MouseEvent) => void"}},"dismissButtonText":{"defaultValue":{"value":"Dismiss"},"description":"The text displayed on the dismiss button.","name":"dismissButtonText","parent":{"fileName":"core/src/components/Tipseen/TipseenContent.tsx","name":"TipseenContentProps"},"declarations":[{"fileName":"core/src/components/Tipseen/TipseenContent.tsx","name":"TipseenContentProps"}],"required":false,"type":{"name":"string"}},"onDismiss":{"defaultValue":null,"description":"Callback fired when the dismiss button is clicked.","name":"onDismiss","parent":{"fileName":"core/src/components/Tipseen/TipseenContent.tsx","name":"TipseenContentProps"},"declarations":[{"fileName":"core/src/components/Tipseen/TipseenContent.tsx","name":"TipseenContentProps"}],"required":false,"type":{"name":"(event: React.MouseEvent) => void"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Tipseen/TipseenWizard.tsx":{"hash":"7bb513c8272d66ed26d5572bbabe405d","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Tipseen/TipseenWizard.tsx","components":[{"displayName":"TipseenWizard","description":"","props":{"title":{"defaultValue":null,"description":"The title text displayed in the Tipseen Wizard.","name":"title","parent":{"fileName":"core/src/components/Tipseen/TipseenWizard.tsx","name":"TipseenWizardProps"},"declarations":[{"fileName":"core/src/components/Tipseen/TipseenWizard.tsx","name":"TipseenWizardProps"}],"required":false,"type":{"name":"string"}},"titleClassName":{"defaultValue":null,"description":"Class name applied to the Tipseen title.","name":"titleClassName","parent":{"fileName":"core/src/components/Tipseen/TipseenWizard.tsx","name":"TipseenWizardProps"},"declarations":[{"fileName":"core/src/components/Tipseen/TipseenWizard.tsx","name":"TipseenWizardProps"}],"required":false,"type":{"name":"string"}},"onFinish":{"defaultValue":null,"description":"Callback fired when the wizard is completed.","name":"onFinish","parent":{"fileName":"core/src/components/Tipseen/TipseenWizard.tsx","name":"TipseenWizardProps"},"declarations":[{"fileName":"core/src/components/Tipseen/TipseenWizard.tsx","name":"TipseenWizardProps"}],"required":false,"type":{"name":"(e: any) => void"}},"activeStepIndex":{"defaultValue":null,"description":"The index of the currently active step.","name":"activeStepIndex","parent":{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"},"declarations":[{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"}],"required":false,"type":{"name":"number"}},"onChangeActiveStep":{"defaultValue":null,"description":"Callback fired when the active step changes.","name":"onChangeActiveStep","parent":{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"},"declarations":[{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"}],"required":false,"type":{"name":"(e: React.MouseEvent, stepIndex: number) => void"}},"areNavigationButtonsHidden":{"defaultValue":null,"description":"If true, hides the navigation buttons.","name":"areNavigationButtonsHidden","parent":{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"},"declarations":[{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"}],"required":false,"type":{"name":"boolean"}},"steps":{"defaultValue":null,"description":"The list of steps in the steps component.","name":"steps","parent":{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"},"declarations":[{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"}],"required":false,"type":{"name":"ReactElement<any, string | JSXElementConstructor<any>>[]"}},"type":{"defaultValue":null,"description":"The visual style of the steps component.","name":"type","parent":{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"},"declarations":[{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"}],"required":false,"type":{"name":"enum","raw":"StepsType","value":[{"value":"\"numbers\""},{"value":"\"gallery\""}]}},"color":{"defaultValue":null,"description":"The color theme of the steps component.","name":"color","parent":{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"},"declarations":[{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"}],"required":false,"type":{"name":"enum","raw":"StepsColor","value":[{"value":"\"primary\""},{"value":"\"on-primary-color\""},{"value":"\"on-inverted-background\""}]}},"isContentOnTop":{"defaultValue":null,"description":"If true, the content is displayed above the step navigation.","name":"isContentOnTop","parent":{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"},"declarations":[{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"}],"required":false,"type":{"name":"boolean"}},"areButtonsIconsHidden":{"defaultValue":null,"description":"If true, hides the icons in the navigation buttons.","name":"areButtonsIconsHidden","parent":{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"},"declarations":[{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"}],"required":false,"type":{"name":"boolean"}},"backButtonProps":{"defaultValue":null,"description":"Props applied to the back button.","name":"backButtonProps","parent":{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"},"declarations":[{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"}],"required":false,"type":{"name":"Partial<ButtonProps>"}},"nextButtonProps":{"defaultValue":null,"description":"Props applied to the next button.","name":"nextButtonProps","parent":{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"},"declarations":[{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"}],"required":false,"type":{"name":"Partial<ButtonProps>"}},"finishButtonProps":{"defaultValue":null,"description":"Props applied to the finish button.","name":"finishButtonProps","parent":{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"},"declarations":[{"fileName":"core/src/components/Steps/Steps.tsx","name":"StepsProps"}],"required":false,"type":{"name":"Partial<ButtonProps>"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Tipseen/TipseenImage.tsx":{"hash":"54470e16c8491cf18ff6101b507e0775","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Tipseen/TipseenImage.tsx","components":[]}},"/Users/talko/Development/vibe/packages/core/src/components/Tipseen/TipseenMedia/TipseenMedia.tsx":{"hash":"cc07703d443a291f469994f50b6436a5","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Tipseen/TipseenMedia/TipseenMedia.tsx","components":[{"displayName":"TipseenMedia","description":"","props":{"children":{"defaultValue":null,"description":"The media content displayed inside the Tipseen.","name":"children","parent":{"fileName":"core/src/components/Tipseen/TipseenMedia/TipseenMedia.tsx","name":"TipseenMediaProps"},"declarations":[{"fileName":"core/src/components/Tipseen/TipseenMedia/TipseenMedia.tsx","name":"TipseenMediaProps"}],"required":true,"type":{"name":"ReactNode"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Toast/Toast.tsx":{"hash":"e4313bad91591b7dc6892ce9a9a89988","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Toast/Toast.tsx","components":[]}},"/Users/talko/Development/vibe/packages/core/src/components/Toast/ToastButton/ToastButton.tsx":{"hash":"e2367680ab74f0e2fe28e35bf8cd1e24","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Toast/ToastButton/ToastButton.tsx","components":[{"displayName":"ToastButton","description":"","props":{"className":{"defaultValue":null,"description":"Custom class names to pass to the component","name":"className","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"string"}},"activeButtonClassName":{"defaultValue":null,"description":"","name":"activeButtonClassName","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"string"}},"kind":{"defaultValue":null,"description":"The button's kind","name":"kind","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"enum","raw":"ButtonType","value":[{"value":"\"primary\""},{"value":"\"secondary\""},{"value":"\"tertiary\""}]}},"onClick":{"defaultValue":null,"description":"Callback function to run when the button is clicked","name":"onClick","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"(event: React.MouseEvent<HTMLButtonElement>) => void"}},"onMouseDown":{"defaultValue":null,"description":"","name":"onMouseDown","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"(event: React.MouseEvent<HTMLButtonElement>) => void"}},"blurOnMouseUp":{"defaultValue":null,"description":"Blur on button click","name":"blurOnMouseUp","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"boolean"}},"name":{"defaultValue":null,"description":"Name of the button - for form submit usages","name":"name","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"string"}},"size":{"defaultValue":null,"description":"The button's size","name":"size","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"enum","raw":"ButtonSize","value":[{"value":"\"xxs\""},{"value":"\"xs\""},{"value":"\"small\""},{"value":"\"medium\""},{"value":"\"large\""}]}},"color":{"defaultValue":null,"description":"The button's color","name":"color","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"enum","raw":"ButtonColor","value":[{"value":"\"primary\""},{"value":"\"positive\""},{"value":"\"negative\""},{"value":"\"inverted\""},{"value":"\"on-primary-color\""},{"value":"\"on-inverted-background\""},{"value":"\"brand\""},{"value":"\"fixed-light\""},{"value":"\"fixed-dark\""}]}},"type":{"defaultValue":null,"description":"The button's type","name":"type","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"enum","raw":"ButtonInputType","value":[{"value":"\"button\""},{"value":"\"submit\""},{"value":"\"reset\""}]}},"disabled":{"defaultValue":null,"description":"Whether the button should be disabled or not","name":"disabled","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"boolean"}},"rightIcon":{"defaultValue":null,"description":"Icon to place on the right","name":"rightIcon","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"any"}},"leftIcon":{"defaultValue":null,"description":"Icon to place on the left","name":"leftIcon","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"any"}},"success":{"defaultValue":null,"description":"the success props are used when you have async action and wants to display a success message","name":"success","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"boolean"}},"successIcon":{"defaultValue":null,"description":"Success icon name","name":"successIcon","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"any"}},"successText":{"defaultValue":null,"description":"Success text","name":"successText","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"string"}},"loading":{"defaultValue":null,"description":"loading boolean which switches the text to a loader","name":"loading","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"boolean"}},"loaderClassName":{"defaultValue":null,"description":"className which is applied to loader container *","name":"loaderClassName","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"string"}},"style":{"defaultValue":null,"description":"","name":"style","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"React.CSSProperties"}},"active":{"defaultValue":null,"description":"displays the active state","name":"active","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"boolean"}},"id":{"defaultValue":null,"description":"id to pass to the button","name":"id","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"string"}},"marginRight":{"defaultValue":null,"description":"adds 8px margin to the right","name":"marginRight","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"boolean"}},"marginLeft":{"defaultValue":null,"description":"adds 8px margin to the left","name":"marginLeft","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"boolean"}},"ariaLabeledBy":{"defaultValue":null,"description":"element id to describe the button accordingly","name":"ariaLabeledBy","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"string"}},"ariaLabel":{"defaultValue":null,"description":"aria label to provide important when providing only Icon","name":"ariaLabel","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"string"}},"ariaHasPopup":{"defaultValue":null,"description":"aria for a button popup","name":"ariaHasPopup","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"React.HTMLProps<HTMLButtonElement>"}},"ariaExpanded":{"defaultValue":null,"description":"aria to be set if the popup is open","name":"ariaExpanded","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"boolean"}},"ariaControls":{"defaultValue":null,"description":"aria controls - receives id for the controlled region","name":"ariaControls","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"string"}},"aria-describedby":{"defaultValue":null,"description":"","name":"aria-describedby","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"string"}},"aria-hidden":{"defaultValue":null,"description":"aria to be used for screen reader to know if the button is hidden","name":"aria-hidden","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"Booleanish"}},"aria-pressed":{"defaultValue":null,"description":"Indicates the current \"pressed\" state of toggle buttons","name":"aria-pressed","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"boolean | \"true\" | \"false\" | \"mixed\""}},"onFocus":{"defaultValue":null,"description":"On Button Focus callback","name":"onFocus","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"(event: React.FocusEvent<HTMLButtonElement>) => void"}},"onBlur":{"defaultValue":null,"description":"On Button Blur callback","name":"onBlur","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"(event: React.FocusEvent<HTMLButtonElement>) => void"}},"rightFlat":{"defaultValue":null,"description":"","name":"rightFlat","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"boolean"}},"leftFlat":{"defaultValue":null,"description":"","name":"leftFlat","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"boolean"}},"preventClickAnimation":{"defaultValue":null,"description":"","name":"preventClickAnimation","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"boolean"}},"noSidePadding":{"defaultValue":null,"description":"","name":"noSidePadding","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"boolean"}},"defaultTextColorOnPrimaryColor":{"defaultValue":null,"description":"default color for text color in ON_PRIMARY_COLOR kind (should be any type of css color (rbg, var, hex...)","name":"defaultTextColorOnPrimaryColor","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"string"}},"insetFocus":{"defaultValue":null,"description":"Change the focus indicator from around the button to within it","name":"insetFocus","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"boolean"}},"tabIndex":{"defaultValue":null,"description":"Specifies the tab order of an element","name":"tabIndex","parent":{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"},"declarations":[{"fileName":"core/src/components/Button/Button.tsx","name":"ButtonProps"}],"required":false,"type":{"name":"number"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Toast/ToastLink/ToastLink.tsx":{"hash":"aade89f775e39e1b1a6d8864a60d1e43","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Toast/ToastLink/ToastLink.tsx","components":[{"displayName":"ToastLink","description":"","props":{"textClassName":{"defaultValue":null,"description":"Class name applied to the link text.","name":"textClassName","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"string"}},"href":{"defaultValue":null,"description":"The URL the link points to.","name":"href","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"string"}},"text":{"defaultValue":null,"description":"The text content of the link.","name":"text","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"string"}},"rel":{"defaultValue":null,"description":"Specifies the relationship between the current document and the linked resource.","name":"rel","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"string"}},"onClick":{"defaultValue":null,"description":"Callback fired when the link is clicked.","name":"onClick","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"(event: React.MouseEvent) => void"}},"target":{"defaultValue":null,"description":"Specifies where to open the linked document.","name":"target","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"enum","raw":"LinkTarget","value":[{"value":"\"_blank\""},{"value":"\"_self\""},{"value":"\"_parent\""},{"value":"\"_top\""}]}},"ariaLabelDescription":{"defaultValue":null,"description":"The ARIA label description for accessibility.","name":"ariaLabelDescription","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"string"}},"ariaDescribedby":{"defaultValue":null,"description":"The ID of the element that describes this link.","name":"ariaDescribedby","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"string"}},"ariaLabeledBy":{"defaultValue":null,"description":"The ID of the element labeling this link.","name":"ariaLabeledBy","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"string"}},"icon":{"defaultValue":null,"description":"Icon displayed next to the link text.","name":"icon","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"any"}},"iconPosition":{"defaultValue":null,"description":"The position of the icon relative to the text.","name":"iconPosition","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"enum","raw":"LinkIconPosition","value":[{"value":"\"start\""},{"value":"\"end\""}]}},"disableNavigation":{"defaultValue":null,"description":"If true, disables navigation when the link is clicked.","name":"disableNavigation","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"boolean"}},"inheritFontSize":{"defaultValue":null,"description":"If true, the link inherits the surrounding text's font size.","name":"inheritFontSize","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"boolean"}},"inlineText":{"defaultValue":null,"description":"If true, the link is styled to fit within inline text content.","name":"inlineText","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"boolean"}},"color":{"defaultValue":null,"description":"The link's color style","name":"color","parent":{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"},"declarations":[{"fileName":"core/src/components/Link/Link.tsx","name":"LinkProps"}],"required":false,"type":{"name":"enum","raw":"LinkColor","value":[{"value":"\"primary\""},{"value":"\"onPrimary\""},{"value":"\"onInverted\""}]}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Toggle/Toggle.tsx":{"hash":"baa4dcc8170ddd1bc7f54e118314c561","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Toggle/Toggle.tsx","components":[{"displayName":"Toggle","description":"","props":{"toggleSelectedClassName":{"defaultValue":null,"description":"Class name applied when the toggle is selected.","name":"toggleSelectedClassName","parent":{"fileName":"core/src/components/Toggle/Toggle.tsx","name":"ToggleProps"},"declarations":[{"fileName":"core/src/components/Toggle/Toggle.tsx","name":"ToggleProps"}],"required":false,"type":{"name":"string"}},"isDefaultSelected":{"defaultValue":{"value":"true"},"description":"If true, the toggle is selected by default.","name":"isDefaultSelected","parent":{"fileName":"core/src/components/Toggle/Toggle.tsx","name":"ToggleProps"},"declarations":[{"fileName":"core/src/components/Toggle/Toggle.tsx","name":"ToggleProps"}],"required":false,"type":{"name":"boolean"}},"isSelected":{"defaultValue":null,"description":"Controls the selected state of the toggle.","name":"isSelected","parent":{"fileName":"core/src/components/Toggle/Toggle.tsx","name":"ToggleProps"},"declarations":[{"fileName":"core/src/components/Toggle/Toggle.tsx","name":"ToggleProps"}],"required":false,"type":{"name":"boolean"}},"onChange":{"defaultValue":null,"description":"Callback fired when the toggle state changes.","name":"onChange","parent":{"fileName":"core/src/components/Toggle/Toggle.tsx","name":"ToggleProps"},"declarations":[{"fileName":"core/src/components/Toggle/Toggle.tsx","name":"ToggleProps"}],"required":false,"type":{"name":"(value: boolean, event: ChangeEvent<HTMLInputElement>) => void"}},"value":{"defaultValue":null,"description":"The value associated with the toggle.","name":"value","parent":{"fileName":"core/src/components/Toggle/Toggle.tsx","name":"ToggleProps"},"declarations":[{"fileName":"core/src/components/Toggle/Toggle.tsx","name":"ToggleProps"}],"required":false,"type":{"name":"string"}},"name":{"defaultValue":null,"description":"The name attribute of the toggle input.","name":"name","parent":{"fileName":"core/src/components/Toggle/Toggle.tsx","name":"ToggleProps"},"declarations":[{"fileName":"core/src/components/Toggle/Toggle.tsx","name":"ToggleProps"}],"required":false,"type":{"name":"string"}},"disabled":{"defaultValue":null,"description":"If true, disables the toggle.","name":"disabled","parent":{"fileName":"core/src/components/Toggle/Toggle.tsx","name":"ToggleProps"},"declarations":[{"fileName":"core/src/components/Toggle/Toggle.tsx","name":"ToggleProps"}],"required":false,"type":{"name":"boolean"}},"areLabelsHidden":{"defaultValue":{"value":"false"},"description":"If true, hides the on/off labels.","name":"areLabelsHidden","parent":{"fileName":"core/src/components/Toggle/Toggle.tsx","name":"ToggleProps"},"declarations":[{"fileName":"core/src/components/Toggle/Toggle.tsx","name":"ToggleProps"}],"required":false,"type":{"name":"boolean"}},"onOverrideText":{"defaultValue":{"value":"On"},"description":"The text displayed when the toggle is in the \"on\" position.","name":"onOverrideText","parent":{"fileName":"core/src/components/Toggle/Toggle.tsx","name":"ToggleProps"},"declarations":[{"fileName":"core/src/components/Toggle/Toggle.tsx","name":"ToggleProps"}],"required":false,"type":{"name":"string"}},"offOverrideText":{"defaultValue":{"value":"Off"},"description":"The text displayed when the toggle is in the \"off\" position.","name":"offOverrideText","parent":{"fileName":"core/src/components/Toggle/Toggle.tsx","name":"ToggleProps"},"declarations":[{"fileName":"core/src/components/Toggle/Toggle.tsx","name":"ToggleProps"}],"required":false,"type":{"name":"string"}},"ariaLabel":{"defaultValue":null,"description":"The ARIA label for accessibility.","name":"ariaLabel","parent":{"fileName":"core/src/components/Toggle/Toggle.tsx","name":"ToggleProps"},"declarations":[{"fileName":"core/src/components/Toggle/Toggle.tsx","name":"ToggleProps"}],"required":false,"type":{"name":"string"}},"ariaControls":{"defaultValue":null,"description":"The ID of the element controlled by the toggle.","name":"ariaControls","parent":{"fileName":"core/src/components/Toggle/Toggle.tsx","name":"ToggleProps"},"declarations":[{"fileName":"core/src/components/Toggle/Toggle.tsx","name":"ToggleProps"}],"required":false,"type":{"name":"string"}},"size":{"defaultValue":{"value":"medium"},"description":"The size of the toggle.","name":"size","parent":{"fileName":"core/src/components/Toggle/Toggle.tsx","name":"ToggleProps"},"declarations":[{"fileName":"core/src/components/Toggle/Toggle.tsx","name":"ToggleProps"}],"required":false,"type":{"name":"enum","raw":"ToggleSize","value":[{"value":"\"small\""},{"value":"\"medium\""}]}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Tooltip/Tooltip.tsx":{"hash":"223a55f0760b4e811a43ae83d8456435","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Tooltip/Tooltip.tsx","components":[{"displayName":"Tooltip","description":"","props":{"content":{"defaultValue":null,"description":"The content displayed inside the tooltip.","name":"content","parent":{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},"declarations":[{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"}],"required":true,"type":{"name":"ElementContent"}},"style":{"defaultValue":null,"description":"Inline styles applied to the tooltip container.","name":"style","parent":{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},"declarations":[{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"}],"required":false,"type":{"name":"CSSProperties"}},"arrowClassName":{"defaultValue":null,"description":"Class name applied to the tooltip arrow.","name":"arrowClassName","parent":{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},"declarations":[{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"}],"required":false,"type":{"name":"string"}},"moveBy":{"defaultValue":{"value":"{ main: 4, secondary: 0 }"},"description":"Offset values for positioning adjustments.","name":"moveBy","parent":{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},"declarations":[{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"}],"required":false,"type":{"name":"MoveBy"}},"theme":{"defaultValue":{"value":"dark"},"description":"The theme of the tooltip.","name":"theme","parent":{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},"declarations":[{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"}],"required":false,"type":{"name":"enum","raw":"TooltipTheme","value":[{"value":"\"dark\""},{"value":"\"primary\""}]}},"getContainer":{"defaultValue":null,"description":"Function to get the container where the tooltip should be rendered.","name":"getContainer","parent":{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},"declarations":[{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"}],"required":false,"type":{"name":"() => HTMLElement"}},"hideDelay":{"defaultValue":{"value":"100"},"description":"Delay in milliseconds before hiding the tooltip.","name":"hideDelay","parent":{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},"declarations":[{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"}],"required":false,"type":{"name":"number"}},"showDelay":{"defaultValue":{"value":"300"},"description":"Delay in milliseconds before showing the tooltip.","name":"showDelay","parent":{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},"declarations":[{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"}],"required":false,"type":{"name":"number"}},"disableDialogSlide":{"defaultValue":{"value":"true"},"description":"If true, disables the slide animation of the tooltip.","name":"disableDialogSlide","parent":{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},"declarations":[{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"}],"required":false,"type":{"name":"boolean"}},"animationType":{"defaultValue":{"value":"AnimationTypeEnum.EXPAND"},"description":"The animation type used for showing/hiding the tooltip.","name":"animationType","parent":{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},"declarations":[{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"}],"required":false,"type":{"name":"enum","raw":"DialogAnimationType","value":[{"value":"\"opacity-and-slide\""},{"value":"\"expand\""}]}},"withoutDialog":{"defaultValue":{"value":"false"},"description":"If true, renders the tooltip without a dialog.","name":"withoutDialog","parent":{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},"declarations":[{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"}],"required":false,"type":{"name":"boolean"}},"containerSelector":{"defaultValue":null,"description":"The CSS selector of the container where the tooltip should be rendered.","name":"containerSelector","parent":{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},"declarations":[{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"}],"required":false,"type":{"name":"string"}},"immediateShowDelay":{"defaultValue":null,"description":"Delay in milliseconds before showing the tooltip immediately.","name":"immediateShowDelay","parent":{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},"declarations":[{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"}],"required":false,"type":{"name":"number"}},"tip":{"defaultValue":{"value":"true"},"description":"If false, hides the arrow of the tooltip.","name":"tip","parent":{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},"declarations":[{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"}],"required":false,"type":{"name":"boolean"}},"shouldShowOnMount":{"defaultValue":null,"description":"If true, the tooltip is shown when the component mounts.","name":"shouldShowOnMount","parent":{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},"declarations":[{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"}],"required":false,"type":{"name":"boolean"}},"hideWhenReferenceHidden":{"defaultValue":{"value":"false"},"description":"If true, hides the tooltip when the reference element is hidden.","name":"hideWhenReferenceHidden","parent":{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},"declarations":[{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"}],"required":false,"type":{"name":"boolean"}},"onTooltipHide":{"defaultValue":null,"description":"Callback fired when the tooltip is hidden.","name":"onTooltipHide","parent":{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},"declarations":[{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"}],"required":false,"type":{"name":"() => void"}},"onTooltipShow":{"defaultValue":null,"description":"Callback fired when the tooltip is shown.","name":"onTooltipShow","parent":{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},"declarations":[{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"}],"required":false,"type":{"name":"() => void"}},"modifiers":{"defaultValue":{"value":"new Array<Modifier<unknown>>()"},"description":"Custom Popper.js modifiers.\nhttps://popper.js.org/docs/v2/modifiers/","name":"modifiers","parent":{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},"declarations":[{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"}],"required":false,"type":{"name":"Partial<Modifier<unknown, object>>[]"}},"position":{"defaultValue":{"value":"top"},"description":"The placement of the tooltip relative to the reference element.","name":"position","parent":{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},"declarations":[{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"}],"required":false,"type":{"name":"enum","raw":"TooltipPositions","value":[{"value":"\"top\""},{"value":"\"right\""},{"value":"\"bottom\""},{"value":"\"left\""}]}},"showTrigger":{"defaultValue":{"value":"Tooltip.hideShowTriggers.MOUSE_ENTER"},"description":"Events that trigger showing the tooltip.","name":"showTrigger","parent":{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},"declarations":[{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"}],"required":false,"type":{"name":"DialogTriggerEvent | DialogTriggerEvent[]"}},"hideTrigger":{"defaultValue":{"value":"Tooltip.hideShowTriggers.MOUSE_LEAVE"},"description":"Events that trigger hiding the tooltip.","name":"hideTrigger","parent":{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},"declarations":[{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"}],"required":false,"type":{"name":"DialogTriggerEvent | DialogTriggerEvent[]"}},"showOnDialogEnter":{"defaultValue":{"value":"true"},"description":"If true, prevents closing the tooltip when the mouse enters it.","name":"showOnDialogEnter","parent":{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},"declarations":[{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"}],"required":false,"type":{"name":"boolean"}},"referenceWrapperClassName":{"defaultValue":{"value":""},"description":"Class name applied to the reference wrapper element.","name":"referenceWrapperClassName","parent":{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},"declarations":[{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"}],"required":false,"type":{"name":"string"}},"addKeyboardHideShowTriggersByDefault":{"defaultValue":{"value":"true"},"description":"If true, keyboard focus/blur events behave like mouse enter/leave.","name":"addKeyboardHideShowTriggersByDefault","parent":{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},"declarations":[{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"}],"required":false,"type":{"name":"boolean"}},"open":{"defaultValue":{"value":"false"},"description":"If true, controls the open state of the tooltip.","name":"open","parent":{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},"declarations":[{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"}],"required":false,"type":{"name":"boolean"}},"zIndex":{"defaultValue":null,"description":"The z-index applied to the tooltip.","name":"zIndex","parent":{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},"declarations":[{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"}],"required":false,"type":{"name":"number"}},"title":{"defaultValue":null,"description":"The title of the tooltip.","name":"title","parent":{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},"declarations":[{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"}],"required":false,"type":{"name":"string"}},"image":{"defaultValue":null,"description":"The image displayed inside the tooltip.","name":"image","parent":{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},"declarations":[{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"}],"required":false,"type":{"name":"string"}},"icon":{"defaultValue":null,"description":"The icon displayed next to the title.","name":"icon","parent":{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},"declarations":[{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"}],"required":false,"type":{"name":"any"}},"maxWidth":{"defaultValue":null,"description":"The maximum width of the tooltip.","name":"maxWidth","parent":{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},"declarations":[{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"}],"required":false,"type":{"name":"number"}},"dir":{"defaultValue":null,"description":"The text direction of the tooltip: \"ltr\", \"rtl\", or \"auto\".","name":"dir","parent":{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},"declarations":[{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"},{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipBaseProps"}],"required":false,"type":{"name":"enum","raw":"\"ltr\" | \"rtl\" | \"auto\"","value":[{"value":"\"ltr\""},{"value":"\"rtl\""},{"value":"\"auto\""}]}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"forceRenderWithoutChildren":{"defaultValue":null,"description":"If true, the tooltip will be rendered even if there are no children.","name":"forceRenderWithoutChildren","parent":{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipWithChildrenProps"},"declarations":[{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipWithChildrenProps"},{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipWithoutChildrenProps"}],"required":false,"type":{"name":"boolean"}},"children":{"defaultValue":null,"description":"The children elements that the tooltip is attached to.","name":"children","parent":{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipWithChildrenProps"},"declarations":[{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipWithChildrenProps"},{"fileName":"core/src/components/Tooltip/Tooltip.tsx","name":"TooltipWithoutChildrenProps"}],"required":false,"type":{"name":"ReactElement<any, string | JSXElementConstructor<any>> | ReactElement<any, string | JSXElementConstructor<any>>[]"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/TransitionView/TransitionView.tsx":{"hash":"3d2934a9b23a04685244d74b3ca47ecc","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/TransitionView/TransitionView.tsx","components":[{"displayName":"TransitionView","description":"","props":{"activeStep":{"defaultValue":null,"description":"The index of the currently active step.","name":"activeStep","parent":{"fileName":"core/src/components/TransitionView/TransitionView.types.ts","name":"TransitionViewProps"},"declarations":[{"fileName":"core/src/components/TransitionView/TransitionView.types.ts","name":"TransitionViewProps"}],"required":true,"type":{"name":"number"}},"direction":{"defaultValue":null,"description":"The direction of the transition between steps.","name":"direction","parent":{"fileName":"core/src/components/TransitionView/TransitionView.types.ts","name":"TransitionViewProps"},"declarations":[{"fileName":"core/src/components/TransitionView/TransitionView.types.ts","name":"TransitionViewProps"}],"required":true,"type":{"name":"enum","raw":"SlideDirection","value":[{"value":"\"forward\""},{"value":"\"backward\""}]}},"children":{"defaultValue":null,"description":"The child elements representing the steps in the transition.","name":"children","parent":{"fileName":"core/src/components/TransitionView/TransitionView.types.ts","name":"TransitionViewProps"},"declarations":[{"fileName":"core/src/components/TransitionView/TransitionView.types.ts","name":"TransitionViewProps"}],"required":true,"type":{"name":"React.ReactNode[]"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/VirtualizedGrid/VirtualizedGrid.tsx":{"hash":"1208709e01113c9adc34b8164b90b4e8","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/VirtualizedGrid/VirtualizedGrid.tsx","components":[{"displayName":"VirtualizedGrid","description":"","props":{"items":{"defaultValue":{"value":"[]"},"description":"The list of items to be rendered in the grid.","name":"items","parent":{"fileName":"core/src/components/VirtualizedGrid/VirtualizedGrid.tsx","name":"VirtualizedGridProps"},"declarations":[{"fileName":"core/src/components/VirtualizedGrid/VirtualizedGrid.tsx","name":"VirtualizedGridProps"}],"required":false,"type":{"name":"VirtualizedGridItemType[]"}},"itemRenderer":{"defaultValue":{"value":"(item: ItemType, _index: number, _style: CSSProperties) => item"},"description":"Function that renders each item in the grid.","name":"itemRenderer","parent":{"fileName":"core/src/components/VirtualizedGrid/VirtualizedGrid.tsx","name":"VirtualizedGridProps"},"declarations":[{"fileName":"core/src/components/VirtualizedGrid/VirtualizedGrid.tsx","name":"VirtualizedGridProps"}],"required":false,"type":{"name":"(item: VirtualizedGridItemType, index: number, style: CSSProperties) => VirtualizedGridItemType | GridChildComponentProps<VirtualizedGridItemType>"}},"getRowHeight":{"defaultValue":{"value":"() => 50"},"description":"Function that returns the row height.","name":"getRowHeight","parent":{"fileName":"core/src/components/VirtualizedGrid/VirtualizedGrid.tsx","name":"VirtualizedGridProps"},"declarations":[{"fileName":"core/src/components/VirtualizedGrid/VirtualizedGrid.tsx","name":"VirtualizedGridProps"}],"required":false,"type":{"name":"() => number"}},"getColumnWidth":{"defaultValue":{"value":"() => 100"},"description":"Function that returns the column width.","name":"getColumnWidth","parent":{"fileName":"core/src/components/VirtualizedGrid/VirtualizedGrid.tsx","name":"VirtualizedGridProps"},"declarations":[{"fileName":"core/src/components/VirtualizedGrid/VirtualizedGrid.tsx","name":"VirtualizedGridProps"}],"required":false,"type":{"name":"() => number"}},"getItemId":{"defaultValue":{"value":"(item: ItemType, _index: number) => item.id"},"description":"Function that returns the unique ID of an item.","name":"getItemId","parent":{"fileName":"core/src/components/VirtualizedGrid/VirtualizedGrid.tsx","name":"VirtualizedGridProps"},"declarations":[{"fileName":"core/src/components/VirtualizedGrid/VirtualizedGrid.tsx","name":"VirtualizedGridProps"}],"required":false,"type":{"name":"(item: VirtualizedGridItemType, index: number) => string"}},"scrollToId":{"defaultValue":{"value":"null"},"description":"The index of the item to scroll to.","name":"scrollToId","parent":{"fileName":"core/src/components/VirtualizedGrid/VirtualizedGrid.tsx","name":"VirtualizedGridProps"},"declarations":[{"fileName":"core/src/components/VirtualizedGrid/VirtualizedGrid.tsx","name":"VirtualizedGridProps"}],"required":false,"type":{"name":"number"}},"onScroll":{"defaultValue":null,"description":"Callback fired when the grid is scrolled.","name":"onScroll","parent":{"fileName":"core/src/components/VirtualizedGrid/VirtualizedGrid.tsx","name":"VirtualizedGridProps"},"declarations":[{"fileName":"core/src/components/VirtualizedGrid/VirtualizedGrid.tsx","name":"VirtualizedGridProps"}],"required":false,"type":{"name":"(horizontalScrollDirection: ScrollDirection, scrollTop: number, scrollUpdateWasRequested: boolean) => void"}},"onScrollToFinished":{"defaultValue":null,"description":"Callback fired when scrolling has finished.","name":"onScrollToFinished","parent":{"fileName":"core/src/components/VirtualizedGrid/VirtualizedGrid.tsx","name":"VirtualizedGridProps"},"declarations":[{"fileName":"core/src/components/VirtualizedGrid/VirtualizedGrid.tsx","name":"VirtualizedGridProps"}],"required":false,"type":{"name":"() => void"}},"onItemsRendered":{"defaultValue":{"value":"null"},"description":"Callback fired when items are rendered in the grid.","name":"onItemsRendered","parent":{"fileName":"core/src/components/VirtualizedGrid/VirtualizedGrid.tsx","name":"VirtualizedGridProps"},"declarations":[{"fileName":"core/src/components/VirtualizedGrid/VirtualizedGrid.tsx","name":"VirtualizedGridProps"}],"required":false,"type":{"name":"({ firstItemId, secondItemId, lastItemId, centerItemId, firstItemOffsetEnd, currentOffsetTop }: { firstItemId: string; secondItemId: string; lastItemId: string; centerItemId: string; firstItemOffsetEnd: number; currentOffsetTop: number; }) => void"}},"onItemsRenderedThrottleMs":{"defaultValue":{"value":"200"},"description":"The delay (in ms) for throttling the `onItemsRendered` callback.","name":"onItemsRenderedThrottleMs","parent":{"fileName":"core/src/components/VirtualizedGrid/VirtualizedGrid.tsx","name":"VirtualizedGridProps"},"declarations":[{"fileName":"core/src/components/VirtualizedGrid/VirtualizedGrid.tsx","name":"VirtualizedGridProps"}],"required":false,"type":{"name":"number"}},"onSizeUpdate":{"defaultValue":null,"description":"Callback fired when the grid size is updated.","name":"onSizeUpdate","parent":{"fileName":"core/src/components/VirtualizedGrid/VirtualizedGrid.tsx","name":"VirtualizedGridProps"},"declarations":[{"fileName":"core/src/components/VirtualizedGrid/VirtualizedGrid.tsx","name":"VirtualizedGridProps"}],"required":false,"type":{"name":"(width: number, height: number) => void"}},"onVerticalScrollbarVisiblityChange":{"defaultValue":{"value":"null"},"description":"Callback fired when the vertical scrollbar visibility changes.","name":"onVerticalScrollbarVisiblityChange","parent":{"fileName":"core/src/components/VirtualizedGrid/VirtualizedGrid.tsx","name":"VirtualizedGridProps"},"declarations":[{"fileName":"core/src/components/VirtualizedGrid/VirtualizedGrid.tsx","name":"VirtualizedGridProps"}],"required":false,"type":{"name":"(value: boolean) => void"}},"scrollableClassName":{"defaultValue":null,"description":"Class name applied to the scrollable container.","name":"scrollableClassName","parent":{"fileName":"core/src/components/VirtualizedGrid/VirtualizedGrid.tsx","name":"VirtualizedGridProps"},"declarations":[{"fileName":"core/src/components/VirtualizedGrid/VirtualizedGrid.tsx","name":"VirtualizedGridProps"}],"required":false,"type":{"name":"string"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/VirtualizedList/VirtualizedList.tsx":{"hash":"491688d6b382128566528582cdec05d0","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/VirtualizedList/VirtualizedList.tsx","components":[{"displayName":"VirtualizedList","description":"","props":{"scrollableClassName":{"defaultValue":null,"description":"Class name applied to the scrollable container.","name":"scrollableClassName","parent":{"fileName":"core/src/components/VirtualizedList/VirtualizedList.tsx","name":"VirtualizedListProps"},"declarations":[{"fileName":"core/src/components/VirtualizedList/VirtualizedList.tsx","name":"VirtualizedListProps"}],"required":false,"type":{"name":"string"}},"layout":{"defaultValue":{"value":"vertical"},"description":"The orientation of the list.","name":"layout","parent":{"fileName":"core/src/components/VirtualizedList/VirtualizedList.tsx","name":"VirtualizedListProps"},"declarations":[{"fileName":"core/src/components/VirtualizedList/VirtualizedList.tsx","name":"VirtualizedListProps"}],"required":false,"type":{"name":"enum","raw":"Layout","value":[{"value":"\"vertical\""},{"value":"\"horizontal\""}]}},"items":{"defaultValue":{"value":"[]"},"description":"The list of items to be rendered.","name":"items","parent":{"fileName":"core/src/components/VirtualizedList/VirtualizedList.tsx","name":"VirtualizedListProps"},"declarations":[{"fileName":"core/src/components/VirtualizedList/VirtualizedList.tsx","name":"VirtualizedListProps"}],"required":false,"type":{"name":"VirtualizedListItem[]"}},"itemRenderer":{"defaultValue":{"value":"(item: VirtualizedListItem, _index: number, _style: CSSProperties) => item as ReactElement"},"description":"Function to render each item in the list.","name":"itemRenderer","parent":{"fileName":"core/src/components/VirtualizedList/VirtualizedList.tsx","name":"VirtualizedListProps"},"declarations":[{"fileName":"core/src/components/VirtualizedList/VirtualizedList.tsx","name":"VirtualizedListProps"}],"required":false,"type":{"name":"(item: VirtualizedListItem, index: number, style: CSSProperties) => Element | ReactElement<any, string | JSXElementConstructor<any>>"}},"getItemHeight":{"defaultValue":{"value":"(item: VirtualizedListItem, _index: number) => item.height"},"description":"@deprecated - use `getItemSize`.","name":"getItemHeight","parent":{"fileName":"core/src/components/VirtualizedList/VirtualizedList.tsx","name":"VirtualizedListProps"},"declarations":[{"fileName":"core/src/components/VirtualizedList/VirtualizedList.tsx","name":"VirtualizedListProps"}],"required":false,"type":{"name":"(item: VirtualizedListItem, index: number) => number"}},"getItemSize":{"defaultValue":{"value":"null"},"description":"Function to get the size (height/width) of each item, based on layout.","name":"getItemSize","parent":{"fileName":"core/src/components/VirtualizedList/VirtualizedList.tsx","name":"VirtualizedListProps"},"declarations":[{"fileName":"core/src/components/VirtualizedList/VirtualizedList.tsx","name":"VirtualizedListProps"}],"required":false,"type":{"name":"(item: VirtualizedListItem, index: number) => number"}},"getItemId":{"defaultValue":{"value":"(item: VirtualizedListItem, _index: number) => item.id"},"description":"Function to get the unique ID of an item.","name":"getItemId","parent":{"fileName":"core/src/components/VirtualizedList/VirtualizedList.tsx","name":"VirtualizedListProps"},"declarations":[{"fileName":"core/src/components/VirtualizedList/VirtualizedList.tsx","name":"VirtualizedListProps"}],"required":false,"type":{"name":"(item: VirtualizedListItem, index: number) => string"}},"onScrollToFinished":{"defaultValue":null,"description":"Callback fired when the scroll animation is finished.","name":"onScrollToFinished","parent":{"fileName":"core/src/components/VirtualizedList/VirtualizedList.tsx","name":"VirtualizedListProps"},"declarations":[{"fileName":"core/src/components/VirtualizedList/VirtualizedList.tsx","name":"VirtualizedListProps"}],"required":false,"type":{"name":"() => void"}},"overscanCount":{"defaultValue":{"value":"0"},"description":"Number of items to render above and below the visible portion.","name":"overscanCount","parent":{"fileName":"core/src/components/VirtualizedList/VirtualizedList.tsx","name":"VirtualizedListProps"},"declarations":[{"fileName":"core/src/components/VirtualizedList/VirtualizedList.tsx","name":"VirtualizedListProps"}],"required":false,"type":{"name":"number"}},"scrollDuration":{"defaultValue":{"value":"200"},"description":"The duration of the scroll animation in milliseconds.","name":"scrollDuration","parent":{"fileName":"core/src/components/VirtualizedList/VirtualizedList.tsx","name":"VirtualizedListProps"},"declarations":[{"fileName":"core/src/components/VirtualizedList/VirtualizedList.tsx","name":"VirtualizedListProps"}],"required":false,"type":{"name":"number"}},"onItemsRendered":{"defaultValue":null,"description":"Callback fired when items are rendered.","name":"onItemsRendered","parent":{"fileName":"core/src/components/VirtualizedList/VirtualizedList.tsx","name":"VirtualizedListProps"},"declarations":[{"fileName":"core/src/components/VirtualizedList/VirtualizedList.tsx","name":"VirtualizedListProps"}],"required":false,"type":{"name":"({ firstItemId, secondItemId, lastItemId, centerItemId, firstItemOffsetEnd, currentOffsetTop }: { firstItemId: string; secondItemId: string; lastItemId: string; centerItemId: string; firstItemOffsetEnd: number; currentOffsetTop: number; }) => void"}},"onItemsRenderedThrottleMs":{"defaultValue":{"value":"200"},"description":"The delay (in ms) for throttling the `onItemsRendered` callback.","name":"onItemsRenderedThrottleMs","parent":{"fileName":"core/src/components/VirtualizedList/VirtualizedList.tsx","name":"VirtualizedListProps"},"declarations":[{"fileName":"core/src/components/VirtualizedList/VirtualizedList.tsx","name":"VirtualizedListProps"}],"required":false,"type":{"name":"number"}},"onSizeUpdate":{"defaultValue":null,"description":"Callback fired when the list size changes.","name":"onSizeUpdate","parent":{"fileName":"core/src/components/VirtualizedList/VirtualizedList.tsx","name":"VirtualizedListProps"},"declarations":[{"fileName":"core/src/components/VirtualizedList/VirtualizedList.tsx","name":"VirtualizedListProps"}],"required":false,"type":{"name":"(width: number, height: number) => void"}},"onVerticalScrollbarVisiblityChange":{"defaultValue":{"value":"null"},"description":"@deprecated - use `onLayoutDirectionScrollbarVisibilityChange`.","name":"onVerticalScrollbarVisiblityChange","parent":{"fileName":"core/src/components/VirtualizedList/VirtualizedList.tsx","name":"VirtualizedListProps"},"declarations":[{"fileName":"core/src/components/VirtualizedList/VirtualizedList.tsx","name":"VirtualizedListProps"}],"required":false,"type":{"name":"(value: boolean) => void"}},"onLayoutDirectionScrollbarVisibilityChange":{"defaultValue":{"value":"null"},"description":"Callback fired when the vertical or horizontal scrollbar visibility changes.","name":"onLayoutDirectionScrollbarVisibilityChange","parent":{"fileName":"core/src/components/VirtualizedList/VirtualizedList.tsx","name":"VirtualizedListProps"},"declarations":[{"fileName":"core/src/components/VirtualizedList/VirtualizedList.tsx","name":"VirtualizedListProps"}],"required":false,"type":{"name":"(value: boolean) => void"}},"role":{"defaultValue":null,"description":"The ARIA role attribute applied to the list.","name":"role","parent":{"fileName":"core/src/components/VirtualizedList/VirtualizedList.tsx","name":"VirtualizedListProps"},"declarations":[{"fileName":"core/src/components/VirtualizedList/VirtualizedList.tsx","name":"VirtualizedListProps"}],"required":false,"type":{"name":"string"}},"ariaLabel":{"defaultValue":null,"description":"The ARIA label for the list.","name":"ariaLabel","parent":{"fileName":"core/src/components/VirtualizedList/VirtualizedList.tsx","name":"VirtualizedListProps"},"declarations":[{"fileName":"core/src/components/VirtualizedList/VirtualizedList.tsx","name":"VirtualizedListProps"}],"required":false,"type":{"name":"string"}},"style":{"defaultValue":null,"description":"Custom inline styles applied to the list.","name":"style","parent":{"fileName":"core/src/components/VirtualizedList/VirtualizedList.tsx","name":"VirtualizedListProps"},"declarations":[{"fileName":"core/src/components/VirtualizedList/VirtualizedList.tsx","name":"VirtualizedListProps"}],"required":false,"type":{"name":"CSSProperties"}},"scrollToId":{"defaultValue":null,"description":"The ID of the item to scroll to.","name":"scrollToId","parent":{"fileName":"core/src/components/VirtualizedList/VirtualizedList.tsx","name":"VirtualizedListProps"},"declarations":[{"fileName":"core/src/components/VirtualizedList/VirtualizedList.tsx","name":"VirtualizedListProps"}],"required":false,"type":{"name":"string"}},"virtualListRef":{"defaultValue":null,"description":"Reference to the virtualized list component.","name":"virtualListRef","parent":{"fileName":"core/src/components/VirtualizedList/VirtualizedList.tsx","name":"VirtualizedListProps"},"declarations":[{"fileName":"core/src/components/VirtualizedList/VirtualizedList.tsx","name":"VirtualizedListProps"}],"required":false,"type":{"name":"ForwardedRef<HTMLElement>"}},"onScroll":{"defaultValue":null,"description":"Callback fired when the list is scrolled.","name":"onScroll","parent":{"fileName":"core/src/components/VirtualizedList/VirtualizedList.tsx","name":"VirtualizedListProps"},"declarations":[{"fileName":"core/src/components/VirtualizedList/VirtualizedList.tsx","name":"VirtualizedListProps"}],"required":false,"type":{"name":"(horizontalScrollDirection: ScrollDirection, scrollTop: number, scrollUpdateWasRequested: boolean) => void"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Typography/Typography.tsx":{"hash":"5be2c15e925cbc2ba7b59446daa17b20","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Typography/Typography.tsx","components":[{"displayName":"Typography","description":"","props":{"element":{"defaultValue":{"value":"span"},"description":"The HTML element tag used for the text component.","name":"element","parent":{"fileName":"core/src/components/Typography/Typography.tsx","name":"TypographyProps"},"declarations":[{"fileName":"core/src/components/Typography/Typography.tsx","name":"TypographyProps"}],"required":false,"type":{"name":"string"}},"children":{"defaultValue":null,"description":"The content inside the typography component.","name":"children","parent":{"fileName":"core/src/components/Typography/Typography.tsx","name":"TypographyProps"},"declarations":[{"fileName":"core/src/components/Typography/Typography.tsx","name":"TypographyProps"}],"required":true,"type":{"name":"ElementContent"}},"color":{"defaultValue":{"value":"primary"},"description":"The text color.","name":"color","parent":{"fileName":"core/src/components/Typography/Typography.tsx","name":"TypographyProps"},"declarations":[{"fileName":"core/src/components/Typography/Typography.tsx","name":"TypographyProps"}],"required":false,"type":{"name":"enum","raw":"TypographyColor","value":[{"value":"\"primary\""},{"value":"\"secondary\""},{"value":"\"onPrimary\""},{"value":"\"onInverted\""},{"value":"\"fixedLight\""},{"value":"\"fixedDark\""},{"value":"\"inherit\""},{"value":"\"negative\""}]}},"align":{"defaultValue":{"value":"start"},"description":"The text alignment.","name":"align","parent":{"fileName":"core/src/components/Typography/Typography.tsx","name":"TypographyProps"},"declarations":[{"fileName":"core/src/components/Typography/Typography.tsx","name":"TypographyProps"}],"required":false,"type":{"name":"enum","raw":"TypographyAlign","value":[{"value":"\"inherit\""},{"value":"\"start\""},{"value":"\"center\""},{"value":"\"end\""}]}},"ellipsis":{"defaultValue":{"value":"true"},"description":"If true, truncates overflowing text with an ellipsis.","name":"ellipsis","parent":{"fileName":"core/src/components/Typography/Typography.tsx","name":"TypographyProps"},"declarations":[{"fileName":"core/src/components/Typography/Typography.tsx","name":"TypographyProps"}],"required":false,"type":{"name":"boolean"}},"maxLines":{"defaultValue":{"value":"1"},"description":"The maximum number of lines before truncating with an ellipsis.","name":"maxLines","parent":{"fileName":"core/src/components/Typography/Typography.tsx","name":"TypographyProps"},"declarations":[{"fileName":"core/src/components/Typography/Typography.tsx","name":"TypographyProps"}],"required":false,"type":{"name":"number"}},"tooltipProps":{"defaultValue":null,"description":"Props passed to the tooltip displayed when hovering over the text.","name":"tooltipProps","parent":{"fileName":"core/src/components/Typography/Typography.tsx","name":"TypographyProps"},"declarations":[{"fileName":"core/src/components/Typography/Typography.tsx","name":"TypographyProps"}],"required":false,"type":{"name":"Partial<TooltipProps>"}},"withoutTooltip":{"defaultValue":{"value":"false"},"description":"If true, disables the tooltip that appears when text is truncated.","name":"withoutTooltip","parent":{"fileName":"core/src/components/Typography/Typography.tsx","name":"TypographyProps"},"declarations":[{"fileName":"core/src/components/Typography/Typography.tsx","name":"TypographyProps"}],"required":false,"type":{"name":"boolean"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/utils/colors-utils.ts":{"hash":"7424295819f8199414f20ea0af904977","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/utils/colors-utils.ts","components":[]}},"/Users/talko/Development/vibe/packages/core/src/components/Modal/footers/ModalFooter/ModalFooter.tsx":{"hash":"ca23f28b91ab3d7db79ef7958f4a22ec","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Modal/footers/ModalFooter/ModalFooter.tsx","components":[{"displayName":"ModalFooter","description":"","props":{"renderSideAction":{"defaultValue":null,"description":"Content displayed on the left side of the footer.","name":"renderSideAction","parent":{"fileName":"core/src/components/Modal/footers/ModalFooter/ModalFooter.types.ts","name":"ModalFooterProps"},"declarations":[{"fileName":"core/src/components/Modal/footers/ModalFooter/ModalFooter.types.ts","name":"ModalFooterProps"}],"required":false,"type":{"name":"React.ReactNode"}},"primaryButton":{"defaultValue":null,"description":"Props for the primary action button.","name":"primaryButton","parent":{"fileName":"core/src/components/Modal/footers/ModalFooterBase/ModalFooterBase.types.ts","name":"ModalFooterBaseProps"},"declarations":[{"fileName":"core/src/components/Modal/footers/ModalFooterBase/ModalFooterBase.types.ts","name":"ModalFooterBaseProps"}],"required":true,"type":{"name":"ModalFooterActionProps"}},"secondaryButton":{"defaultValue":null,"description":"Props for the optional secondary action button.","name":"secondaryButton","parent":{"fileName":"core/src/components/Modal/footers/ModalFooterBase/ModalFooterBase.types.ts","name":"ModalFooterBaseProps"},"declarations":[{"fileName":"core/src/components/Modal/footers/ModalFooterBase/ModalFooterBase.types.ts","name":"ModalFooterBaseProps"}],"required":false,"type":{"name":"ModalFooterActionProps"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Modal/footers/ModalFooterWizard/ModalFooterWizard.tsx":{"hash":"99c01912293ce32747b57bda8ecc77ad","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Modal/footers/ModalFooterWizard/ModalFooterWizard.tsx","components":[{"displayName":"ModalFooterWizard","description":"","props":{"stepCount":{"defaultValue":null,"description":"The total number of steps in the wizard.\nRenders the corresponding number of step indicators (\"dots\") in the footer.","name":"stepCount","parent":{"fileName":"core/src/components/Modal/footers/ModalFooterWizard/ModalFooterWizard.types.ts","name":"ModalFooterWizardProps"},"declarations":[{"fileName":"core/src/components/Modal/footers/ModalFooterWizard/ModalFooterWizard.types.ts","name":"ModalFooterWizardProps"}],"required":true,"type":{"name":"number"}},"activeStep":{"defaultValue":null,"description":"The current active step (0-based index).\nHighlights the corresponding step indicator (\"dot\") in the footer.","name":"activeStep","parent":{"fileName":"core/src/components/Modal/footers/ModalFooterWizard/ModalFooterWizard.types.ts","name":"ModalFooterWizardProps"},"declarations":[{"fileName":"core/src/components/Modal/footers/ModalFooterWizard/ModalFooterWizard.types.ts","name":"ModalFooterWizardProps"}],"required":true,"type":{"name":"number"}},"onStepClick":{"defaultValue":null,"description":"Callback fired when a step indicator (\"dot\") is clicked.","name":"onStepClick","parent":{"fileName":"core/src/components/Modal/footers/ModalFooterWizard/ModalFooterWizard.types.ts","name":"ModalFooterWizardProps"},"declarations":[{"fileName":"core/src/components/Modal/footers/ModalFooterWizard/ModalFooterWizard.types.ts","name":"ModalFooterWizardProps"}],"required":true,"type":{"name":"(stepIndex: number) => void"}},"primaryButton":{"defaultValue":null,"description":"Props for the primary action button.","name":"primaryButton","parent":{"fileName":"core/src/components/Modal/footers/ModalFooterBase/ModalFooterBase.types.ts","name":"ModalFooterBaseProps"},"declarations":[{"fileName":"core/src/components/Modal/footers/ModalFooterBase/ModalFooterBase.types.ts","name":"ModalFooterBaseProps"}],"required":true,"type":{"name":"ModalFooterActionProps"}},"secondaryButton":{"defaultValue":null,"description":"Props for the optional secondary action button.","name":"secondaryButton","parent":{"fileName":"core/src/components/Modal/footers/ModalFooterBase/ModalFooterBase.types.ts","name":"ModalFooterBaseProps"},"declarations":[{"fileName":"core/src/components/Modal/footers/ModalFooterBase/ModalFooterBase.types.ts","name":"ModalFooterBaseProps"}],"required":false,"type":{"name":"ModalFooterActionProps"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Modal/layouts/ModalBasicLayout/ModalBasicLayout.tsx":{"hash":"e6ed9f5f1e8a0901b1d90f82f10da266","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Modal/layouts/ModalBasicLayout/ModalBasicLayout.tsx","components":[{"displayName":"ModalBasicLayout","description":"","props":{"children":{"defaultValue":null,"description":"The content of the layout, structured as:\n1. Header content\n2. Main content","name":"children","parent":{"fileName":"core/src/components/Modal/layouts/ModalBasicLayout/ModalBasicLayout.types.ts","name":"ModalBasicLayoutProps"},"declarations":[{"fileName":"core/src/components/Modal/layouts/ModalBasicLayout/ModalBasicLayout.types.ts","name":"ModalBasicLayoutProps"}],"required":true,"type":{"name":"React.ReactNode"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Modal/layouts/ModalMediaLayout/ModalMediaLayout.tsx":{"hash":"c8d0c8996a4e9a7e87d14c3f020ef363","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Modal/layouts/ModalMediaLayout/ModalMediaLayout.tsx","components":[{"displayName":"ModalMediaLayout","description":"","props":{"children":{"defaultValue":null,"description":"The content of the layout, structured as:\n1. Media content\n2. Header content\n3. Main content","name":"children","parent":{"fileName":"core/src/components/Modal/layouts/ModalMediaLayout/ModalMediaLayout.types.ts","name":"ModalMediaLayoutProps"},"declarations":[{"fileName":"core/src/components/Modal/layouts/ModalMediaLayout/ModalMediaLayout.types.ts","name":"ModalMediaLayoutProps"}],"required":true,"type":{"name":"React.ReactNode"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Modal/layouts/ModalSideBySideLayout/ModalSideBySideLayout.tsx":{"hash":"7357c4d2ec234f0fcf7739e5b8e3f30b","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Modal/layouts/ModalSideBySideLayout/ModalSideBySideLayout.tsx","components":[{"displayName":"ModalSideBySideLayout","description":"","props":{"children":{"defaultValue":null,"description":"The content of the layout, structured as:\n1. Header content\n2. Main content\n3. Media content","name":"children","parent":{"fileName":"core/src/components/Modal/layouts/ModalSideBySideLayout/ModalSideBySideLayout.types.ts","name":"ModalSideBySideLayoutProps"},"declarations":[{"fileName":"core/src/components/Modal/layouts/ModalSideBySideLayout/ModalSideBySideLayout.types.ts","name":"ModalSideBySideLayoutProps"}],"required":true,"type":{"name":"React.ReactNode"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Modal/Modal/Modal.tsx":{"hash":"5fbdb2cc8e433d55ed73239d6db859ec","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Modal/Modal/Modal.tsx","components":[{"displayName":"Modal","description":"","props":{"id":{"defaultValue":null,"description":"Unique identifier for the modal.","name":"id","parent":{"fileName":"core/src/components/Modal/Modal/Modal.types.tsx","name":"ModalProps"},"declarations":[{"fileName":"core/src/components/Modal/Modal/Modal.types.tsx","name":"ModalProps"}],"required":true,"type":{"name":"string"}},"show":{"defaultValue":null,"description":"Controls the visibility of the modal.","name":"show","parent":{"fileName":"core/src/components/Modal/Modal/Modal.types.tsx","name":"ModalProps"},"declarations":[{"fileName":"core/src/components/Modal/Modal/Modal.types.tsx","name":"ModalProps"}],"required":true,"type":{"name":"boolean"}},"size":{"defaultValue":{"value":"medium"},"description":"Determines the width and max-height of the modal.","name":"size","parent":{"fileName":"core/src/components/Modal/Modal/Modal.types.tsx","name":"ModalProps"},"declarations":[{"fileName":"core/src/components/Modal/Modal/Modal.types.tsx","name":"ModalProps"}],"required":false,"type":{"name":"enum","raw":"ModalSize","value":[{"value":"\"small\""},{"value":"\"medium\""},{"value":"\"large\""},{"value":"\"full-view\""}]}},"closeButtonTheme":{"defaultValue":null,"description":"Theme color for the close button.","name":"closeButtonTheme","parent":{"fileName":"core/src/components/Modal/Modal/Modal.types.tsx","name":"ModalProps"},"declarations":[{"fileName":"core/src/components/Modal/Modal/Modal.types.tsx","name":"ModalProps"}],"required":false,"type":{"name":"enum","raw":"ModalTopActionsTheme","value":[{"value":"\"dark\""},{"value":"\"light\""}]}},"closeButtonAriaLabel":{"defaultValue":null,"description":"Accessibility label for the close button.","name":"closeButtonAriaLabel","parent":{"fileName":"core/src/components/Modal/Modal/Modal.types.tsx","name":"ModalProps"},"declarations":[{"fileName":"core/src/components/Modal/Modal/Modal.types.tsx","name":"ModalProps"}],"required":false,"type":{"name":"string"}},"onClose":{"defaultValue":{"value":"() => {}"},"description":"Callback fired when the modal should close.","name":"onClose","parent":{"fileName":"core/src/components/Modal/Modal/Modal.types.tsx","name":"ModalProps"},"declarations":[{"fileName":"core/src/components/Modal/Modal/Modal.types.tsx","name":"ModalProps"}],"required":false,"type":{"name":"(event: any) => void"}},"autoFocus":{"defaultValue":{"value":"true"},"description":"This is intended for advanced use-cases.\nIt allows you to control the default focus behavior when the modal mounts.\nMake sure to use this prop only when you understand the implications.\n\nDetermines if focus should automatically move to the first focusable element when the component mounts.\nWhen set to `false` - disables the automatic focus behavior.\n- Notice this might break keyboard and general accessibility and should be used with caution.","name":"autoFocus","parent":{"fileName":"core/src/components/Modal/Modal/Modal.types.tsx","name":"ModalProps"},"declarations":[{"fileName":"core/src/components/Modal/Modal/Modal.types.tsx","name":"ModalProps"}],"required":false,"type":{"name":"boolean"}},"onFocusAttempt":{"defaultValue":null,"description":"This is intended for advanced use-cases.\nIt allows you to control the focus behavior when moving between elements within the modal.\nMake sure to use this prop only when you understand the implications.\n\nCalled whenever focus is about to move to a new element within the modal.\nReturn:\n- `true` to allow normal flow focus.\n- `false` to block it (let the browser decide, usually moves to body).\n  - Notice this might break keyboard accessibility and should be used with caution.\n- An HTMLElement to redirect focus to instead of normal flow.\n- Any other value (e.g., null, undefined) would act as `false`.","name":"onFocusAttempt","parent":{"fileName":"core/src/components/Modal/Modal/Modal.types.tsx","name":"ModalProps"},"declarations":[{"fileName":"core/src/components/Modal/Modal/Modal.types.tsx","name":"ModalProps"}],"required":false,"type":{"name":"(nextFocusedElement?: HTMLElement) => boolean | HTMLElement"}},"renderHeaderAction":{"defaultValue":null,"description":"Additional action to render in the header area.","name":"renderHeaderAction","parent":{"fileName":"core/src/components/Modal/Modal/Modal.types.tsx","name":"ModalProps"},"declarations":[{"fileName":"core/src/components/Modal/Modal/Modal.types.tsx","name":"ModalProps"}],"required":false,"type":{"name":"any"}},"anchorElementRef":{"defaultValue":null,"description":"Reference to an element that triggered the modal, used for animations.","name":"anchorElementRef","parent":{"fileName":"core/src/components/Modal/Modal/Modal.types.tsx","name":"ModalProps"},"declarations":[{"fileName":"core/src/components/Modal/Modal/Modal.types.tsx","name":"ModalProps"}],"required":false,"type":{"name":"React.RefObject<HTMLElement>"}},"alertModal":{"defaultValue":null,"description":"When true, prevents closing the modal when clicking the overlay (\"click-outside\") or pressing ESC.","name":"alertModal","parent":{"fileName":"core/src/components/Modal/Modal/Modal.types.tsx","name":"ModalProps"},"declarations":[{"fileName":"core/src/components/Modal/Modal/Modal.types.tsx","name":"ModalProps"}],"required":false,"type":{"name":"boolean"}},"container":{"defaultValue":{"value":"document.body"},"description":"The target element to render the modal into.","name":"container","parent":{"fileName":"core/src/components/Modal/Modal/Modal.types.tsx","name":"ModalProps"},"declarations":[{"fileName":"core/src/components/Modal/Modal/Modal.types.tsx","name":"ModalProps"}],"required":false,"type":{"name":"any"}},"children":{"defaultValue":null,"description":"Modal content.","name":"children","parent":{"fileName":"core/src/components/Modal/Modal/Modal.types.tsx","name":"ModalProps"},"declarations":[{"fileName":"core/src/components/Modal/Modal/Modal.types.tsx","name":"ModalProps"}],"required":true,"type":{"name":"React.ReactNode"}},"style":{"defaultValue":null,"description":"Additional inline styles for the modal.","name":"style","parent":{"fileName":"core/src/components/Modal/Modal/Modal.types.tsx","name":"ModalProps"},"declarations":[{"fileName":"core/src/components/Modal/Modal/Modal.types.tsx","name":"ModalProps"}],"required":false,"type":{"name":"React.CSSProperties"}},"zIndex":{"defaultValue":null,"description":"The z-index to be used for the modal and overlay.","name":"zIndex","parent":{"fileName":"core/src/components/Modal/Modal/Modal.types.tsx","name":"ModalProps"},"declarations":[{"fileName":"core/src/components/Modal/Modal/Modal.types.tsx","name":"ModalProps"}],"required":false,"type":{"name":"number"}},"aria-labelledby":{"defaultValue":null,"description":"If provided, overrides the automatically generated aria-labelledby, that is assigned when used with ModalHeader.","name":"aria-labelledby","parent":{"fileName":"core/src/components/Modal/Modal/Modal.types.tsx","name":"ModalProps"},"declarations":[{"fileName":"core/src/components/Modal/Modal/Modal.types.tsx","name":"ModalProps"}],"required":false,"type":{"name":"string"}},"aria-describedby":{"defaultValue":null,"description":"If provided, overrides the automatically generated aria-describedby, that is assigned when used with ModalHeader.","name":"aria-describedby","parent":{"fileName":"core/src/components/Modal/Modal/Modal.types.tsx","name":"ModalProps"},"declarations":[{"fileName":"core/src/components/Modal/Modal/Modal.types.tsx","name":"ModalProps"}],"required":false,"type":{"name":"string"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Modal/Modal/Modal.types.tsx":{"hash":"54927f949398bb792bd7b79b8d1ee307","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Modal/Modal/Modal.types.tsx","components":[]}},"/Users/talko/Development/vibe/packages/core/src/components/Modal/ModalHeader/ModalHeader.tsx":{"hash":"fe92c4a6d97acbf2e70498acf6ef255e","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Modal/ModalHeader/ModalHeader.tsx","components":[{"displayName":"ModalHeader","description":"","props":{"title":{"defaultValue":null,"description":"Main heading text of the modal.\n\n- If you pass a **string**, `ModalHeader` will generate an internal ID and communicate it to the parent `Modal`\n  so that `aria-labelledby` is set automatically (unless `Modal` receives `aria-labelledby` prop).\n- If you pass a **ReactNode** (such as a custom component), **you must**:\n  1. Assign an **`id`** to that element (or a nested element), and\n  2. Pass that **same `id`** as the `aria-labelledby` prop to the `Modal`.\n\nThis ensures that assistive technologies know which element is the modal's title.\n@see [WAI-ARIA Authoring Practices for Dialog (Modal)](https://www.w3.org/WAI/ARIA/apg/patterns/dialog-modal/#wai-ariaroles,states,andproperties)","name":"title","declarations":[{"fileName":"core/src/components/Modal/ModalHeader/ModalHeader.types.ts","name":"TypeLiteral"}],"required":true,"type":{"name":"any"}},"description":{"defaultValue":null,"description":"Descriptive text or content below the title.\n- If you pass a **string**, this will automatically set an internally generated `aria-describedby` on the parent Modal.\n- If you pass a **ReactNode** (e.g., a complex component), we recommend assigning an **`id`** to that component (or a nested element),\n  and then pass that same ID in `aria-describedby` to the **Modal** (overriding the internal ID).\n\nThis ensures that assistive technologies know which element is the modal's descriptive content.\n@see [WAI-ARIA Authoring Practices for Dialog (Modal)](https://www.w3.org/WAI/ARIA/apg/patterns/dialog-modal/#wai-ariaroles,states,andproperties)","name":"description","parent":{"fileName":"core/src/components/Modal/ModalHeader/ModalHeader.types.ts","name":"WithDescription"},"declarations":[{"fileName":"core/src/components/Modal/ModalHeader/ModalHeader.types.ts","name":"WithDescription"},{"fileName":"core/src/components/Modal/ModalHeader/ModalHeader.types.ts","name":"WithoutDescription"}],"required":false,"type":{"name":"any"}},"descriptionIcon":{"defaultValue":null,"description":"Icon to display before the description. Can only be passed when description is supplied.","name":"descriptionIcon","parent":{"fileName":"core/src/components/Modal/ModalHeader/ModalHeader.types.ts","name":"WithDescription"},"declarations":[{"fileName":"core/src/components/Modal/ModalHeader/ModalHeader.types.ts","name":"WithDescription"},{"fileName":"core/src/components/Modal/ModalHeader/ModalHeader.types.ts","name":"WithoutDescription"}],"required":false,"type":{"name":"any"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Modal/ModalContent/ModalContent.tsx":{"hash":"3cf771d8eb966e79034f4d506c733ba0","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Modal/ModalContent/ModalContent.tsx","components":[{"displayName":"ModalContent","description":"","props":{"children":{"defaultValue":null,"description":"The main content of the modal.","name":"children","parent":{"fileName":"core/src/components/Modal/ModalContent/ModalContent.types.ts","name":"ModalContentProps"},"declarations":[{"fileName":"core/src/components/Modal/ModalContent/ModalContent.types.ts","name":"ModalContentProps"}],"required":false,"type":{"name":"React.ReactNode"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}},"/Users/talko/Development/vibe/packages/core/src/components/Modal/ModalMedia/ModalMedia.tsx":{"hash":"25d95812578cfb9aaf498a9ca02f2584","result":{"filePath":"/Users/talko/Development/vibe/packages/core/src/components/Modal/ModalMedia/ModalMedia.tsx","components":[{"displayName":"ModalMedia","description":"","props":{"children":{"defaultValue":null,"description":"The media content displayed in the modal.","name":"children","parent":{"fileName":"core/src/components/Modal/ModalMedia/ModalMedia.types.ts","name":"ModalMediaProps"},"declarations":[{"fileName":"core/src/components/Modal/ModalMedia/ModalMedia.types.ts","name":"ModalMediaProps"}],"required":true,"type":{"name":"React.ReactNode"}},"className":{"defaultValue":null,"description":"A CSS class name to apply to the component.","name":"className","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"data-testid":{"defaultValue":null,"description":"A unique identifier for testing purposes.","name":"data-testid","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"An HTML id attribute for the component.","name":"id","parent":{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"},"declarations":[{"fileName":"core/src/types/VibeComponentProps.ts","name":"VibeComponentProps"}],"required":false,"type":{"name":"string"}}}}]}}}}