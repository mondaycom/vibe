"use strict";(globalThis.webpackChunk_vibe_core=globalThis.webpackChunk_vibe_core||[]).push([[4698],{"../../node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{BN:()=>MDXContext,RP:()=>useMDXComponents,gz:()=>withMDXComponents,xA:()=>MDXProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./src/storybook/stand-alone-documentaion/contributing.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>contributing});__webpack_require__("../../node_modules/react/index.js");var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),lib=__webpack_require__("../../node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("../../node_modules/@storybook/blocks/dist/index.mjs");const CONTRIBUTING_namespaceObject="# Contribution Guide\n\nHi there! We're really excited that you're interested in contributing to Vibe. Before submitting your contribution, please make sure to take a moment and read through the following guidelines:\n\n## Issue reporting\n\nFor new features, suggestions, or general questions, please make sure to create a [discussion](https://github.com/mondaycom/vibe/discussions) first.\n\nIf you found a bug, please [create an issue](https://github.com/mondaycom/vibe/issues/new).\n\n## Development Setup\n\nStorybook is used as the project's development environment. You can use it to preview your changes and test components in isolation. To start working locally, run the following command in the root directory:\n\n```bash\nyarn install\nyarn storybook\n```\n\n### Testing\n\nThere are several layers of testing, such as unit/component tests, integration, a11y, and end-to-end tests. Every new feature or bug fix should be covered by tests, depending on the type of change.\n\nPlease make sure to run tests before submitting your PR:\n\n```bash\nyarn test\n```\n\nIf snapshot tests fail, and you are sure that the changes are intentional, update them by running:\n\n```bash\nyarn test:update\n```\n\n### Linting and formatting\n\nWe use [Prettier](https://prettier.io/) for code formatting. Please, make sure to use it in your editor to keep the codebase consistent.\n\nPlease make sure to run linting and formatting before submitting your PR:\n\n```bash\nyarn lint\n```\n\n### Commits\n\nThe project is using [Conventional Commits](https://www.conventionalcommits.org/) to standardize the commit messages, and release new versions automatically according to [Semantic Versioning](https://semver.org/).\n\nPlease make sure to follow the convention for creating Pull Requests and commits.\n\n## Creating a Pull Request\n\nWhen creating a PR, please make sure to:\n\n- Create a PR title based on the [Conventional Commits](https://www.conventionalcommits.org/) format\n- Add a description of the changes you're making, including the motivation for these changes, and any additional context\n- Link to any related issues or discussions\n- Make sure that all checks are passed\n\nAfter submitting your PR, the maintainers will review your changes and provide feedback. If everything is good, your PR will be merged.\n\n**We really appreciate your contribution to Vibe! ðŸš€**\n";function _createMdxContent(props){const _components=Object.assign({h1:"h1"},(0,lib.RP)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.W8,{title:"Contributing"}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"contribution-guide",children:"Contribution Guide"}),"\n",(0,jsx_runtime.jsx)(dist.oz,{children:CONTRIBUTING_namespaceObject.replace("# Contribution Guide","")})]})}const contributing=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.RP)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,props)})):_createMdxContent(props)}}}]);