import{j as t}from"./jsx-runtime-lwGtIXvq.js";import{r as i}from"./index-CTZeEbLr.js";import{c as f}from"./index-BpvXyOxN.js";import{b as y,B as h}from"./Button-CH2M7eXD.js";import{b as C,c as E,d as q,D as S,S as V}from"./TipseenWizard-DmoKBe_U.js";import{g as m,b as p}from"./test-ids-utils-CSfXomCJ.js";import{u as v}from"./useMergeRef-Do2VYePL.js";import{g as B}from"./typesciptCssModulesHelper-Ji7rRrZn.js";import{c as R}from"./camelCase-CO1PkVrH.js";const D="_buttons_e9d47_1",j="_dismiss_e9d47_7",g={buttons:D,dismiss:j},b=({id:e,title:s,titleClassName:a,children:n=null,hideDismiss:r=!0,hideSubmit:o,submitButtonText:d=V,submitButtonIcon:l,onSubmit:u,dismissButtonText:M=S,onDismiss:x})=>{const T=i.useContext(C),_=i.useMemo(()=>T===E.INVERTED?y.ON_INVERTED_BACKGROUND:y.ON_PRIMARY_COLOR,[T]);return t.jsxs(q,{title:s,titleClassName:a,id:e,children:[n?t.jsx("span",{children:n}):null,t.jsxs("div",{className:f(g.buttons),children:[r?null:t.jsx(h,{kind:"tertiary",color:_,className:g.dismiss,size:"small",onClick:x,"data-testid":m(p.TIPSEEN_CONTENT_DISMISS),children:M}),o?null:t.jsx(h,{kind:"primary",color:_,size:"small",onClick:u,"data-testid":m(p.TIPSEEN_CONTENT_SUBMIT),leftIcon:l,children:d})]})]})};try{b.displayName="TipseenContent",b.__docgenInfo={description:"",displayName:"TipseenContent",props:{title:{defaultValue:null,description:"The title text displayed in the Tipseen content.",name:"title",required:!1,type:{name:"string"}},titleClassName:{defaultValue:null,description:"Class name applied to the Tipseen title.",name:"titleClassName",required:!1,type:{name:"string"}},hideDismiss:{defaultValue:{value:"true"},description:"If true, hides the dismiss button.",name:"hideDismiss",required:!1,type:{name:"boolean"}},children:{defaultValue:{value:"null"},description:"The content inside the Tipseen.",name:"children",required:!1,type:{name:"ElementContent"}},hideSubmit:{defaultValue:null,description:"If true, hides the submit button.",name:"hideSubmit",required:!1,type:{name:"boolean"}},submitButtonText:{defaultValue:{value:"Submit"},description:"The text displayed on the submit button.",name:"submitButtonText",required:!1,type:{name:"string"}},submitButtonIcon:{defaultValue:null,description:"Icon to display in the submit button",name:"submitButtonIcon",required:!1,type:{name:"SubIcon"}},onSubmit:{defaultValue:null,description:"Callback fired when the submit button is clicked.",name:"onSubmit",required:!1,type:{name:"(event: MouseEvent<Element, MouseEvent>) => void"}},dismissButtonText:{defaultValue:{value:"Dismiss"},description:"The text displayed on the dismiss button.",name:"dismissButtonText",required:!1,type:{name:"string"}},onDismiss:{defaultValue:null,description:"Callback fired when the dismiss button is clicked.",name:"onDismiss",required:!1,type:{name:"(event: MouseEvent<Element, MouseEvent>) => void"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const A="_tipseenImage_159z3_1",O={tipseenImage:A},k="_tipseenMedia_15niv_1",U="_colorInverted_15niv_11",N={tipseenMedia:k,colorInverted:U},c=i.forwardRef(({className:e,id:s,"data-testid":a,children:n},r)=>{const o=i.useRef(null),d=v(r,o),l=i.useContext(C),u=i.useMemo(()=>f(N.tipseenMedia,B(N,R("color-"+l)),e),[l,e]);return t.jsx("div",{ref:d,className:u,id:s,"data-testid":a||m(p.TIPSEEN_MEDIA,s),children:n})});try{c.displayName="TipseenMedia",c.__docgenInfo={description:"",displayName:"TipseenMedia",props:{children:{defaultValue:null,description:"The media content displayed inside the Tipseen.",name:"children",required:!0,type:{name:"ReactNode"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const I=({src:e,alt:s,className:a,tipseenMediaClassName:n})=>t.jsx(c,{className:n,children:t.jsx("img",{src:e,alt:s,className:f(O.tipseenImage,a)})});try{I.displayName="TipseenImage",I.__docgenInfo={description:"",displayName:"TipseenImage",props:{src:{defaultValue:null,description:"The source URL of the image.",name:"src",required:!1,type:{name:"string"}},alt:{defaultValue:null,description:"The alternative text for the image, used for accessibility.",name:"alt",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"Class name applied to the image element.",name:"className",required:!1,type:{name:"string"}},tipseenMediaClassName:{defaultValue:null,description:"Class name applied to the TipseenMedia container.",name:"tipseenMediaClassName",required:!1,type:{name:"string"}}}}}catch{}export{b as T,I as a,c as b};
