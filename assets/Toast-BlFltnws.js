import{j as i}from"./jsx-runtime-lwGtIXvq.js";import{g as p,C as m,b as $}from"./test-ids-utils-CSfXomCJ.js";import{c}from"./index-BpvXyOxN.js";import{r as l}from"./index-CTZeEbLr.js";import{T as U}from"./Text-CYK--k2a.js";import{L as K}from"./Loader-BPB1GClv.js";import{F as j}from"./Flex-D6jv3OvD.js";import{L as G}from"./Link-D05CMsge.js";import{B as J}from"./Button-lmknnYep.js";import{t as A}from"./Info-jvFNh0HS.js";import{m as X,k as Y}from"./Workspace-DtDO7RvQ.js";import{r as Q}from"./Check-CxyRTNy4.js";import{I as Z}from"./Icon-B1P6-uxB.js";import{N as ee}from"./function-utils-CSFuT5hl.js";import{g as te}from"./typesciptCssModulesHelper-oFWQo8l_.js";import{I as ne}from"./IconButton-BtXl5no_.js";import{u as ae}from"./index-BWKJv4Cj.js";import{c as ie}from"./camelCase-CO1PkVrH.js";import{C as le}from"./CSSTransition-CWtXmFMf.js";import{a as oe}from"./CloseSmall-DUYWL2FE.js";import{a as se}from"./withStaticProps-DfSG2La2.js";const re="_actionLink_gcz92_1",ue={actionLink:re},_=({className:e,id:n,"data-testid":s,...r})=>{const f=c(ue.actionLink,e);return i.jsx(G,{...r,className:f,id:n,"data-testid":s||p(m.TOAST_LINK,n)})};try{_.displayName="ToastLink",_.__docgenInfo={description:"",displayName:"ToastLink",props:{textClassName:{defaultValue:null,description:"Class name applied to the link text.",name:"textClassName",required:!1,type:{name:"string"}},href:{defaultValue:null,description:"The URL the link points to.",name:"href",required:!1,type:{name:"string"}},text:{defaultValue:null,description:"The text content of the link.",name:"text",required:!1,type:{name:"string"}},rel:{defaultValue:null,description:"Specifies the relationship between the current document and the linked resource.",name:"rel",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:"Callback fired when the link is clicked.",name:"onClick",required:!1,type:{name:"(event: MouseEvent<Element, MouseEvent>) => void"}},target:{defaultValue:null,description:"Specifies where to open the linked document.",name:"target",required:!1,type:{name:"LinkTarget"}},ariaLabelDescription:{defaultValue:null,description:"The ARIA label description for accessibility.",name:"ariaLabelDescription",required:!1,type:{name:"string"}},ariaDescribedby:{defaultValue:null,description:"The ID of the element that describes this link.",name:"ariaDescribedby",required:!1,type:{name:"string"}},ariaLabeledBy:{defaultValue:null,description:"The ID of the element labeling this link.",name:"ariaLabeledBy",required:!1,type:{name:"string"}},icon:{defaultValue:null,description:"Icon displayed next to the link text.",name:"icon",required:!1,type:{name:"SubIcon"}},iconPosition:{defaultValue:null,description:"The position of the icon relative to the text.",name:"iconPosition",required:!1,type:{name:"LinkIconPosition"}},disableNavigation:{defaultValue:null,description:"If true, disables navigation when the link is clicked.",name:"disableNavigation",required:!1,type:{name:"boolean"}},inheritFontSize:{defaultValue:null,description:"If true, the link inherits the surrounding text's font size.",name:"inheritFontSize",required:!1,type:{name:"boolean"}},inlineText:{defaultValue:null,description:"If true, the link is styled to fit within inline text content.",name:"inlineText",required:!1,type:{name:"boolean"}},color:{defaultValue:null,description:"The link's color style",name:"color",required:!1,type:{name:"LinkColor"}},style:{defaultValue:null,description:"Inline style object applied to the link element.",name:"style",required:!1,type:{name:"CSSProperties"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const q=({className:e,id:n,"data-testid":s,...r})=>i.jsx(J,{...r,id:n,kind:"secondary",marginLeft:!1,"data-testid":s||p($.TOAST_BUTTON,n),className:e,size:"small",color:"fixed-light"});try{q.displayName="ToastButton",q.__docgenInfo={description:"",displayName:"ToastButton",props:{className:{defaultValue:null,description:"Custom class names to pass to the component",name:"className",required:!1,type:{name:"string"}},activeButtonClassName:{defaultValue:null,description:"",name:"activeButtonClassName",required:!1,type:{name:"string"}},kind:{defaultValue:null,description:"The button's kind",name:"kind",required:!1,type:{name:"ButtonType"}},onClick:{defaultValue:null,description:"Callback function to run when the button is clicked",name:"onClick",required:!1,type:{name:"(event: MouseEvent<HTMLButtonElement, MouseEvent>) => void"}},onMouseDown:{defaultValue:null,description:"",name:"onMouseDown",required:!1,type:{name:"(event: MouseEvent<HTMLButtonElement, MouseEvent>) => void"}},blurOnMouseUp:{defaultValue:null,description:"Blur on button click",name:"blurOnMouseUp",required:!1,type:{name:"boolean"}},name:{defaultValue:null,description:"Name of the button - for form submit usages",name:"name",required:!1,type:{name:"string"}},size:{defaultValue:null,description:"The button's size",name:"size",required:!1,type:{name:"ButtonSize"}},color:{defaultValue:null,description:"The button's color",name:"color",required:!1,type:{name:"ButtonColor"}},type:{defaultValue:null,description:"The button's type",name:"type",required:!1,type:{name:"ButtonInputType"}},disabled:{defaultValue:null,description:"Whether the button should be disabled or not",name:"disabled",required:!1,type:{name:"boolean"}},rightIcon:{defaultValue:null,description:"Icon to place on the right",name:"rightIcon",required:!1,type:{name:"SubIcon"}},leftIcon:{defaultValue:null,description:"Icon to place on the left",name:"leftIcon",required:!1,type:{name:"SubIcon"}},success:{defaultValue:null,description:"the success props are used when you have async action and wants to display a success message",name:"success",required:!1,type:{name:"boolean"}},successIcon:{defaultValue:null,description:"Success icon name",name:"successIcon",required:!1,type:{name:"SubIcon"}},successText:{defaultValue:null,description:"Success text",name:"successText",required:!1,type:{name:"string"}},loading:{defaultValue:null,description:"loading boolean which switches the text to a loader",name:"loading",required:!1,type:{name:"boolean"}},loaderClassName:{defaultValue:null,description:"className which is applied to loader container *",name:"loaderClassName",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},active:{defaultValue:null,description:"displays the active state",name:"active",required:!1,type:{name:"boolean"}},id:{defaultValue:null,description:"id to pass to the button",name:"id",required:!1,type:{name:"string"}},marginRight:{defaultValue:null,description:"adds 8px margin to the right",name:"marginRight",required:!1,type:{name:"boolean"}},marginLeft:{defaultValue:null,description:"adds 8px margin to the left",name:"marginLeft",required:!1,type:{name:"boolean"}},ariaLabeledBy:{defaultValue:null,description:"element id to describe the button accordingly",name:"ariaLabeledBy",required:!1,type:{name:"string"}},ariaLabel:{defaultValue:null,description:"aria label to provide important when providing only Icon",name:"ariaLabel",required:!1,type:{name:"string"}},ariaHasPopup:{defaultValue:null,description:"aria for a button popup",name:"ariaHasPopup",required:!1,type:{name:'boolean | "grid" | "listbox" | "menu" | "tree" | "dialog" | "false" | "true"'}},ariaExpanded:{defaultValue:null,description:"aria to be set if the popup is open",name:"ariaExpanded",required:!1,type:{name:"boolean"}},ariaControls:{defaultValue:null,description:"aria controls - receives id for the controlled region",name:"ariaControls",required:!1,type:{name:"string"}},"aria-describedby":{defaultValue:null,description:"",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-hidden":{defaultValue:null,description:"aria to be used for screen reader to know if the button is hidden",name:"aria-hidden",required:!1,type:{name:"Booleanish"}},"aria-pressed":{defaultValue:null,description:'Indicates the current "pressed" state of toggle buttons',name:"aria-pressed",required:!1,type:{name:'boolean | "false" | "true" | "mixed"'}},onFocus:{defaultValue:null,description:"On Button Focus callback",name:"onFocus",required:!1,type:{name:"(event: FocusEvent<HTMLButtonElement, Element>) => void"}},onBlur:{defaultValue:null,description:"On Button Blur callback",name:"onBlur",required:!1,type:{name:"(event: FocusEvent<HTMLButtonElement, Element>) => void"}},rightFlat:{defaultValue:null,description:"",name:"rightFlat",required:!1,type:{name:"boolean"}},leftFlat:{defaultValue:null,description:"",name:"leftFlat",required:!1,type:{name:"boolean"}},preventClickAnimation:{defaultValue:null,description:"",name:"preventClickAnimation",required:!1,type:{name:"boolean"}},noSidePadding:{defaultValue:null,description:"",name:"noSidePadding",required:!1,type:{name:"boolean"}},defaultTextColorOnPrimaryColor:{defaultValue:null,description:"default color for text color in ON_PRIMARY_COLOR kind (should be any type of css color (rbg, var, hex...)",name:"defaultTextColorOnPrimaryColor",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},insetFocus:{defaultValue:null,description:"Change the focus indicator from around the button to within it",name:"insetFocus",required:!1,type:{name:"boolean"}},tabIndex:{defaultValue:null,description:"Specifies the tab order of an element",name:"tabIndex",required:!1,type:{name:"number"}}}}}catch{}var O=(e=>(e.NORMAL="normal",e.POSITIVE="positive",e.NEGATIVE="negative",e.WARNING="warning",e.DARK="dark",e))(O||{}),M=(e=>(e.LINK="link",e.BUTTON="button",e))(M||{});const E={normal:A,positive:Q,negative:Y,warning:X,dark:A},de=(e,n)=>n&&typeof n=="object"?n:n||E[e]?i.jsx(Z,{iconType:n?"font":"svg",icon:n||E[e],iconSize:20,ignoreFocusStyle:!0}):null,ce="_toast_1jwtn_1",pe="_typeNormal_1jwtn_21",me="_typePositive_1jwtn_24",fe="_typeNegative_1jwtn_27",ye="_typeWarning_1jwtn_30",he="_closeButton_1jwtn_34",be="_actionButton_1jwtn_37",ge="_actionLink_1jwtn_38",_e="_typeDark_1jwtn_42",qe="_icon_1jwtn_55",Ve="_withTransition_1jwtn_60",ve="_bounceIn_1jwtn_1",Te="_content_1jwtn_67",ke="_textContent_1jwtn_72",xe="_enterActive_1jwtn_77",Ie="_slideIn_1jwtn_1",Ce="_exitActive_1jwtn_85",Ne="_slideOut_1jwtn_1",o={toast:ce,typeNormal:pe,typePositive:me,typeNegative:fe,typeWarning:ye,closeButton:he,actionButton:be,actionLink:ge,typeDark:_e,icon:qe,withTransition:Ve,bounceIn:ve,content:Te,textContent:ke,enterActive:xe,slideIn:Ie,exitActive:Ce,slideOut:Ne},V=({open:e=!1,loading:n=!1,autoHideDuration:s=null,type:r="normal",icon:f,hideIcon:P=!1,action:v,actions:a,children:T,closeable:F=!0,onClose:d=ee,className:k,id:x,closeButtonAriaLabel:R="Close","data-testid":D})=>{const I=l.useRef(null),C=l.useRef(null),y=ae(a==null?void 0:a.length),z=l.useMemo(()=>a?a.filter(t=>t.type==="link").map(({type:t,...u})=>i.jsx(_,{className:o.actionLink,...u},u.href)):null,[a]),N=l.useMemo(()=>y!==void 0&&(a==null?void 0:a.length)!==y,[a,y]),w=l.useMemo(()=>a?a.filter(t=>t.type==="button").map(({type:t,content:u,...g},W)=>i.jsx(q,{className:c(o.actionButton,{[o.withTransition]:N}),...g,children:u},`alert-button-${W}`)):null,[a,N]),H=l.useMemo(()=>c(o.toast,te(o,ie("type-"+r)),k),[r,k]),h=l.useCallback(()=>{d&&d()},[d]),b=l.useRef(),L=l.useCallback(t=>{!d||t==null||(clearTimeout(b.current),b.current=setTimeout(()=>{h()},t))},[h,d]);l.useEffect(()=>(e&&s>0&&L(s),()=>{clearTimeout(b.current)}),[e,s,L]);const B=!P&&de(r,f),S=l.useCallback(t=>{const u=t.style.width;t.style.width="auto";const g=getComputedStyle(t).width;t.style.width=u,t.offsetWidth,t.style.width=g},[]);return l.useEffect(()=>{I.current&&S(I.current)},[T,S]),i.jsx(le,{in:e,nodeRef:C,classNames:{enterActive:o.enterActive,exitActive:o.exitActive},timeout:400,unmountOnExit:!0,children:i.jsxs(U,{ref:C,id:x,"data-testid":D||p(m.TOAST,x),type:"text2",element:"div",color:"fixedLight",className:H,role:"alert","aria-live":"polite",children:[B&&i.jsx("div",{className:c(o.icon),children:B}),i.jsxs(j,{align:"center",gap:"large",className:o.content,children:[i.jsxs(j,{gap:"medium","data-testid":p(m.TOAST_CONTENT),className:o.textContent,children:[i.jsx("span",{children:T}),z]}),(w||v)&&(w||v),n&&i.jsx(K,{size:"xs"})]}),F&&i.jsx(ne,{className:c(o.closeButton),onClick:h,size:"small",kind:"tertiary",color:"fixed-light",ariaLabel:R,"data-testid":p(m.TOAST_CLOSE_BUTTON),icon:oe,hideTooltip:!0})]})})},Xe=se(V,{types:O,actionTypes:M});try{V.displayName="Toast",V.__docgenInfo={description:"",displayName:"Toast",props:{actions:{defaultValue:null,description:"The actions available in the toast.",name:"actions",required:!1,type:{name:"ToastAction[]"}},open:{defaultValue:{value:"false"},description:"If true, the toast is open (visible).",name:"open",required:!1,type:{name:"boolean"}},loading:{defaultValue:{value:"false"},description:"If true, displays a loading indicator inside the toast.",name:"loading",required:!1,type:{name:"boolean"}},type:{defaultValue:{value:"normal"},description:"The type of toast.",name:"type",required:!1,type:{name:"ToastType"}},icon:{defaultValue:null,description:"The icon displayed in the toast.",name:"icon",required:!1,type:{name:"string | FC<IconSubComponentProps>"}},hideIcon:{defaultValue:{value:"false"},description:"If true, hides the toast icon.",name:"hideIcon",required:!1,type:{name:"boolean"}},action:{defaultValue:null,description:"The action element displayed in the toast.",name:"action",required:!1,type:{name:"Element"}},closeable:{defaultValue:{value:"true"},description:"If false, hides the close button.",name:"closeable",required:!1,type:{name:"boolean"}},onClose:{defaultValue:null,description:"Callback fired when the toast is closed.",name:"onClose",required:!1,type:{name:"() => void"}},autoHideDuration:{defaultValue:{value:"null"},description:`The number of milliseconds before the toast automatically closes.
(0 or null disables auto-close behavior).`,name:"autoHideDuration",required:!1,type:{name:"number"}},children:{defaultValue:null,description:"The content displayed inside the toast.",name:"children",required:!1,type:{name:"string | ReactElement<any, string | JSXElementConstructor<any>> | ReactElement<any, string | JSXElementConstructor<any>>[]"}},closeButtonAriaLabel:{defaultValue:{value:"Close"},description:"The aria-label for the close button.",name:"closeButtonAriaLabel",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}export{Xe as T,q as a,_ as b};
