import{R as t,r as p}from"./index-Hemj67b4.js";import{c as u}from"./index-BpvXyOxN.js";import{u as z}from"./useMergeRef-DQ4XPFxl.js";import{g as T,b as y}from"./test-ids-utils-9ISiqDto.js";import{b as a}from"./DialogConstants-DkeX1sw_.js";import{a as S,w as I}from"./withStaticProps-DfSG2La2.js";import{C}from"./Counter-0LlraMu9.js";import{g as f}from"./typesciptCssModulesHelper-Ji7rRrZn.js";import{c as D}from"./camelCase-B8c2Dc7Y.js";var v=(e=>(e.INDICATOR="indicator",e.COUNTER="counter",e))(v||{}),h=(e=>(e[e.TOP_START=a.TOP_START]="TOP_START",e[e.TOP_END=a.TOP_END]="TOP_END",e[e.BOTTOM_START=a.BOTTOM_START]="BOTTOM_START",e[e.BOTTOM_END=a.BOTTOM_END]="BOTTOM_END",e))(h||{}),g=(e=>(e.RECTANGULAR="rectangular",e.OUTSIDE="outside",e.CIRCULAR="circular",e))(g||{});const M="_indicator_ux5y0_1",x="_primary_ux5y0_6",A="_notification_ux5y0_9",_={indicator:M,primary:x,notification:A};var b=(e=>(e.PRIMARY="primary",e.NOTIFICATION="notification",e))(b||{});const s=({color:e="notification",className:r,id:i,"data-testid":o})=>t.createElement("div",{className:u(_.indicator,_[e],r),"data-testid":o||T(y.INDICATOR,i)}),L=S(s,{colors:b});try{s.displayName="Indicator",s.__docgenInfo={description:"",displayName:"Indicator",props:{color:{defaultValue:{value:"notification"},description:"The color of the indicator.",name:"color",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"notification"'}]}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const w="_badgeWrapper_1hzzf_1",P="_badge_1hzzf_1",k="_outside_1hzzf_9",W="_topEnd_1hzzf_13",B="_rectangular_1hzzf_13",U="_circular_1hzzf_23",H="_topStart_1hzzf_28",$="_bottomEnd_1hzzf_43",F="_bottomStart_1hzzf_58",n={badgeWrapper:w,badge:P,outside:k,topEnd:W,rectangular:B,circular:U,topStart:H,bottomEnd:$,bottomStart:F},d=p.forwardRef(({type:e="indicator",anchor:r="top-end",alignment:i="rectangular",className:o,id:c,"data-testid":N,children:E,...l},q)=>{const O=p.useRef(null),R=z(q,O),V=u(n.badge,f(n,D(r)),f(n,i)),m=l.color||e==="indicator"?"notification":"negative";return t.createElement("div",{ref:R,className:u(n.badgeWrapper,o),id:c},E,t.createElement("div",{className:V,"data-testid":N||T(y.BADGE,c)},e==="indicator"?t.createElement(L,{color:m,...l}):e==="counter"&&t.createElement(C,{color:m,...l})))}),te=I(d,{types:v,alignments:g,anchors:h});try{d.displayName="Badge",d.__docgenInfo={description:"",displayName:"Badge",props:{anchor:{defaultValue:{value:"top-end"},description:"The position of the badge relative to its parent.",name:"anchor",required:!1,type:{name:"enum",value:[{value:'"top-start"'},{value:'"top-end"'},{value:'"bottom-start"'},{value:'"bottom-end"'}]}},alignment:{defaultValue:{value:"rectangular"},description:"The alignment style of the badge.",name:"alignment",required:!1,type:{name:"enum",value:[{value:'"rectangular"'},{value:'"outside"'},{value:'"circular"'}]}},children:{defaultValue:null,description:"The content the badge is attached to.",name:"children",required:!0,type:{name:"ReactNode"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}},type:{defaultValue:{value:"indicator"},description:'The type of badge, set to `"counter"` for numeric values.\nThe type of badge, set to `"indicator"` for a simple dot.',name:"type",required:!1,type:{name:"enum",value:[{value:'"counter"'},{value:'"indicator"'}]}},ariaLabeledBy:{defaultValue:null,description:"The ID of the element describing the counter.",name:"ariaLabeledBy",required:!1,type:{name:"string"}},counterClassName:{defaultValue:null,description:"Class name applied to the counter element.",name:"counterClassName",required:!1,type:{name:"string"}},count:{defaultValue:null,description:"The numeric value displayed in the counter.",name:"count",required:!1,type:{name:"number"}},ariaLabel:{defaultValue:null,description:"The label of the counter for accessibility.",name:"ariaLabel",required:!1,type:{name:"string"}},size:{defaultValue:null,description:"The size of the counter.",name:"size",required:!1,type:{name:"enum",value:[{value:'"xs"'},{value:'"small"'},{value:'"large"'}]}},kind:{defaultValue:null,description:"The visual style of the counter.",name:"kind",required:!1,type:{name:"enum",value:[{value:'"fill"'},{value:'"line"'}]}},color:{defaultValue:null,description:`The color of the counter.
The color of the indicator.`,name:"color",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"dark"'},{value:'"negative"'},{value:'"light"'},{value:'"notification"'}]}},maxDigits:{defaultValue:null,description:"The maximum number of digits displayed before truncation.",name:"maxDigits",required:!1,type:{name:"number"}},prefix:{defaultValue:null,description:"Text prepended to the counter value.",name:"prefix",required:!1,type:{name:"string"}},onMouseDown:{defaultValue:null,description:"Callback fired when the counter is clicked.",name:"onMouseDown",required:!1,type:{name:"(event: MouseEvent<HTMLSpanElement, MouseEvent>) => void"}},noAnimation:{defaultValue:null,description:"If true, disables counter animations.",name:"noAnimation",required:!1,type:{name:"boolean"}}}}}catch{}export{te as B};
