import{r as f}from"./index-CTZeEbLr.js";import{u as v}from"./index-DEnqPy1V.js";import{i as b}from"./ssr-utils-Do6V6AqB.js";const g="ctrlOrMetaKey";var c=(e=>(e.ALT="altKey",e.META="metaKey",e.CTRL="ctrlKey",e.SHIFT="shiftKey",e.CTRL_OR_META="ctrlOrMetaKey",e))(c||{});const E=(e,t)=>t==="ctrlOrMetaKey"?e.ctrlKey||e.metaKey:e[t],K=e=>!Object.values(r.modifiers).some(t=>{if(t!==g)return!!e[t]});function r({keys:e=[],callback:t,modifier:l,withoutAnyModifier:s,ref:i,ignoreDocumentFallback:d=!1,capture:p=!1,preventDefault:o=!1,stopPropagation:u=!1,keyEventName:y="keydown"}){const m=f.useRef(b()?document.body:null),k=f.useCallback(a=>{const{key:h}=a;e.includes(h)&&(l&&!E(a,l)||s&&!K(a)||(o&&a.preventDefault(),u&&a.stopPropagation(),t(a)))},[e,l,s,o,u,t]);let n;i?n=i:d?n=null:n=m,v({eventName:y,callback:k,ref:n,capture:p})}r.modifiers=c;try{r.displayName="useKeyEvent",r.__docgenInfo={description:"",displayName:"useKeyEvent",props:{keys:{defaultValue:{value:"[]"},description:"The list of keys that should trigger the event.",name:"keys",required:!1,type:{name:"string[]"}},callback:{defaultValue:null,description:"Callback fired when a specified key is pressed.",name:"callback",required:!0,type:{name:"GenericEventCallback"}},modifier:{defaultValue:null,description:"Modifier key that must be pressed along with the specified key.",name:"modifier",required:!1,type:{name:"Modifier"}},keyEventName:{defaultValue:{value:"keydown"},description:'The keyboard event type to listen for (e.g., "keydown", "keyup").',name:"keyEventName",required:!1,type:{name:"string"}},withoutAnyModifier:{defaultValue:null,description:"If true, ensures no modifier keys are pressed when handling the event.",name:"withoutAnyModifier",required:!1,type:{name:"boolean"}},ref:{defaultValue:null,description:"The element reference to listen for key events on.",name:"ref",required:!1,type:{name:"RefObject<HTMLElement | Document>"}},ignoreDocumentFallback:{defaultValue:{value:"false"},description:"If true, prevents fallback to listening on the document when no ref is provided.",name:"ignoreDocumentFallback",required:!1,type:{name:"boolean"}},capture:{defaultValue:{value:"false"},description:"If true, uses capture phase instead of bubbling phase for event listening.",name:"capture",required:!1,type:{name:"boolean"}},preventDefault:{defaultValue:{value:"false"},description:"If true, calls `preventDefault` on the key event.",name:"preventDefault",required:!1,type:{name:"boolean"}},stopPropagation:{defaultValue:{value:"false"},description:"If true, calls `stopPropagation` on the key event.",name:"stopPropagation",required:!1,type:{name:"boolean"}}}}}catch{}export{r as u};
