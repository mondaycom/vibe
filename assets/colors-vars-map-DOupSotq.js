const n=[{color:"--primary-color",description:"Use to emphasise main ui components"},{color:"--primary-on-secondary-color",description:"Use to emphasise main ui components on secondary background color"},{color:"--primary-hover-color",description:"Use only as a hover on primary color"},{color:"--primary-hover-on-secondary-color",description:"Use only as a hover on primary color on secondary background color"},{color:"--primary-selected-color",description:"Use to indicate selected state of primary items"},{color:"--primary-selected-hover-color",description:"Use to indicate hover state on a primary-selected-color items"},{color:"--primary-highlighted-color",description:"Use this to indicate highlighted components of primary items"},{color:"--primary-surface-color",description:"Use this as the surface of the main layout appearance"},{color:"--primary-selected-on-secondary-color",description:"Use to indicate selected state of primary items on secondary background color"},{color:"--primary-text-color",description:"Use for default text color"},{color:"--primary-text-on-secondary-color",description:"Use for default text color on secondary background color"},{color:"--secondary-text-color",description:"Use when you need text with lesser importance"},{color:"--secondary-text-on-secondary-color",description:"Use when you need text with lesser importance (on secondary background color)"},{color:"--primary-background-hover-color",description:"Use as hover color"},{color:"--primary-background-hover-on-secondary-color",description:"Use as hover color on secondary color"},{color:"--inverted-color-background",description:"Inverted background color (opposite of primary background color)"},{color:"--text-color-on-inverted",description:"Inverted text color (opposite of primary text color)"},{color:"--text-color-on-primary",description:"Use for text on primary color"},{color:"--fixed-light-color",description:"Use as color that should remain light in all themes"},{color:"--fixed-dark-color",description:"Use as color that should remain dark in all themes"},{color:"--positive-color",description:"Use to indicate a positive action/state (success, completion, approval...)"},{color:"--positive-color-hover",description:"Use only as hover color on positive color"},{color:"--positive-color-selected",description:"Use only as selected indication for a positive colors"},{color:"--positive-color-selected-hover",description:"Use to indicate hover state on a positive-color-selected items"},{color:"--negative-color",description:"Use to indicate a negative action/state (delete, error...)"},{color:"--negative-color-hover",description:"Use only as hover color on negative color"},{color:"--negative-color-selected",description:"Use as selected indication for negative colors"},{color:"--negative-color-selected-hover",description:"Use to indicate hover state on a negative-selected items"},{color:"--warning-color",description:"Use to indicate a warning action/state (severity, alert, caution...)"},{color:"--warning-color-hover",description:"Use only as hover color on warning color"},{color:"--warning-color-selected",description:"Use as selected indication for warning colors"},{color:"--warning-color-selected-hover",description:"Use to indicate hover state on a warning-selected items"},{color:"--ui-border-color",description:"Border color for ui elements and components (Button, Input...)"},{color:"--ui-border-on-secondary-color",description:"Border color for ui elements on secondary color"},{color:"--layout-border-color",description:"Border color for general layout and separators (Leftpane, Menu Divider...)"},{color:"--layout-border-on-secondary-color",description:"Border color for general layout on secondary background color"},{color:"--placeholder-color",description:"Use for placeholder text in inputs fields"},{color:"--placeholder-on-secondary-color",description:"Use for placeholder text in inputs fields on secondary background color"},{color:"--icon-color",description:"Default color for icons"},{color:"--icon-on-secondary-color",description:"Default color for icons on secondary background color"},{color:"--disabled-background-color",description:"Use as background for disabled elements (ui hovers or elements)"},{color:"--disabled-text-color",description:"Use as text in disabled components"},{color:"--disabled-background-on-secondary-color",description:"Use as background for disabled elements on secondary background"},{color:"--disabled-text-on-secondary-color",description:"Use as text in disabled components on secondary background color"},{color:"--link-color",description:"Use only for links"},{color:"--link-on-secondary-color",description:"Use only for links on secondary colors"},{color:"--primary-background-color",description:"Primary background color"},{color:"--secondary-background-color",description:"Secondary background color"},{color:"--grey-background-color",description:"Grey background color"},{color:"--allgrey-background-color",description:"Grey background color, stays grey in dark and black themes"},{color:"--ui-background-color",description:"Background color for UI elements and components"}],d=n.reduce((o,r)=>{const s=r.color.substring(2);return o.set(s,r.description),o},new Map),t=["grass_green","done-green","bright-green","saladish","egg_yolk","working_orange","dark-orange","peach","sunset","stuck-red","dark-red","sofia_pink","lipstick","bubble","purple","dark_purple","berry","dark_indigo","indigo","navy","bright-blue","dark-blue","aquamarine","chili-blue","river","winter","explosive","american_gray","blackish","brown","orchid","tan","sky","coffee","royal","teal","lavender","steel","lilac","pecan"];var a=(o=>(o.REGULAR="regular",o.HOVER="hover",o.SELECTED="selected",o))(a||{}),e=(o=>(o.GRASS_GREEN="grass_green",o.DONE_GREEN="done-green",o.BRIGHT_GREEN="bright-green",o.SALADISH="saladish",o.EGG_YOLK="egg_yolk",o.WORKING_ORANGE="working_orange",o.DARK_ORANGE="dark-orange",o.PEACH="peach",o.SUNSET="sunset",o.STUCK_RED="stuck-red",o.DARK_RED="dark-red",o.SOFIA_PINK="sofia_pink",o.LIPSTICK="lipstick",o.BUBBLE="bubble",o.PURPLE="purple",o.DARK_PURPLE="dark_purple",o.BERRY="berry",o.DARK_INDIGO="dark_indigo",o.INDIGO="indigo",o.NAVY="navy",o.BRIGHT_BLUE="bright-blue",o.DARK_BLUE="dark-blue",o.AQUAMARINE="aquamarine",o.CHILI_BLUE="chili-blue",o.RIVER="river",o.WINTER="winter",o.EXPLOSIVE="explosive",o.AMERICAN_GRAY="american_gray",o.BLACKISH="blackish",o.BROWN="brown",o.ORCHID="orchid",o.TAN="tan",o.SKY="sky",o.COFFEE="coffee",o.ROYAL="royal",o.TEAL="teal",o.LAVENDER="lavender",o.STEEL="steel",o.LILAC="lilac",o.PECAN="pecan",o))(e||{}),c=(o=>(o.POSITIVE="positive",o.NEGATIVE="negative",o.PRIMARY="primary",o.WARNING="warning",o))(c||{}),i=(o=>(o.POSITIVE="positive",o.NEGATIVE="negative",o.PRIMARY="primary",o))(i||{});const l={...e,...c,...i};Object.values(l).reduce((o,r)=>(o[r]=r,o),{});export{a as C,l as E,e as a,d as b,t as c};
