import{j as c}from"./jsx-runtime-DDzbWKUH.js";import{r as x}from"./index-Hemj67b4.js";import{c as f}from"./index-BpvXyOxN.js";import{g as _}from"./typesciptCssModulesHelper-Ji7rRrZn.js";import{a as v,T as h,c as y}from"./TypographyConstants-DtEuvn5Z.js";import{c as g}from"./camelCase-CO1PkVrH.js";import{w as T}from"./withStaticProps-DfSG2La2.js";var n=(e=>(e.TEXT1="text1",e.TEXT2="text2",e.TEXT3="text3",e))(n||{}),o=(e=>(e.BOLD="bold",e.MEDIUM="medium",e.NORMAL="normal",e))(o||{});const N="_text1Bold_105nu_1",q="_text1Medium_105nu_5",w="_text1Normal_105nu_9",M="_text2Bold_105nu_13",V="_text2Medium_105nu_17",b="_text2Normal_105nu_21",B="_text3Bold_105nu_25",E="_text3Medium_105nu_29",L="_text3Normal_105nu_33",P="_text_105nu_1",l={text1Bold:N,text1Medium:q,text1Normal:w,text2Bold:M,text2Medium:V,text2Normal:b,text3Bold:B,text3Medium:E,text3Normal:L,text:P},t=x.forwardRef(({className:e,type:r="text2",weight:i="normal",ellipsis:u,element:a="div",children:s,...d},m)=>{const p=u??a!=="p";return c.jsx(y,{ref:m,className:f(l.text,_(l,g(r+"-"+i)),e),ellipsis:p,element:a,...d,children:s})}),X=T(t,{types:n,weights:o,colors:h,align:v});try{t.displayName="Text",t.__docgenInfo={description:"",displayName:"Text",props:{type:{defaultValue:{value:"text2"},description:"The text style variant.",name:"type",required:!1,type:{name:"enum",value:[{value:'"text1"'},{value:'"text2"'},{value:'"text3"'}]}},weight:{defaultValue:{value:"normal"},description:"The font weight of the text.",name:"weight",required:!1,type:{name:"enum",value:[{value:'"bold"'},{value:'"medium"'},{value:'"normal"'}]}},children:{defaultValue:null,description:"The content inside the text component.",name:"children",required:!0,type:{name:"ReactNode"}},element:{defaultValue:{value:"div"},description:"The HTML element tag used for the text component.",name:"element",required:!1,type:{name:"string"}},color:{defaultValue:null,description:"The text color.",name:"color",required:!1,type:{name:"enum",value:[{value:'"inherit"'},{value:'"primary"'},{value:'"negative"'},{value:'"secondary"'},{value:'"onPrimary"'},{value:'"onInverted"'},{value:'"fixedLight"'},{value:'"fixedDark"'}]}},align:{defaultValue:null,description:"The text alignment.",name:"align",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"start"'},{value:'"end"'},{value:'"inherit"'}]}},ellipsis:{defaultValue:null,description:"If true, truncates overflowing text with an ellipsis.",name:"ellipsis",required:!1,type:{name:"boolean"}},maxLines:{defaultValue:null,description:"The maximum number of lines before truncating with an ellipsis.",name:"maxLines",required:!1,type:{name:"number"}},tooltipProps:{defaultValue:null,description:"Props passed to the tooltip displayed when hovering over the text.",name:"tooltipProps",required:!1,type:{name:"Partial<TooltipProps>"}},withoutTooltip:{defaultValue:null,description:"If true, disables the tooltip that appears when text is truncated.",name:"withoutTooltip",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}export{X as T,o as a,n as b};
