import{j as n}from"./jsx-runtime-lwGtIXvq.js";import{c as v}from"./index-BpvXyOxN.js";import{r}from"./index-CTZeEbLr.js";import{u as H}from"./useMergeRef-C008K4k9.js";import{D as ne}from"./DialogContentContainer-CyLYKep7.js";import{c as R,C as K}from"./colors-vars-map-DOupSotq.js";import{S as M,a as w}from"./sizes-BOsbvv4u.js";import{u as $,a as ie,G as se}from"./useGridKeyboardNavigation-BxWlzq0Q.js";import{B as ce}from"./Button-lmknnYep.js";import{N as F}from"./function-utils-CSFuT5hl.js";import{g as de}from"./typesciptCssModulesHelper-oFWQo8l_.js";import{C as L}from"./colors-utils-C1Q1nqOD.js";import{I as ue}from"./Icon-B1P6-uxB.js";import{T as pe}from"./Tooltip-Cf28_m_C.js";import{C as me}from"./Clickable-HM5W4vbd.js";import{g as Z,b as fe,a as ye,C as he}from"./test-ids-utils-CSfXomCJ.js";import{c as Ce}from"./camelCase-CO1PkVrH.js";import{o as Q}from"./Workspace-DtDO7RvQ.js";import{w as J}from"./withStaticProps-DfSG2La2.js";function Ie(e,o){const a=new Set(o);return e.filter(t=>!a.has(t))}function ge(e,o){const a=new Set(o);return e.filter(t=>a.has(t))}const X=5,ke={[M.SMALL]:24,[M.MEDIUM]:32,[M.LARGE]:40},_e=8,Se=24;var D=(e=>(e.SQUARE="square",e.CIRCLE="circle",e))(D||{});const Y=(e,o)=>o*(ke[e]+_e),be=(e,o)=>Y(e,o)+Se,qe="_clearColorIcon_147e1_1",Ve="_clearColorButton_147e1_5",j={clearColorIcon:qe,clearColorButton:Ve},A=r.forwardRef(({onClick:e,text:o,Icon:a},t)=>{const{onSelectionAction:i}=$({ref:t,itemsCount:1,numberOfItemsInLine:1,onItemClicked:e,getItemByIndex:F});return n.jsxs(ce,{ref:t,size:"small",kind:"tertiary",onClick:()=>i(-1),blurOnMouseUp:!1,className:j.clearColorButton,children:[n.jsx(a,{size:"16",className:j.clearColorIcon}),o||"Clear"]})});try{A.displayName="ColorPickerClearButton",A.__docgenInfo={description:"",displayName:"ColorPickerClearButton",props:{onClick:{defaultValue:null,description:"Callback fired when the clear button is clicked.",name:"onClick",required:!0,type:{name:"() => void"}},text:{defaultValue:null,description:"The text displayed inside the button.",name:"text",required:!1,type:{name:"string"}},Icon:{defaultValue:null,description:"The icon displayed inside the button.",name:"Icon",required:!0,type:{name:"SubIcon"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const ve="_itemWrapper_1ky99_1",Te="_circle_1ky99_1",we="_feedbackIndicator_1ky99_14",Ne="_active_1ky99_22",Pe="_selectedColor_1ky99_51",xe="_colorItem_1ky99_61",Me="_colorIndicatorWrapper_1ky99_70",Le="_colorItemSizeSmall_1ky99_74",Re="_colorItemSizeMedium_1ky99_79",Ae="_colorItemSizeLarge_1ky99_84",Oe="_colorItemTextMode_1ky99_108",ze="_colorIconWhite_1ky99_112",m={itemWrapper:ve,circle:Te,feedbackIndicator:we,active:Ne,selectedColor:Pe,colorItem:xe,colorIndicatorWrapper:Me,colorItemSizeSmall:Le,colorItemSizeMedium:Re,colorItemSizeLarge:Ae,colorItemTextMode:Oe,colorIconWhite:ze},O=r.forwardRef(({color:e,onColorClicked:o,colorStyle:a="regular",shouldRenderIndicatorWithoutBackground:t,ColorIndicatorIcon:i,SelectedIndicatorIcon:h=i,isSelected:d,colorSize:S,tooltipContent:b,isActive:C,colorShape:u,"data-testid":I},g)=>{const c=r.useMemo(()=>R.includes(e),[e]),p=c?L.getMondayColorAsStyle(e,a):e,s=r.useRef(null),q=r.useCallback(()=>o(e),[o,e]);r.useEffect(()=>{if(!(s!=null&&s.current)||t||!c)return;const l=s.current,f=y=>{a==="selected"?y.target.style.background=L.getMondayColorAsStyle(e,"regular"):y.target.style.background=L.getMondayColorAsStyle(e,"hover")},V=y=>{y.target.style.background=p};return l.addEventListener("mouseenter",f,!1),l.addEventListener("mouseleave",V,!1),()=>{l.removeEventListener("mouseenter",f,!1),l.removeEventListener("mouseleave",V,!1)}},[e,p,a,c,s,t]);const k=d||i,_=t?{color:p}:{};return n.jsx(pe,{content:b,children:n.jsxs("li",{className:v(m.itemWrapper,{[m.selectedColor]:d,[m.active]:C,[m.circle]:u==="circle"}),"data-testid":I||Z(fe.COLOR_PICKER_ITEM,e),children:[n.jsx("div",{className:v(m.feedbackIndicator)}),n.jsx(me,{ref:s,ariaLabel:e,className:v(m.colorItem,de(m,Ce("color-item-size-"+S)),{[m.colorItemTextMode]:t}),style:{background:t?"transparent":p},onClick:q,tabIndex:"-1",onMouseDown:l=>l.preventDefault(),children:n.jsx("div",{className:v(m.colorIndicatorWrapper),style:_,children:k&&n.jsx(ue,{icon:d?h:i,className:v({[m.colorIconWhite]:!t}),ignoreFocusStyle:!0})})})]})})});try{O.displayName="ColorPickerItemComponent",O.__docgenInfo={description:"",displayName:"ColorPickerItemComponent",props:{color:{defaultValue:null,description:"The color value of the item.",name:"color",required:!0,type:{name:"string"}},onColorClicked:{defaultValue:null,description:"Callback fired when the color is clicked.",name:"onColorClicked",required:!0,type:{name:"(color: string) => void"}},colorStyle:{defaultValue:{value:"regular"},description:"The style applied to the color.",name:"colorStyle",required:!1,type:{name:"ColorStyle"}},shouldRenderIndicatorWithoutBackground:{defaultValue:null,description:"If true, renders the color indicator without a background.",name:"shouldRenderIndicatorWithoutBackground",required:!0,type:{name:"boolean"}},ColorIndicatorIcon:{defaultValue:null,description:"Icon displayed inside the color item.",name:"ColorIndicatorIcon",required:!0,type:{name:"SubIcon"}},SelectedIndicatorIcon:{defaultValue:null,description:"Icon displayed when the color is selected.",name:"SelectedIndicatorIcon",required:!0,type:{name:"SubIcon"}},isSelected:{defaultValue:null,description:"If true, the color is marked as selected.",name:"isSelected",required:!0,type:{name:"boolean"}},colorSize:{defaultValue:null,description:"The size of the color item.",name:"colorSize",required:!0,type:{name:"ColorPickerSizes"}},tooltipContent:{defaultValue:null,description:"Tooltip content for the color item.",name:"tooltipContent",required:!0,type:{name:"ElementContent"}},isActive:{defaultValue:null,description:"If true, the color item is currently active.",name:"isActive",required:!0,type:{name:"boolean"}},colorShape:{defaultValue:null,description:"The shape of the color item.",name:"colorShape",required:!0,type:{name:"ColorShapes"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const Be="_colorsGrid_1u0za_1",Ee={colorsGrid:Be},De=e=>e.replace(/-|_/g," ").replace(/(?:^|\s)\S/g,function(o){return o.toUpperCase()}),We=(e,o)=>o&&o[e]?o[e]:De(e),z=r.forwardRef(({onColorClicked:e,colorsToRender:o,numberOfColorsInLine:a,focusOnMount:t,value:i,colorStyle:h,ColorIndicatorIcon:d,shouldRenderIndicatorWithoutBackground:S,SelectedIndicatorIcon:b,colorSize:C,tooltipContentByColor:u,colorShape:I,showColorNameTooltip:g,id:c,"data-testid":p},s)=>{const q=r.useCallback(l=>o[l],[o]),{activeIndex:k,onSelectionAction:_}=$({focusOnMount:t,ref:s,onItemClicked:e,itemsCount:o.length,numberOfItemsInLine:a,entryFocusStrategy:"first",getItemByIndex:q});return n.jsx("ul",{className:Ee.colorsGrid,ref:s,tabIndex:0,id:c,"data-testid":p,role:"grid",children:o.map((l,f)=>n.jsx(O,{color:l,onColorClicked:()=>_(f),shouldRenderIndicatorWithoutBackground:d&&S,colorStyle:h,ColorIndicatorIcon:d,SelectedIndicatorIcon:b,isSelected:Array.isArray(i)?i.includes(l):i===l,isActive:f===k,colorSize:C,tooltipContent:g?We(l,u):void 0,colorShape:I},l))})});try{z.displayName="ColorPickerColorsGrid",z.__docgenInfo={description:"",displayName:"ColorPickerColorsGrid",props:{onColorClicked:{defaultValue:null,description:"Callback fired when a color is clicked.",name:"onColorClicked",required:!1,type:{name:"(color: string) => void"}},colorsToRender:{defaultValue:null,description:"The list of colors to be displayed.",name:"colorsToRender",required:!1,type:{name:"ColorPickerArrayValueOnly"}},ColorIndicatorIcon:{defaultValue:null,description:"Icon displayed as an indicator inside the color.",name:"ColorIndicatorIcon",required:!1,type:{name:"SubIcon"}},SelectedIndicatorIcon:{defaultValue:null,description:"Icon displayed when a color is selected.",name:"SelectedIndicatorIcon",required:!1,type:{name:"SubIcon"}},colorStyle:{defaultValue:null,description:"The style applied to the colors.",name:"colorStyle",required:!1,type:{name:"ColorStyle"}},value:{defaultValue:null,description:"The currently selected color or colors.",name:"value",required:!1,type:{name:"string | string[]"}},shouldRenderIndicatorWithoutBackground:{defaultValue:null,description:"If true, renders the color indicator without a background.",name:"shouldRenderIndicatorWithoutBackground",required:!1,type:{name:"boolean"}},colorSize:{defaultValue:null,description:"The size of the color items.",name:"colorSize",required:!1,type:{name:"ColorPickerSizes"}},numberOfColorsInLine:{defaultValue:null,description:"The number of colors per row.",name:"numberOfColorsInLine",required:!1,type:{name:"number"}},tooltipContentByColor:{defaultValue:null,description:"Custom tooltip content for specific colors.",name:"tooltipContentByColor",required:!1,type:{name:'Partial<Record<"grass_green" | "done-green" | "bright-green" | "saladish" | "egg_yolk" | "working_orange" | "dark-orange" | "peach" | "sunset" | "stuck-red" | "dark-red" | "sofia_pink" | ... 27 more ... | "pecan", string> & Record<...>>'}},focusOnMount:{defaultValue:null,description:"If true, the first color is focused when the component mounts.",name:"focusOnMount",required:!1,type:{name:"boolean"}},colorShape:{defaultValue:null,description:"The shape of the color items.",name:"colorShape",required:!1,type:{name:"ColorShapes"}},showColorNameTooltip:{defaultValue:null,description:"If true, displays a tooltip with the color name.",name:"showColorNameTooltip",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const B=r.forwardRef(({className:e,onValueChange:o,value:a,noColorText:t,colorStyle:i="regular",ColorIndicatorIcon:h,SelectedIndicatorIcon:d,shouldRenderIndicatorWithoutBackground:S,NoColorIcon:b=Q,isBlackListMode:C=!0,colorsList:u,isMultiselect:I,colorSize:g=w.MEDIUM,numberOfColorsInLine:c=X,tooltipContentByColor:p={},focusOnMount:s,colorShape:q="square",forceUseRawColorList:k,showColorNameTooltip:_,id:l,"data-testid":f},V)=>{const y=r.useRef(null),x=H(V,y),N=r.useRef(null),W=r.useRef(null),ee=r.useCallback(()=>{o(null)},[o]),oe=r.useMemo(()=>k?u:C?Ie(R,u):ge(R,u),[k,C,u]),te=r.useCallback(P=>{if(!I){o([P]);return}const T=[...a];if(T.includes(P)){const U=T.indexOf(P);U>-1&&T.splice(U,1)}else T.push(P);o(T)},[I,o,a]),re=r.useMemo(()=>[{topElement:N,bottomElement:W}],[]),le=ie(re,y),ae=Y(g,c);return n.jsx("div",{className:e,style:{width:ae},ref:x,tabIndex:-1,children:n.jsxs(se.Provider,{value:le,children:[n.jsx(z,{ref:N,onColorClicked:te,colorsToRender:oe,numberOfColorsInLine:c,focusOnMount:s,value:a,colorStyle:i,ColorIndicatorIcon:h,shouldRenderIndicatorWithoutBackground:S,SelectedIndicatorIcon:d,colorSize:g,tooltipContentByColor:p,colorShape:q,showColorNameTooltip:_,id:l,"data-testid":f}),t&&n.jsx(A,{Icon:b,onClick:ee,text:t,ref:W})]})})}),Ue=J(B,{sizes:w,colorStyles:K,colorSizes:w,colorShapes:D});try{B.displayName="ColorPickerContent",B.__docgenInfo={description:"",displayName:"ColorPickerContent",props:{value:{defaultValue:null,description:"The selected color(s).",name:"value",required:!0,type:{name:"ColorPickerValue"}},onValueChange:{defaultValue:null,description:"Callback fired when the selected color(s) change.",name:"onValueChange",required:!0,type:{name:"(value: ColorPickerArrayValueOnly) => void"}},colorsList:{defaultValue:null,description:"The list of colors available for selection.",name:"colorsList",required:!0,type:{name:"ColorPickerArrayValueOnly"}},ColorIndicatorIcon:{defaultValue:null,description:"Icon displayed as an indicator inside the color.",name:"ColorIndicatorIcon",required:!1,type:{name:"SubIcon"}},SelectedIndicatorIcon:{defaultValue:null,description:"Icon displayed when a color is selected.",name:"SelectedIndicatorIcon",required:!1,type:{name:"SubIcon"}},NoColorIcon:{defaultValue:null,description:"Icon used for clearing the color selection.",name:"NoColorIcon",required:!1,type:{name:"SubIcon"}},colorStyle:{defaultValue:{value:"regular"},description:"The style applied to the colors.",name:"colorStyle",required:!1,type:{name:"ColorStyle"}},colorSize:{defaultValue:{value:"BaseSizes.MEDIUM"},description:"The size of the color items.",name:"colorSize",required:!1,type:{name:"ColorPickerSizes"}},colorShape:{defaultValue:{value:"square"},description:"The shape of the color items.",name:"colorShape",required:!1,type:{name:"ColorShapes"}},tooltipContentByColor:{defaultValue:{value:"{}"},description:"Custom tooltip content for specific colors.",name:"tooltipContentByColor",required:!1,type:{name:'Partial<Record<"grass_green" | "done-green" | "bright-green" | "saladish" | "egg_yolk" | "working_orange" | "dark-orange" | "peach" | "sunset" | "stuck-red" | "dark-red" | "sofia_pink" | ... 27 more ... | "pecan", string>>'}},noColorText:{defaultValue:null,description:'Text displayed for the "no color" option.',name:"noColorText",required:!1,type:{name:"string"}},shouldRenderIndicatorWithoutBackground:{defaultValue:null,description:"If true, renders the color indicator without a background.",name:"shouldRenderIndicatorWithoutBackground",required:!1,type:{name:"boolean"}},isBlackListMode:{defaultValue:{value:"true"},description:"If true, treats the color list as a blacklist rather than a whitelist.",name:"isBlackListMode",required:!1,type:{name:"boolean"}},numberOfColorsInLine:{defaultValue:{value:"5"},description:"The number of colors displayed per row.",name:"numberOfColorsInLine",required:!1,type:{name:"number"}},focusOnMount:{defaultValue:null,description:"If true, the first color is focused when the component mounts.",name:"focusOnMount",required:!1,type:{name:"boolean"}},isMultiselect:{defaultValue:null,description:"If true, allows selecting multiple colors.",name:"isMultiselect",required:!1,type:{name:"boolean"}},forceUseRawColorList:{defaultValue:null,description:`Used to force the component render the colorList prop as is. Usually, this flag should not be used. It's intended only for edge cases.
Usually, only "monday colors" will be rendered (unless blacklist mode is used). This flag will override this behavior.`,name:"forceUseRawColorList",required:!1,type:{name:"boolean"}},showColorNameTooltip:{defaultValue:null,description:`Used to enable color name tooltip on each color in the component.
When "tooltipContentByColor" is supplied, it will override the color name tooltip.`,name:"showColorNameTooltip",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const je="_colorPicker_1tzys_1",Ge="_colorPickerDialogContent_1tzys_1",G={colorPicker:je,colorPickerDialogContent:Ge},E=r.forwardRef(({className:e,onSave:o=F,value:a="",noColorText:t,colorStyle:i="regular",ColorIndicatorIcon:h,SelectedIndicatorIcon:d,shouldRenderIndicatorWithoutBackground:S,NoColorIcon:b=Q,isBlackListMode:C=!0,colorsList:u=[],isMultiselect:I,colorSize:g="medium",numberOfColorsInLine:c=X,focusOnMount:p,colorShape:s="square",forceUseRawColorList:q,showColorNameTooltip:k,id:_,"data-testid":l},f)=>{const V=r.useRef(null),y=H(f,V),x=r.useCallback(o,[o]),N=be(g,c);return n.jsx(ne,{ref:y,className:v(G.colorPicker,G.colorPickerDialogContent,e),ariaLabelledby:"Color Picker Dialog",ariaDescribedby:"Pick color",style:{width:N},"data-vibe":ye.COLOR_PICKER,children:n.jsx(Ue,{onValueChange:x,value:a,noColorText:t,shouldRenderIndicatorWithoutBackground:h&&S,colorStyle:i,ColorIndicatorIcon:h,SelectedIndicatorIcon:d,NoColorIcon:b,colorsList:u,isBlackListMode:C,isMultiselect:I,colorSize:g,numberOfColorsInLine:c,focusOnMount:p,colorShape:s,forceUseRawColorList:q,showColorNameTooltip:k,id:_,"data-testid":l||Z(he.COLOR_PICKER,_)})})}),uo=J(E,{sizes:w,colorStyles:K,colorSizes:w,colorShapes:D});try{E.displayName="ColorPicker",E.__docgenInfo={description:"",displayName:"ColorPicker",props:{value:{defaultValue:{value:""},description:"The selected color(s).",name:"value",required:!1,type:{name:"ColorPickerValue"}},onSave:{defaultValue:null,description:"Callback fired when the selected color(s) change.",name:"onSave",required:!1,type:{name:"(value: ColorPickerArrayValueOnly) => void"}},ColorIndicatorIcon:{defaultValue:null,description:"Icon displayed as an indicator inside the color.",name:"ColorIndicatorIcon",required:!1,type:{name:"SubIcon"}},SelectedIndicatorIcon:{defaultValue:null,description:"Icon displayed when a color is selected.",name:"SelectedIndicatorIcon",required:!1,type:{name:"SubIcon"}},NoColorIcon:{defaultValue:null,description:"Icon used for clearing the color selection.",name:"NoColorIcon",required:!1,type:{name:"SubIcon"}},colorStyle:{defaultValue:{value:"regular"},description:"The style applied to the colors.",name:"colorStyle",required:!1,type:{name:"ColorStyle"}},noColorText:{defaultValue:null,description:'Text displayed for the "no color" option.',name:"noColorText",required:!1,type:{name:"string"}},shouldRenderIndicatorWithoutBackground:{defaultValue:null,description:"If true, renders the color indicator without a background.",name:"shouldRenderIndicatorWithoutBackground",required:!1,type:{name:"boolean"}},isBlackListMode:{defaultValue:{value:"true"},description:"If true, treats the color list as a blacklist rather than a whitelist.",name:"isBlackListMode",required:!1,type:{name:"boolean"}},colorsList:{defaultValue:{value:"[]"},description:"The list of colors available for selection.",name:"colorsList",required:!1,type:{name:"ColorPickerArrayValueOnly"}},isMultiselect:{defaultValue:null,description:"If true, allows selecting multiple colors.",name:"isMultiselect",required:!1,type:{name:"boolean"}},colorSize:{defaultValue:{value:"medium"},description:"The size of the color items.",name:"colorSize",required:!1,type:{name:"ColorPickerSizes"}},numberOfColorsInLine:{defaultValue:{value:"5"},description:"The number of colors displayed per row.",name:"numberOfColorsInLine",required:!1,type:{name:"number"}},focusOnMount:{defaultValue:null,description:"If true, the first color is focused when the component mounts.",name:"focusOnMount",required:!1,type:{name:"boolean"}},colorShape:{defaultValue:{value:"square"},description:"The shape of the color items.",name:"colorShape",required:!1,type:{name:"ColorShapes"}},forceUseRawColorList:{defaultValue:null,description:`Used to force the component render the colorList prop as is. Usually, this flag should not be used. It's intended only for edge cases.
Usually, only "monday colors" will be rendered (unless blacklist mode is used). This flag will override this behavior.`,name:"forceUseRawColorList",required:!1,type:{name:"boolean"}},showColorNameTooltip:{defaultValue:null,description:`Used to enable color name tooltip on each color in the component.
When "tooltipContentByColor" is supplied, it will override the color name tooltip.`,name:"showColorNameTooltip",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}export{uo as C,Ue as a};
