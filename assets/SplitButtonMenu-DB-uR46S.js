import{j as t}from"./jsx-runtime-DDzbWKUH.js";import{g as L}from"./typesciptCssModulesHelper-Ji7rRrZn.js";import{a as de,g as I,C as S}from"./test-ids-utils-CSfXomCJ.js";import{c as ce}from"./index-BpvXyOxN.js";import{r as e}from"./index-Hemj67b4.js";import{H as d,A as me}from"./DialogConstants-DkeX1sw_.js";import{k as pe,N as w}from"./function-utils-6EQ2u6TA.js";import{i as fe,D as ye}from"./Tooltip-DiBx-E2V.js";import{u as be}from"./index-8zVcErkr.js";import{u}from"./index-DLqmmtYJ.js";import{B as s}from"./Button-DzRUwOMA.js";import{D as E}from"./DialogContentContainer-CdyJHsIx.js";import{a as ge}from"./withStaticProps-DfSG2La2.js";import{c as F}from"./camelCase-B8c2Dc7Y.js";import{r as ve}from"./DropdownChevronDown-hX_A7Og1.js";import{u as he}from"./useMergeRef-DQ4XPFxl.js";import{M as _e}from"./useMenuItemKeyboardEvents-DnwWw7xX.js";const Te={main:8,secondary:0},Ce=[d.CLICK],H=[d.CLICK_OUTSIDE,d.CLICK,d.ESCAPE_KEY],Ve="monday-style-split-button__secondary-button-wrapper",Be=[pe.ENTER],O={BOTTOM:"bottom",BOTTOM_START:"bottom-start",BOTTOM_END:"bottom-end"},z={BOTTOM_START:O.BOTTOM_START,BOTTOM_MIDDLE:O.BOTTOM,BOTTOM_END:O.BOTTOM_END},qe="additional actions",Ie="_button_s2r1f_1",Se="_mainButton_s2r1f_7",Oe="_secondaryButton_s2r1f_11",Ee="_secondaryButtonWrapper_s2r1f_15",Ne="_secondaryButtonIconWrapper_s2r1f_15",ke="_active_s2r1f_20",xe="_disabled_s2r1f_24",Ae="_kindTertiary_s2r1f_29",Me="_colorPrimary_s2r1f_29",De="_mainActive_s2r1f_29",Pe="_splitContentOpen_s2r1f_45",Re="_hovered_s2r1f_47",Le="_colorBrand_s2r1f_52",we="_colorPositive_s2r1f_67",Fe="_colorNegative_s2r1f_80",He="_kindPrimary_s2r1f_98",ze="_colorOnPrimaryColor_s2r1f_133",Ue="_kindSecondary_s2r1f_138",a={button:Ie,mainButton:Se,secondaryButton:Oe,secondaryButtonWrapper:Ee,secondaryButtonIconWrapper:Ne,active:ke,disabled:xe,kindTertiary:Ae,colorPrimary:Me,mainActive:De,splitContentOpen:Pe,hovered:Re,colorBrand:Le,colorPositive:we,colorNegative:Fe,kindPrimary:He,colorOnPrimaryColor:ze,kindSecondary:Ue},N=({secondaryDialogContent:n,onSecondaryDialogDidShow:c=w,onSecondaryDialogDidHide:m=w,shouldCloseOnClickInsideDialog:p,zIndex:C=null,secondaryDialogClassName:W="",secondaryDialogPosition:f="bottom-start",dialogContainerSelector:j,dialogPaddingSize:k="medium",disabled:o,success:We,loading:Y,kind:y="primary",color:b="primary",className:x,leftIcon:G,rightIcon:K,onClick:X,children:J,marginLeft:$,marginRight:Q,active:V,id:g,"data-testid":Z,...A})=>{const[v,h]=e.useState(!1),[M,_]=e.useState(!1),[D,r]=e.useState(!1),i=e.useRef(null),P=e.useRef(null),B=e.useCallback(()=>_(!0),[_]),q=e.useCallback(()=>_(!1),[_]),T=e.useCallback(l=>o?!1:!fe(l.target,Ve),[o]),ee=e.useCallback(l=>{T(l)&&r(!0)},[r,T]),R=e.useCallback(()=>r(!1),[r]),ae=e.useCallback(l=>{T(l)&&r(!0)},[r,T]),te=e.useCallback(()=>{h(!0),c()},[h,c]),ne=e.useCallback((l,ue)=>{h(!1),m(),ue==="esckey"&&P.current.focus()},[h,m]);u({eventName:"mouseenter",callback:B,ref:i}),u({eventName:"mouseleave",callback:q,ref:i}),u({eventName:"mousedown",callback:ee,ref:i}),u({eventName:"mouseup",callback:R,ref:i}),u({eventName:"transitionend",callback:R,ref:i}),be({keys:Be,ref:i,callback:ae});const oe=e.useMemo(()=>ce(a.button,L(a,F("kind-"+y)),L(a,F("color-"+b)),{[a.mainActive]:V,[a.active]:D,[a.splitContentOpen]:v,[a.hovered]:M,[a.disabled]:o},x),[x,y,b,V,D,v,M,o]),le=e.useMemo(()=>o?[]:Ce,[o]),ie=e.useMemo(()=>p?[...H,d.CONTENT_CLICK]:H,[p]),re=e.useCallback(()=>{const l=typeof n=="function"?n():n;return t.jsx(E,{type:E.types.POPOVER,size:k,children:l})},[n,k]),se=e.useMemo(()=>f==="bottom"?"":f==="bottom-start"?"bottom":"top",[f]);return t.jsxs("div",{className:oe,ref:i,id:g,"data-testid":Z||I(S.SPLIT_BUTTON,g),"data-vibe":de.SPLIT_BUTTON,children:[t.jsx(s,{...A,preventClickAnimation:!0,leftIcon:G,rightIcon:K,rightFlat:!0,color:b,kind:y,active:V,onClick:X,className:a.mainButton,marginLeft:$,onFocus:B,onBlur:q,disabled:o,loading:Y,"data-testid":I(S.SPLIT_BUTTON_PRIMARY_BUTTON,g),children:J}),t.jsx("div",{className:a.secondaryButtonWrapper,children:t.jsx(ye,{wrapperClassName:W,zIndex:C,content:re,position:f,containerSelector:j,startingEdge:se,animationType:me.EXPAND,moveBy:Te,onDialogDidShow:te,onDialogDidHide:ne,showTrigger:le,hideTrigger:ie,children:t.jsx(s,{...A,ref:P,preventClickAnimation:!0,leftFlat:!0,noSidePadding:!0,color:b,kind:y,className:a.secondaryButton,active:v,marginRight:Q,onFocus:B,onBlur:q,disabled:o,ariaLabel:qe,ariaHasPopup:!0,ariaExpanded:v,"data-testid":I(S.SPLIT_BUTTON_SECONDARY_BUTTON,g),children:t.jsx("div",{className:a.secondaryButtonIconWrapper,children:t.jsx(ve,{"aria-hidden":"true"})})})})})]})},sa=ge(N,{secondaryPositions:z,secondaryDialogPositions:z,sizes:s.sizes,colors:s.colors,kinds:s.kinds,inputTags:s.inputTags,dialogPaddingSizes:E.sizes});try{N.displayName="SplitButton",N.__docgenInfo={description:"",displayName:"SplitButton",props:{secondaryDialogContent:{defaultValue:null,description:"The element or renderer that is displayed inside the dialog opened by clicking the secondary button.",name:"secondaryDialogContent",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>> | (() => string | ReactElement<any, string | JSXElementConstructor<any>>)"}},onSecondaryDialogDidShow:{defaultValue:null,description:"Callback fired when the secondary dialog is shown.",name:"onSecondaryDialogDidShow",required:!1,type:{name:"() => void"}},onSecondaryDialogDidHide:{defaultValue:null,description:"Callback fired when the secondary dialog is hidden.",name:"onSecondaryDialogDidHide",required:!1,type:{name:"() => void"}},zIndex:{defaultValue:{value:"null"},description:"The z-index applied to the secondary dialog.",name:"zIndex",required:!1,type:{name:"number"}},secondaryDialogClassName:{defaultValue:{value:""},description:"Class name applied to the wrapper of the secondary dialog.",name:"secondaryDialogClassName",required:!1,type:{name:"string"}},secondaryDialogPosition:{defaultValue:{value:"bottom-start"},description:"The position of the secondary dialog.",name:"secondaryDialogPosition",required:!1,type:{name:"enum",value:[{value:'"bottom-start"'},{value:'"bottom-end"'},{value:'"bottom"'}]}},dialogPaddingSize:{defaultValue:{value:"medium"},description:"The padding size inside the secondary dialog.",name:"dialogPaddingSize",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"large"'},{value:'"none"'},{value:'"medium"'}]}},dialogContainerSelector:{defaultValue:null,description:"The CSS selector of the container where the dialog should be rendered.",name:"dialogContainerSelector",required:!1,type:{name:"string"}},shouldCloseOnClickInsideDialog:{defaultValue:null,description:"If true, clicking inside the dialog will close it.",name:"shouldCloseOnClickInsideDialog",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"Custom class names to pass to the component",name:"className",required:!1,type:{name:"string"}},activeButtonClassName:{defaultValue:null,description:"",name:"activeButtonClassName",required:!1,type:{name:"string"}},kind:{defaultValue:{value:"primary"},description:"The button's kind",name:"kind",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"tertiary"'}]}},onClick:{defaultValue:null,description:"Callback function to run when the button is clicked",name:"onClick",required:!1,type:{name:"(event: MouseEvent<HTMLButtonElement, MouseEvent>) => void"}},onMouseDown:{defaultValue:null,description:"",name:"onMouseDown",required:!1,type:{name:"(event: MouseEvent<HTMLButtonElement, MouseEvent>) => void"}},blurOnMouseUp:{defaultValue:null,description:"Blur on button click",name:"blurOnMouseUp",required:!1,type:{name:"boolean"}},name:{defaultValue:null,description:"Name of the button - for form submit usages",name:"name",required:!1,type:{name:"string"}},size:{defaultValue:null,description:"The button's size",name:"size",required:!1,type:{name:"enum",value:[{value:'"xs"'},{value:'"small"'},{value:'"large"'},{value:'"medium"'},{value:'"xxs"'}]}},color:{defaultValue:{value:"primary"},description:"The button's color",name:"color",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"positive"'},{value:'"negative"'},{value:'"inverted"'},{value:'"on-primary-color"'},{value:'"on-inverted-background"'},{value:'"brand"'},{value:'"fixed-light"'},{value:'"fixed-dark"'}]}},type:{defaultValue:null,description:"The button's type",name:"type",required:!1,type:{name:"enum",value:[{value:'"button"'},{value:'"submit"'},{value:'"reset"'}]}},disabled:{defaultValue:null,description:"Whether the button should be disabled or not",name:"disabled",required:!1,type:{name:"boolean"}},rightIcon:{defaultValue:null,description:"Icon to place on the right",name:"rightIcon",required:!1,type:{name:"SubIcon"}},leftIcon:{defaultValue:null,description:"Icon to place on the left",name:"leftIcon",required:!1,type:{name:"SubIcon"}},success:{defaultValue:null,description:"the success props are used when you have async action and wants to display a success message",name:"success",required:!1,type:{name:"boolean"}},successIcon:{defaultValue:null,description:"Success icon name",name:"successIcon",required:!1,type:{name:"SubIcon"}},successText:{defaultValue:null,description:"Success text",name:"successText",required:!1,type:{name:"string"}},loading:{defaultValue:null,description:"loading boolean which switches the text to a loader",name:"loading",required:!1,type:{name:"boolean"}},loaderClassName:{defaultValue:null,description:"className which is applied to loader container *",name:"loaderClassName",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},active:{defaultValue:null,description:"displays the active state",name:"active",required:!1,type:{name:"boolean"}},id:{defaultValue:null,description:"id to pass to the button",name:"id",required:!1,type:{name:"string"}},marginRight:{defaultValue:null,description:"adds 8px margin to the right",name:"marginRight",required:!1,type:{name:"boolean"}},marginLeft:{defaultValue:null,description:"adds 8px margin to the left",name:"marginLeft",required:!1,type:{name:"boolean"}},ariaLabeledBy:{defaultValue:null,description:"element id to describe the button accordingly",name:"ariaLabeledBy",required:!1,type:{name:"string"}},ariaLabel:{defaultValue:null,description:"aria label to provide important when providing only Icon",name:"ariaLabel",required:!1,type:{name:"string"}},ariaHasPopup:{defaultValue:null,description:"aria for a button popup",name:"ariaHasPopup",required:!1,type:{name:'boolean | "dialog" | "menu" | "true" | "false" | "grid" | "listbox" | "tree"'}},ariaExpanded:{defaultValue:null,description:"aria to be set if the popup is open",name:"ariaExpanded",required:!1,type:{name:"boolean"}},ariaControls:{defaultValue:null,description:"aria controls - receives id for the controlled region",name:"ariaControls",required:!1,type:{name:"string"}},"aria-describedby":{defaultValue:null,description:"",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-hidden":{defaultValue:null,description:"aria to be used for screen reader to know if the button is hidden",name:"aria-hidden",required:!1,type:{name:"Booleanish"}},"aria-pressed":{defaultValue:null,description:'Indicates the current "pressed" state of toggle buttons',name:"aria-pressed",required:!1,type:{name:'boolean | "true" | "false" | "mixed"'}},onFocus:{defaultValue:null,description:"On Button Focus callback",name:"onFocus",required:!1,type:{name:"(event: FocusEvent<HTMLButtonElement, Element>) => void"}},onBlur:{defaultValue:null,description:"On Button Blur callback",name:"onBlur",required:!1,type:{name:"(event: FocusEvent<HTMLButtonElement, Element>) => void"}},rightFlat:{defaultValue:null,description:"",name:"rightFlat",required:!1,type:{name:"boolean"}},leftFlat:{defaultValue:null,description:"",name:"leftFlat",required:!1,type:{name:"boolean"}},preventClickAnimation:{defaultValue:null,description:"",name:"preventClickAnimation",required:!1,type:{name:"boolean"}},noSidePadding:{defaultValue:null,description:"",name:"noSidePadding",required:!1,type:{name:"boolean"}},defaultTextColorOnPrimaryColor:{defaultValue:null,description:"default color for text color in ON_PRIMARY_COLOR kind (should be any type of css color (rbg, var, hex...)",name:"defaultTextColorOnPrimaryColor",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},insetFocus:{defaultValue:null,description:"Change the focus indicator from around the button to within it",name:"insetFocus",required:!1,type:{name:"boolean"}},tabIndex:{defaultValue:null,description:"Specifies the tab order of an element",name:"tabIndex",required:!1,type:{name:"number"}}}}}catch{}const U=e.forwardRef(({children:n,...c},m)=>{const p=e.useRef(null),C=he(m,p);return t.jsx(_e,{focusItemIndexOnMount:0,...c,ref:C,children:n})});try{U.displayName="SplitButtonMenu",U.__docgenInfo={description:"",displayName:"SplitButtonMenu",props:{children:{defaultValue:null,description:"The menu items.",name:"children",required:!1,type:{name:"ElementContent & ReactNode"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},onClose:{defaultValue:null,description:"Callback triggered when the menu closes.",name:"onClose",required:!1,type:{name:"(option: CloseMenuOption) => void"}},ariaLabel:{defaultValue:null,description:"ARIA label for accessibility.",name:"ariaLabel",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},size:{defaultValue:null,description:"Size of the menu.",name:"size",required:!1,type:{name:"enum",value:[{value:'"xs"'},{value:'"small"'},{value:'"large"'},{value:'"medium"'},{value:'"xxs"'}]}},tabIndex:{defaultValue:null,description:"The tab index of the menu.",name:"tabIndex",required:!1,type:{name:"number"}},ariaDescribedBy:{defaultValue:null,description:"ARIA description ID.",name:"ariaDescribedBy",required:!1,type:{name:"string"}},useDocumentEventListeners:{defaultValue:null,description:"If true, event listeners will be attached to the document.",name:"useDocumentEventListeners",required:!1,type:{name:"boolean"}},shouldScrollMenu:{defaultValue:null,description:"If true, enables scrolling within the menu.",name:"shouldScrollMenu",required:!1,type:{name:"boolean"}},focusOnMount:{defaultValue:null,description:"If true, the menu will automatically focus on mount.",name:"focusOnMount",required:!1,type:{name:"boolean"}},onItemFocus:{defaultValue:null,description:"Callback when a menu item gains focus.",name:"onItemFocus",required:!1,type:{name:"(index: number) => void"}},isVisible:{defaultValue:null,description:"Controls the visibility of the menu.",name:"isVisible",required:!1,type:{name:"boolean"}},focusItemIndex:{defaultValue:null,description:"Index of the focused menu item.",name:"focusItemIndex",required:!1,type:{name:"number"}},isSubMenu:{defaultValue:null,description:"If true, this menu is a submenu.",name:"isSubMenu",required:!1,type:{name:"boolean"}}}}}catch{}export{U as S,sa as a};
