import{j as i}from"./jsx-runtime-lwGtIXvq.js";import{r as o}from"./index-CTZeEbLr.js";import{c as b}from"./index-BpvXyOxN.js";import{g as W}from"./typesciptCssModulesHelper-Ji7rRrZn.js";import{u as j}from"./index-BxdhJjph.js";import{u as G}from"./useMergeRef-Do2VYePL.js";import{T as H}from"./Tooltip-CT7Hoq9W.js";import{i as z}from"./isNil-CHIgUVhi.js";import{B as v}from"./Button-qCqhHc1O.js";import{a as U,g as Y,b as $}from"./test-ids-utils-B1IbFLmr.js";import{c as J}from"./camelCase-CO1PkVrH.js";import{w as K}from"./withStaticProps-DfSG2La2.js";const Q="_buttonGroup_1c97w_1",X="_subTextContainer_1c97w_6",Z="_buttonsContainer_1c97w_12",ee="_fullWidth_1c97w_17",te="_button_1c97w_1",ae="_activeButton_1c97w_27",ne="_disabled_1c97w_36",le="_buttonDisabled_1c97w_36",oe="_startBorder_1c97w_41",ie="_endBorder_1c97w_44",re="_kindTertiary_1c97w_51",se="_optionText_1c97w_58",ue="_selected_1c97w_62",de="_wrapper_1c97w_66",t={buttonGroup:Q,subTextContainer:X,buttonsContainer:Z,fullWidth:ee,button:te,activeButton:ae,disabled:ne,buttonDisabled:le,startBorder:oe,endBorder:ie,kindTertiary:re,optionText:se,selected:ue,wrapper:de},_=({tooltipContent:r,tooltipPosition:a,tooltipHideDelay:m,tooltipShowDelay:n,tooltipContainerSelector:l,tooltipMoveBy:d,fullWidth:c,className:h,...y})=>{const s=i.jsx(v,{...y,className:h});return z(r)?c?i.jsx("div",{className:t.fullWidth,children:s}):s:i.jsx(H,{moveBy:d,position:a,hideDelay:m,showDelay:n,content:r,showTrigger:["mouseenter"],hideTrigger:["mouseleave"],containerSelector:l,referenceWrapperClassName:c?t.fullWidth:void 0,children:s})};try{_.displayName="ButtonWrapper",_.__docgenInfo={description:"",displayName:"ButtonWrapper",props:{tooltipContent:{defaultValue:null,description:"The content of the tooltip.",name:"tooltipContent",required:!1,type:{name:"string"}},tooltipPosition:{defaultValue:null,description:"The position of the tooltip relative to the button.",name:"tooltipPosition",required:!1,type:{name:"TooltipPositions"}},tooltipHideDelay:{defaultValue:null,description:"The delay in milliseconds before the tooltip hides.",name:"tooltipHideDelay",required:!1,type:{name:"number"}},tooltipShowDelay:{defaultValue:null,description:"The delay in milliseconds before the tooltip shows.",name:"tooltipShowDelay",required:!1,type:{name:"number"}},tooltipContainerSelector:{defaultValue:null,description:"CSS selector for the tooltip container.",name:"tooltipContainerSelector",required:!1,type:{name:"string"}},tooltipMoveBy:{defaultValue:null,description:"Adjusts the tooltip position.",name:"tooltipMoveBy",required:!1,type:{name:"MoveBy"}},fullWidth:{defaultValue:null,description:"If true, makes the button take the full width of its container.",name:"fullWidth",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"Custom class names to pass to the component",name:"className",required:!1,type:{name:"string"}},activeButtonClassName:{defaultValue:null,description:"",name:"activeButtonClassName",required:!1,type:{name:"string"}},kind:{defaultValue:null,description:"The button's kind",name:"kind",required:!1,type:{name:"ButtonType"}},onClick:{defaultValue:null,description:"Callback function to run when the button is clicked",name:"onClick",required:!1,type:{name:"(event: MouseEvent<HTMLButtonElement, MouseEvent>) => void"}},onMouseDown:{defaultValue:null,description:"",name:"onMouseDown",required:!1,type:{name:"(event: MouseEvent<HTMLButtonElement, MouseEvent>) => void"}},blurOnMouseUp:{defaultValue:null,description:"Blur on button click",name:"blurOnMouseUp",required:!1,type:{name:"boolean"}},name:{defaultValue:null,description:"Name of the button - for form submit usages",name:"name",required:!1,type:{name:"string"}},size:{defaultValue:null,description:"The button's size",name:"size",required:!1,type:{name:"ButtonSize"}},color:{defaultValue:null,description:"The button's color",name:"color",required:!1,type:{name:"ButtonColor"}},type:{defaultValue:null,description:"The button's type",name:"type",required:!1,type:{name:"ButtonInputType"}},disabled:{defaultValue:null,description:"Whether the button should be disabled or not",name:"disabled",required:!1,type:{name:"boolean"}},rightIcon:{defaultValue:null,description:"Icon to place on the right",name:"rightIcon",required:!1,type:{name:"SubIcon"}},leftIcon:{defaultValue:null,description:"Icon to place on the left",name:"leftIcon",required:!1,type:{name:"SubIcon"}},success:{defaultValue:null,description:"the success props are used when you have async action and wants to display a success message",name:"success",required:!1,type:{name:"boolean"}},successIcon:{defaultValue:null,description:"Success icon name",name:"successIcon",required:!1,type:{name:"SubIcon"}},successText:{defaultValue:null,description:"Success text",name:"successText",required:!1,type:{name:"string"}},loading:{defaultValue:null,description:"loading boolean which switches the text to a loader",name:"loading",required:!1,type:{name:"boolean"}},loaderClassName:{defaultValue:null,description:"className which is applied to loader container *",name:"loaderClassName",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},active:{defaultValue:null,description:"displays the active state",name:"active",required:!1,type:{name:"boolean"}},id:{defaultValue:null,description:"id to pass to the button",name:"id",required:!1,type:{name:"string"}},marginRight:{defaultValue:null,description:"adds 8px margin to the right",name:"marginRight",required:!1,type:{name:"boolean"}},marginLeft:{defaultValue:null,description:"adds 8px margin to the left",name:"marginLeft",required:!1,type:{name:"boolean"}},ariaLabeledBy:{defaultValue:null,description:"element id to describe the button accordingly",name:"ariaLabeledBy",required:!1,type:{name:"string"}},ariaLabel:{defaultValue:null,description:"aria label to provide important when providing only Icon",name:"ariaLabel",required:!1,type:{name:"string"}},ariaHasPopup:{defaultValue:null,description:"aria for a button popup",name:"ariaHasPopup",required:!1,type:{name:'boolean | "true" | "false" | "dialog" | "grid" | "listbox" | "menu" | "tree"'}},ariaExpanded:{defaultValue:null,description:"aria to be set if the popup is open",name:"ariaExpanded",required:!1,type:{name:"boolean"}},ariaControls:{defaultValue:null,description:"aria controls - receives id for the controlled region",name:"ariaControls",required:!1,type:{name:"string"}},"aria-describedby":{defaultValue:null,description:"",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-hidden":{defaultValue:null,description:"aria to be used for screen reader to know if the button is hidden",name:"aria-hidden",required:!1,type:{name:"Booleanish"}},"aria-pressed":{defaultValue:null,description:'Indicates the current "pressed" state of toggle buttons',name:"aria-pressed",required:!1,type:{name:'boolean | "true" | "false" | "mixed"'}},onFocus:{defaultValue:null,description:"On Button Focus callback",name:"onFocus",required:!1,type:{name:"(event: FocusEvent<HTMLButtonElement, Element>) => void"}},onBlur:{defaultValue:null,description:"On Button Blur callback",name:"onBlur",required:!1,type:{name:"(event: FocusEvent<HTMLButtonElement, Element>) => void"}},rightFlat:{defaultValue:null,description:"",name:"rightFlat",required:!1,type:{name:"boolean"}},leftFlat:{defaultValue:null,description:"",name:"leftFlat",required:!1,type:{name:"boolean"}},preventClickAnimation:{defaultValue:null,description:"",name:"preventClickAnimation",required:!1,type:{name:"boolean"}},noSidePadding:{defaultValue:null,description:"",name:"noSidePadding",required:!1,type:{name:"boolean"}},defaultTextColorOnPrimaryColor:{defaultValue:null,description:"default color for text color in ON_PRIMARY_COLOR kind (should be any type of css color (rbg, var, hex...)",name:"defaultTextColorOnPrimaryColor",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},insetFocus:{defaultValue:null,description:"Change the focus indicator from around the button to within it",name:"insetFocus",required:!1,type:{name:"boolean"}},tabIndex:{defaultValue:null,description:"Specifies the tab order of an element",name:"tabIndex",required:!1,type:{name:"number"}}}}}catch{}const B=o.forwardRef(({className:r,options:a,name:m="",disabled:n=!1,value:l="",onSelect:d,size:c="small",kind:h="secondary",groupAriaLabel:y="",tooltipPosition:s,tooltipHideDelay:T,tooltipShowDelay:C,tooltipContainerSelector:w,tooltipMoveBy:x,blurOnMouseUp:k=!0,id:S,"data-testid":O,fullWidth:f=!1},D)=>{const E=o.useRef(),L=G(D,E),[p,g]=o.useState(l),I=j(l),N=o.useCallback(e=>{n||e.disabled||(g(e.value),d&&d(e.value,m))},[d,n,m]),V=e=>(e==null?void 0:e.value)===p,q=o.useMemo(()=>a.find(e=>V(e)),[a,p]),P=o.useMemo(()=>a.map((e,u)=>{const M=V(e),A=u===0,F=u===a.length-1,R=V(a[u+1]);return i.jsx(_,{size:c,onClick:()=>N(e),rightIcon:e.icon,leftIcon:e.leftIcon,active:M,rightFlat:u!==a.length-1,leftFlat:u!==0,kind:"tertiary",preventClickAnimation:!0,ariaLabel:e.ariaLabel,tooltipContent:e.tooltipContent,tooltipPosition:s,tooltipHideDelay:T,tooltipShowDelay:C,tooltipContainerSelector:w,tooltipMoveBy:x,blurOnMouseUp:k,fullWidth:f,className:b(t.button,t.optionText,{[t.selected]:M,[t.disabled]:n,[t.buttonDisabled]:e.disabled,[t.fullWidth]:f,[t.startBorder]:A,[t.endBorder]:F||!R}),activeButtonClassName:t.activeButton,children:e.text},e.value)}),[a,p,c,s,T,C,w,x,k,n,f,N]);return o.useEffect(()=>{l!==I&&l!==p&&g(l)},[l,I,p,g]),i.jsxs("div",{className:b(t.buttonGroup,r,W(t,J("kind-"+h)),{[t.disabled]:n}),id:S,"data-testid":O||Y($.BUTTON_GROUP,S),"data-vibe":U.BUTTON_GROUP,ref:L,children:[i.jsx("div",{role:"group","aria-label":y,className:b(t.buttonsContainer,{[t.fullWidth]:f}),"aria-disabled":n,children:P}),q&&q.subText&&i.jsx("div",{className:b(t.subTextContainer),children:q.subText})]})}),Be=K(B,{sizes:v.sizes,kinds:v.kinds});try{B.displayName="ButtonGroup",B.__docgenInfo={description:"",displayName:"ButtonGroup",props:{options:{defaultValue:null,description:"The list of button options.",name:"options",required:!0,type:{name:"ButtonGroupOption[]"}},value:{defaultValue:{value:""},description:"The currently selected button value.",name:"value",required:!1,type:{name:"ButtonValue"}},onSelect:{defaultValue:null,description:"Callback fired when a button is selected.",name:"onSelect",required:!1,type:{name:"(value: ButtonValue, name: string) => void"}},size:{defaultValue:{value:"small"},description:"The size of the buttons.",name:"size",required:!1,type:{name:"ButtonSize"}},kind:{defaultValue:{value:"secondary"},description:"The style variant of the buttons.",name:"kind",required:!1,type:{name:'"secondary" | "tertiary"'}},name:{defaultValue:{value:""},description:"The name of the button group.",name:"name",required:!1,type:{name:"string"}},disabled:{defaultValue:{value:"false"},description:"If true, disables all buttons in the group.",name:"disabled",required:!1,type:{name:"boolean"}},groupAriaLabel:{defaultValue:{value:""},description:"The label of the button group for accessibility.",name:"groupAriaLabel",required:!1,type:{name:"string"}},tooltipPosition:{defaultValue:null,description:"The position of the tooltip relative to the button.",name:"tooltipPosition",required:!1,type:{name:"TooltipPositions"}},tooltipHideDelay:{defaultValue:null,description:"The delay in milliseconds before the tooltip hides.",name:"tooltipHideDelay",required:!1,type:{name:"number"}},tooltipShowDelay:{defaultValue:null,description:"The delay in milliseconds before the tooltip shows.",name:"tooltipShowDelay",required:!1,type:{name:"number"}},tooltipContainerSelector:{defaultValue:null,description:"CSS selector for the tooltip container.",name:"tooltipContainerSelector",required:!1,type:{name:"string"}},tooltipMoveBy:{defaultValue:null,description:"Adjusts the tooltip position.",name:"tooltipMoveBy",required:!1,type:{name:"MoveBy"}},children:{defaultValue:null,description:"The content inside the button group.",name:"children",required:!1,type:{name:"ReactNode"}},fullWidth:{defaultValue:{value:"false"},description:"If true, makes the button group take the full width of its container.",name:"fullWidth",required:!1,type:{name:"boolean"}},blurOnMouseUp:{defaultValue:{value:"true"},description:"If true, removes focus from the button after clicking.",name:"blurOnMouseUp",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}export{Be as B};
