import{j as t}from"./jsx-runtime-DDzbWKUH.js";import{useMDXComponents as c}from"./index-CXa8ra7y.js";import{M as h,C as a}from"./index-CLdjdgwa.js";import{l}from"./tip-BKixvd9t.js";import{m as i}from"./storybook-link-D4TlKS6s.js";import{U as d,O as f}from"./useIsOverflowing.stories-DUdRDGbj.js";import{e as n,d as s}from"./function-arguments-cT2l_yKe.js";import{n as m}from"./link-ByEAMSgF.js";import"./index-Hemj67b4.js";import"./_commonjsHelpers-BosuxZz1.js";import"./iframe-Bno0Q8OD.js";import"./index-CfXdS76g.js";import"./index-D63y3F3s.js";import"./index-BedKbVpA.js";import"./index-DrFu-skq.js";import"./index-BpvXyOxN.js";import"./Flex-DaTSFknt.js";import"./withStaticProps-DibdfTK_.js";import"./_tslib-BMUU9Vyh.js";import"./useIsOverflowing-DshK7x5b.js";import"./debounce-D-uO1lYf.js";import"./isObject-C3e4t58V.js";import"./_baseGetTag-ENn7h-yl.js";import"./toNumber-CBHRrcgy.js";import"./isSymbol-DWIQbemu.js";import"./TextField-DlpwHETe.js";import"./index-CxHVRCQs.js";import"./noop-DX6rZLP_.js";import"./Icon-DLEZiRXL.js";import"./test-ids-utils-9ISiqDto.js";import"./useMergeRef-DQ4XPFxl.js";import"./useIsomorphicLayoutEffect-FdvxY73P.js";import"./ssr-utils-Do6V6AqB.js";import"./index-DLqmmtYJ.js";import"./index-8zVcErkr.js";import"./function-utils-6EQ2u6TA.js";import"./isArray-Dxzbedgu.js";import"./withStaticProps-DfSG2La2.js";import"./Loader-DRZxb8MF.js";import"./Text-H9hbjM9B.js";import"./typesciptCssModulesHelper-Ji7rRrZn.js";import"./TypographyConstants-DtTda49x.js";import"./Tooltip-XRyjLrpx.js";import"./index-NFRdg0hY.js";import"./index-8rJYV3Dp.js";import"./CSSTransition-usT7-fC7.js";import"./extends-B6xKY8K9.js";import"./camelCase-B8c2Dc7Y.js";import"./eq-DPGIUuQ3.js";import"./DialogConstants-DkeX1sw_.js";import"./Flex-2Q04fxOc.js";import"./Clickable-L_6z1d8K.js";import"./useClickableProps-BnhuEIMR.js";import"./FieldLabel-DI7ukpbU.js";import"./sizes-BOsbvv4u.js";import"./HiddenText-CdPxyfMy.js";const x=()=>t.jsxs(l,{title:"What to do when overflow is detected?",children:["You might want to use"," ",t.jsx(i,{size:i.sizes.SMALL,page:"Components/Tooltip",children:"Tooltip"})," ","to display all the content."]});function p(e){const o={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...c(),...e.components},{UsageGuidelines:r}=o;return r||j("UsageGuidelines"),t.jsxs(t.Fragment,{children:[t.jsx(h,{of:d}),`
`,t.jsx(o.h1,{id:"useisoverflowing",children:"useIsOverflowing"}),`
`,t.jsx(o.p,{children:"Use this hook, when there is a chance that content won't fit into the container, to track if overflow occurs."}),`
`,t.jsx(a,{of:f}),`
`,t.jsx(o.h3,{id:"import",children:"Import"}),`
`,t.jsx(o.pre,{children:t.jsx(o.code,{className:"language-js",children:`import { useIsOverflowing } from "@vibe/core/hooks";
`})}),`
`,t.jsx(o.h2,{id:"usage",children:"Usage"}),`
`,t.jsx(r,{guidelines:["Use this when content might not fit into it's container."]}),`
`,t.jsx(x,{}),`
`,t.jsx(o.h2,{id:"arguments",children:"Arguments"}),`
`,t.jsx(n,{children:t.jsx(s,{name:"ref",type:"React.MutableRefObject",description:t.jsxs(t.Fragment,{children:["A React",t.jsx(m,{size:m.sizes.MEDIUM,href:"https://react.dev/reference/react/useRef",children:"ref"}),"object for the container of likely to overflow content."]})})}),`
`,t.jsx(o.h2,{id:"returns",children:"Returns"}),`
`,t.jsx(n,{children:t.jsx(s,{name:"isOverflowing",type:"bool",description:t.jsx(t.Fragment,{children:"Is content overflow the container."})})})]})}function wt(e={}){const{wrapper:o}={...c(),...e.components};return o?t.jsx(o,{...e,children:t.jsx(p,{...e})}):p(e)}function j(e,o){throw new Error("Expected component `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}export{wt as default};
