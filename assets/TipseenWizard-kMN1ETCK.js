import{R as t,r as n}from"./index-Hemj67b4.js";import{c as i}from"./index-BpvXyOxN.js";import{S as ne}from"./Steps-Zdcw6jAs.js";import{g as V,b}from"./test-ids-utils-9ISiqDto.js";import{T as P}from"./Text-CBUmQ7si.js";import{H as ae,A as ie}from"./DialogConstants-DkeX1sw_.js";import{u as se}from"./useMergeRef-DQ4XPFxl.js";import{a as re,T as le}from"./Tooltip-CEg_DCyQ.js";import{I as oe}from"./IconButton-DqT-Lx4F.js";import{b as x}from"./Button-t0_MS1N7.js";import{a as de}from"./CloseSmall-CIab6kaf.js";import{w as pe}from"./withStaticProps-DfSG2La2.js";const ue="_title_ojk0n_1",me={title:ue},f=({text:e,className:a,id:s,"data-testid":o})=>e?t.createElement(P,{type:"text1",weight:"bold",role:"heading",color:"inherit","aria-level":3,maxLines:2,className:i(me.title,a),id:s,"data-testid":o||V(b.TIPSEEN_TITLE,s)},e):null;try{f.displayName="TipseenTitle",f.__docgenInfo={description:"",displayName:"TipseenTitle",props:{text:{defaultValue:null,description:"The title text displayed in the Tipseen.",name:"text",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const De="Submit",He="Dismiss",ce="Close";var w=(e=>(e.LIGHT="light",e.DARK="dark",e.FIXED_LIGHT="fixed-light",e.FIXED_DARK="fixed-dark",e))(w||{}),N=(e=>(e.PRIMARY="primary",e.INVERTED="inverted",e))(N||{});const fe="_tipseenWrapper_pkmfh_1",he="_tipseenWrapperWithoutCustomWidth_pkmfh_8",ye="_floating_pkmfh_11",Te="_tipseenHeader_pkmfh_18",ge="_tipseenTitle_pkmfh_22",ve="_tipseenContent_pkmfh_25",_e="_tipseenCloseButton_pkmfh_30",Ce="_dark_pkmfh_36",l={tipseenWrapper:fe,tipseenWrapperWithoutCustomWidth:he,floating:ye,tipseenHeader:Te,tipseenTitle:ge,tipseenContent:ve,tipseenCloseButton:_e,dark:Ce},M=t.createContext("primary"),E=n.forwardRef(({className:e,id:a,position:s="bottom",animationType:o="expand",hideDelay:p=0,showDelay:r=100,title:h,titleClassName:m,hideCloseButton:y,closeButtonTheme:d="light",onClose:T,closeAriaLabel:g,children:R=null,content:z,containerSelector:D,hideTrigger:I=[],showTrigger:v=[],width:c,moveBy:H,hideWhenReferenceHidden:O=!1,referenceWrapperClassName:L,tip:X=!0,tooltipArrowClassName:F,modifiers:j=[],floating:_=!1,color:U,"data-testid":G},B)=>{const u=U??"inverted",C=Array.isArray(v)&&Array.isArray(I)&&v.length===0&&r>0,K=n.useRef(null),$=se(B,K),[J,S]=n.useState(!C),Y=g||ce;n.useEffect(()=>{let W;return r&&(W=setTimeout(()=>{S(!0)},r)),()=>{clearTimeout(W)}},[r,S]);const Q=n.useMemo(()=>u==="inverted"?"onInverted":"onPrimary",[u]),Z=n.useMemo(()=>d==="light"?u==="inverted"?x.ON_INVERTED_BACKGROUND:x.ON_PRIMARY_COLOR:d,[u,d]),ee=B||a?"div":n.Fragment,te=t.createElement("div",null,t.createElement("div",{className:i(l.tipseenHeader)},y?null:t.createElement(oe,{hideTooltip:!0,className:i(l.tipseenCloseButton,{[l.dark]:d==="dark"||d==="fixed-dark"}),onClick:T,size:"xs",kind:"tertiary",color:Z,ariaLabel:Y,icon:de}),t.createElement(f,{text:h,className:i(l.tipseenTitle,m)})),t.createElement(P,{color:Q,type:"text2",element:"p",className:i(l.tipseenContent)},t.createElement(M.Provider,{value:u},z)));return t.createElement(ee,{ref:$,id:a,"data-testid":G||V(b.TIPSEEN,a)},t.createElement(le,{className:i(l.tipseenWrapper,e,{[l.tipseenWrapperWithoutCustomWidth]:!c,[l.floating]:_}),maxWidth:c,arrowClassName:F,style:c?{width:c}:void 0,shouldShowOnMount:!C,position:s,animationType:o,hideDelay:p,showDelay:0,hideTrigger:I,showTrigger:v,showOnDialogEnter:!1,content:te,theme:u==="inverted"?"dark":"primary",containerSelector:D,disableDialogSlide:!1,moveBy:H,hideWhenReferenceHidden:O,referenceWrapperClassName:L,tip:X&&!_,modifiers:j,open:C?J:void 0,forceRenderWithoutChildren:_},R))}),Oe=pe(E,{closeButtonThemes:w,animationTypes:ie,hideShowTriggers:ae,colors:N,positions:re});try{E.displayName="Tipseen",E.__docgenInfo={description:"",displayName:"Tipseen",props:{titleClassName:{defaultValue:null,description:"Class name applied to the Tipseen title.",name:"titleClassName",required:!1,type:{name:"string"}},position:{defaultValue:{value:"bottom"},description:"The position of the Tipseen relative to the target element.",name:"position",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"right"'},{value:'"bottom"'},{value:'"left"'}]}},animationType:{defaultValue:{value:"expand"},description:"The animation type used for showing/hiding the Tipseen.",name:"animationType",required:!1,type:{name:"enum",value:[{value:'"opacity-and-slide"'},{value:'"expand"'}]}},hideDelay:{defaultValue:{value:"0"},description:"The delay in milliseconds before hiding the Tipseen.",name:"hideDelay",required:!1,type:{name:"number"}},showDelay:{defaultValue:{value:"100"},description:"The delay in milliseconds before showing the Tipseen.",name:"showDelay",required:!1,type:{name:"number"}},title:{defaultValue:null,description:"The title text of the Tipseen.",name:"title",required:!1,type:{name:"string"}},hideCloseButton:{defaultValue:null,description:"If true, hides the close button.",name:"hideCloseButton",required:!1,type:{name:"boolean"}},children:{defaultValue:{value:"null"},description:"The child element that triggers the Tipseen.",name:"children",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>>"}},containerSelector:{defaultValue:null,description:"The CSS selector of the container where the Tipseen should be rendered.",name:"containerSelector",required:!1,type:{name:"string"}},hideTrigger:{defaultValue:{value:"[]"},description:"Events that trigger hiding the Tipseen.",name:"hideTrigger",required:!1,type:{name:"DialogTriggerEvent | DialogTriggerEvent[]"}},showTrigger:{defaultValue:{value:"[]"},description:"Events that trigger showing the Tipseen.",name:"showTrigger",required:!1,type:{name:"DialogTriggerEvent | DialogTriggerEvent[]"}},width:{defaultValue:null,description:"The width of the Tipseen.",name:"width",required:!1,type:{name:"number"}},moveBy:{defaultValue:null,description:"Offset values for positioning adjustments.",name:"moveBy",required:!1,type:{name:"MoveBy"}},hideWhenReferenceHidden:{defaultValue:{value:"false"},description:"If true, hides the Tipseen when the reference element is hidden.",name:"hideWhenReferenceHidden",required:!1,type:{name:"boolean"}},referenceWrapperClassName:{defaultValue:null,description:"Class name applied to the reference wrapper element.",name:"referenceWrapperClassName",required:!1,type:{name:"string"}},tip:{defaultValue:{value:"true"},description:"If false, hides the arrow of the Tipseen.",name:"tip",required:!1,type:{name:"boolean"}},tooltipArrowClassName:{defaultValue:null,description:"Class name applied to the Tipseen arrow.",name:"tooltipArrowClassName",required:!1,type:{name:"string"}},modifiers:{defaultValue:{value:"[]"},description:`Custom Popper.js modifiers.
https://popper.js.org/docs/v2/modifiers/`,name:"modifiers",required:!1,type:{name:"Partial<Modifier<unknown, object>>[]"}},closeAriaLabel:{defaultValue:null,description:"The aria-label for the close button.",name:"closeAriaLabel",required:!1,type:{name:"string"}},onClose:{defaultValue:null,description:"Callback fired when the Tipseen is closed.",name:"onClose",required:!1,type:{name:"(event?: MouseEvent<HTMLButtonElement, MouseEvent>) => void"}},content:{defaultValue:null,description:"The content displayed inside the Tipseen.",name:"content",required:!0,type:{name:"ElementContent"}},closeButtonTheme:{defaultValue:{value:"light"},description:"The theme of the Tipseen close button.",name:"closeButtonTheme",required:!1,type:{name:"enum",value:[{value:'"dark"'},{value:'"light"'},{value:'"fixed-light"'},{value:'"fixed-dark"'}]}},floating:{defaultValue:{value:"false"},description:"If true, renders the Tipseen as a floating element without a reference.",name:"floating",required:!1,type:{name:"boolean"}},color:{defaultValue:null,description:"The color theme of the Tipseen.",name:"color",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"inverted"'}]}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const Ee="_tipseenBasicContent_ylf1o_1",qe={tipseenBasicContent:Ee},q=({title:e,children:a=null,titleClassName:s,className:o,id:p,"data-testid":r})=>t.createElement("div",{className:i(qe.tipseenBasicContent,o),id:p,"data-testid":r||V(b.TIPSEEN_CONTENT,p)},t.createElement(f,{text:e,className:s}),a);try{q.displayName="TipseenBasicContent",q.__docgenInfo={description:"",displayName:"TipseenBasicContent",props:{title:{defaultValue:null,description:"The title text displayed in the Tipseen content.",name:"title",required:!1,type:{name:"string"}},titleClassName:{defaultValue:null,description:"Class name applied to the title.",name:"titleClassName",required:!1,type:{name:"string"}},children:{defaultValue:{value:"null"},description:"The content inside the Tipseen.",name:"children",required:!1,type:{name:"ElementContent | ElementContent[]"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const Ve="_tipseenWizard_tl6ag_1",be="_tipseenWizardWizard_tl6ag_5",k={tipseenWizard:Ve,tipseenWizardWizard:be},Ne="Got it",A=({id:e,title:a,onFinish:s,titleClassName:o,className:p,...r})=>{const h=r,m=n.useContext(M),y=n.useMemo(()=>m===N.INVERTED?"on-inverted-background":"on-primary-color",[m]),d=n.useMemo(()=>({kind:"primary",size:"small"}),[]),T=n.useMemo(()=>({size:"small"}),[]),g=n.useMemo(()=>({kind:"primary",size:"small",children:Ne}),[]);return t.createElement(q,{title:a,className:i(k.tipseenWizard,p),titleClassName:o,id:e||"wizard"},t.createElement(ne,{className:i(k.tipseenWizardWizard),color:y,isContentOnTop:!0,areButtonsIconsHidden:!0,backButtonProps:T,nextButtonProps:d,finishButtonProps:g,onFinish:s,...h}))};try{A.displayName="TipseenWizard",A.__docgenInfo={description:"",displayName:"TipseenWizard",props:{title:{defaultValue:null,description:"The title text displayed in the Tipseen Wizard.",name:"title",required:!1,type:{name:"string"}},titleClassName:{defaultValue:null,description:"Class name applied to the Tipseen title.",name:"titleClassName",required:!1,type:{name:"string"}},onFinish:{defaultValue:null,description:"Callback fired when the wizard is completed.",name:"onFinish",required:!1,type:{name:"(e: MouseEvent<Element, MouseEvent> | KeyboardEvent<Element>) => void"}},activeStepIndex:{defaultValue:null,description:"The index of the currently active step.",name:"activeStepIndex",required:!1,type:{name:"number"}},onChangeActiveStep:{defaultValue:null,description:"Callback fired when the active step changes.",name:"onChangeActiveStep",required:!1,type:{name:"(e: MouseEvent<Element, MouseEvent>, stepIndex: number) => void"}},areNavigationButtonsHidden:{defaultValue:null,description:"If true, hides the navigation buttons.",name:"areNavigationButtonsHidden",required:!1,type:{name:"boolean"}},steps:{defaultValue:null,description:"The list of steps in the steps component.",name:"steps",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>>[]"}},type:{defaultValue:null,description:"The visual style of the steps component.",name:"type",required:!1,type:{name:"enum",value:[{value:'"numbers"'},{value:'"gallery"'}]}},color:{defaultValue:null,description:"The color theme of the steps component.",name:"color",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"on-primary-color"'},{value:'"on-inverted-background"'}]}},isContentOnTop:{defaultValue:null,description:"If true, the content is displayed above the step navigation.",name:"isContentOnTop",required:!1,type:{name:"boolean"}},areButtonsIconsHidden:{defaultValue:null,description:"If true, hides the icons in the navigation buttons.",name:"areButtonsIconsHidden",required:!1,type:{name:"boolean"}},backButtonProps:{defaultValue:null,description:"Props applied to the back button.",name:"backButtonProps",required:!1,type:{name:"Partial<ButtonProps>"}},nextButtonProps:{defaultValue:null,description:"Props applied to the next button.",name:"nextButtonProps",required:!1,type:{name:"Partial<ButtonProps>"}},finishButtonProps:{defaultValue:null,description:"Props applied to the finish button.",name:"finishButtonProps",required:!1,type:{name:"Partial<ButtonProps>"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}export{He as D,De as S,Oe as T,A as a,M as b,N as c,q as d};
