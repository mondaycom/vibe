import{r as g,R as t}from"./index-Hemj67b4.js";import{c as _}from"./index-BpvXyOxN.js";import{F as l}from"./Flex-DIvs4XZj.js";import{H as E}from"./Heading-NvFrzz5O.js";import{T as q}from"./Text-C0CU0_Vh.js";import{g as S}from"./typesciptCssModulesHelper-Ji7rRrZn.js";import{g as x,C as b}from"./test-ids-utils-9ISiqDto.js";import{B as d}from"./Button-DEM-Hn8V.js";import{L as h}from"./Link-s0y4jlGK.js";const N="_emptyState_1qbjf_1",k="_compact_1qbjf_7",j="_content_1qbjf_10",P="_title_1qbjf_14",V="_description_1qbjf_17",R="_actions_1qbjf_20",r={emptyState:N,compact:k,content:j,title:P,description:V,actions:R},p=g.forwardRef(({className:e,title:n,description:a,visual:i,mainAction:s,supportingAction:c,layout:m="default",id:u,"data-testid":f},y)=>{const o=m==="compact";return t.createElement(l,{direction:"column",align:"center",justify:"center",gap:o?"small":"medium",className:_(r.emptyState,S(r,m),e),id:u,"data-testid":f||x(b.EMPTY_STATE,u),ref:y},!!i&&i,t.createElement(l,{direction:"column",align:"center",gap:o?12:"medium",className:r.content},t.createElement(l,{direction:"column",align:"center",gap:"xs"},n&&t.createElement(E,{type:"h3",weight:"normal",className:r.title,align:"center",ellipsis:!1},n),typeof a=="string"?t.createElement(q,{className:r.description,align:"center",ellipsis:!1},a):a),(s||c)&&t.createElement(l,{direction:"column",align:"center",gap:"small",className:r.actions},T(s,o),v(c,o))))});function T(e,n){return typeof e=="object"&&"text"in e?t.createElement(d,{kind:"secondary",size:n?"small":"medium",...e},e.text):e}function v(e,n){if(typeof e=="object"){if("text"in e&&"href"in e){const{text:a,...i}=e;return t.createElement(h,{text:a,...i})}if("text"in e){const{text:a,...i}=e;return t.createElement(d,{kind:"tertiary",size:n?"small":"medium",...i},a)}}return e}try{p.displayName="EmptyState",p.__docgenInfo={description:"",displayName:"EmptyState",props:{title:{defaultValue:null,description:"Optional title for the empty state",name:"title",required:!1,type:{name:"string"}},description:{defaultValue:null,description:"Required description text explaining the empty state",name:"description",required:!0,type:{name:"ReactNode"}},visual:{defaultValue:null,description:"Optional visual element like image, animation, video, or illustration to display",name:"visual",required:!1,type:{name:"ReactNode"}},mainAction:{defaultValue:null,description:"Main action button configuration",name:"mainAction",required:!1,type:{name:'ReactElement<ButtonProps, string | JSXElementConstructor<any>> | (Omit<ButtonProps, "children" | "size" | "kind"> & { ...; })'}},supportingAction:{defaultValue:null,description:"Supporting action (link or tertiary button) configuration",name:"supportingAction",required:!1,type:{name:'ReactElement<ButtonProps | LinkProps, string | JSXElementConstructor<any>> | (Omit<ButtonProps, "children" | ... 1 more ... | "kind"> & { ...; }) | (LinkProps & { ...; })'}},layout:{defaultValue:{value:"default"},description:"Layout style of the empty state",name:"layout",required:!1,type:{name:"enum",value:[{value:'"compact"'},{value:'"default"'}]}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}export{p as E};
