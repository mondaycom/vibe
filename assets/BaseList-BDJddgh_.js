import{r as B,R as e}from"./index-Hemj67b4.js";import{B as y}from"./BaseListItem-CTdJBJtb.js";import{T as D}from"./Text-C0CU0_Vh.js";import{c as F}from"./index-BpvXyOxN.js";import{F as G}from"./Flex-DIvs4XZj.js";import{D as H}from"./Divider-CPEi52zL.js";const I="_wrapper_1pzoc_1",z="_groupTitle_1pzoc_6",A="_sticky_1pzoc_11",m={wrapper:I,groupTitle:z,sticky:A},v=B.forwardRef(({options:l,selectedItems:a,highlightedIndex:p,menuAriaLabel:g,getMenuProps:n,getItemProps:s,size:u="medium",withGroupDivider:q=!1,dir:V="ltr",itemRenderer:x,menuRenderer:c,noOptionsMessage:o="No results",stickyGroupTitle:T=!1,renderOptions:f=!0,onScroll:b,maxMenuHeight:_=300},E)=>{const L=u==="small"?"text2":"text1",h=f?l.every(i=>{var r;return((r=i.options)==null?void 0:r.length)===0})?e.createElement("div",{role:"status"},typeof o=="string"?e.createElement(G,{justify:"center"},e.createElement(y,{component:"div",item:{label:o,value:""},size:u,readOnly:!0})):o):l.map((i,r)=>e.createElement(e.Fragment,{key:i.label??r},i.label&&e.createElement("li",{className:F(m.groupTitle,{[m.sticky]:T})},e.createElement(D,{type:L,color:"inherit"},i.label)),i.options.map((t,R)=>{const k=(s==null?void 0:s({item:t,index:t.index}))??{},N=p!==void 0&&p===t.index&&!t.disabled,w=(a==null?void 0:a.some(d=>(d==null?void 0:d.value)===t.value))&&!t.disabled;return e.createElement(y,{itemProps:k,key:typeof t.value=="string"?t.value:R,size:u,highlighted:N,selected:w,itemRenderer:x,item:t,role:"option"})}),q&&r<l.length-1&&e.createElement(H,null))):null;return e.createElement("ul",{ref:E,dir:V,className:m.wrapper,...n==null?void 0:n({"aria-label":g}),onScroll:b,style:{maxHeight:_}},c&&f?c({children:h,filteredOptions:l,selectedItem:(a==null?void 0:a[0])||null,selectedItems:a||[]}):h)});try{v.displayName="BaseList",v.__docgenInfo={description:"",displayName:"BaseList",props:{options:{defaultValue:null,description:"The list of options available in the list.",name:"options",required:!0,type:{name:"ListGroup<Item>[]"}},selectedItems:{defaultValue:null,description:"The selected item in the list.",name:"selectedItems",required:!1,type:{name:"BaseListItemData<Item>[]"}},highlightedIndex:{defaultValue:null,description:"The index of the highlighted item in the list.",name:"highlightedIndex",required:!1,type:{name:"number"}},menuAriaLabel:{defaultValue:null,description:"The ARIA label for the menu.",name:"menuAriaLabel",required:!1,type:{name:"string"}},getMenuProps:{defaultValue:null,description:"Function to get props for the menu container.",name:"getMenuProps",required:!1,type:{name:"(options?: any, otherOptions?: any) => Record<string, unknown>"}},getItemProps:{defaultValue:null,description:"Function to get props for each item in the list.",name:"getItemProps",required:!1,type:{name:"(options: any) => Record<string, unknown>"}},size:{defaultValue:{value:"medium"},description:"The size of the list item.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'},{value:'"large"'}]}},withGroupDivider:{defaultValue:{value:"false"},description:"If true, displays dividers between grouped options.",name:"withGroupDivider",required:!1,type:{name:"boolean"}},stickyGroupTitle:{defaultValue:{value:"false"},description:"If true, makes the group title sticky.",name:"stickyGroupTitle",required:!1,type:{name:"boolean"}},dir:{defaultValue:{value:"ltr"},description:"The text direction of the list.",name:"dir",required:!1,type:{name:"enum",value:[{value:'"auto"'},{value:'"ltr"'},{value:'"rtl"'}]}},itemRenderer:{defaultValue:null,description:"Custom renderer for options.",name:"itemRenderer",required:!1,type:{name:"(item: BaseListItemData<Item>) => ReactNode"}},menuRenderer:{defaultValue:null,description:"Custom renderer for the entire menu content inside the ul element.",name:"menuRenderer",required:!1,type:{name:"(props: { children: ReactNode; filteredOptions: ListGroup<Item>[]; selectedItem?: Item; selectedItems?: Item[]; }) => ReactNode"}},noOptionsMessage:{defaultValue:{value:"No results"},description:'Text or function to customize the "No results" message.',name:"noOptionsMessage",required:!1,type:{name:"ReactNode"}},renderOptions:{defaultValue:{value:"true"},description:"If true, the options are rendered.",name:"renderOptions",required:!1,type:{name:"boolean"}},onScroll:{defaultValue:null,description:"Function to handle scroll events.",name:"onScroll",required:!1,type:{name:"(event: UIEvent<HTMLUListElement, UIEvent>) => void"}},maxMenuHeight:{defaultValue:{value:"300"},description:"The maximum height of the list.",name:"maxMenuHeight",required:!1,type:{name:"number"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLUListElement>"}}}}}catch{}export{v as B};
