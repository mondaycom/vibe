import{r as u,R as r}from"./index-Hemj67b4.js";import{c as C}from"./index-BpvXyOxN.js";import{C as ae}from"./Counter-tqJNw08f.js";import{M as ne}from"./MenuButton-DXwv4tfa.js";import{M as W}from"./useMenuItemKeyboardEvents-BQybGziJ.js";import{M as ie}from"./MenuItem-BUVVUzCQ.js";import{A as z,C as re}from"./Avatar-QlYnpo6V.js";import{T as le}from"./Tooltip-C_-kbcOd.js";import{F as q}from"./Flex-DIvs4XZj.js";import{V as oe}from"./VirtualizedList-vReWKAg5.js";import{u as h}from"./index-8zVcErkr.js";import{u as X}from"./index-DLqmmtYJ.js";import{u as se}from"./index-BMFTbhVI.js";import{k as Z}from"./function-utils-6EQ2u6TA.js";import{g as ue}from"./typesciptCssModulesHelper-Ji7rRrZn.js";const S=u.forwardRef(({avatarProps:e,menuItemProps:n,...o},l)=>{const t=u.useCallback(()=>r.createElement(z,{...e}),[e]);return r.createElement(ie,{...o,...n,icon:t,ref:l})});Object.assign(S,{isMenuChild:!0,isSelectable:!0});try{S.displayName="AvatarMenuItem",S.__docgenInfo={description:"MenuItem with Avatar instead of Icon",displayName:"AvatarMenuItem",props:{avatarProps:{defaultValue:null,description:"Props passed to the avatar component.",name:"avatarProps",required:!1,type:{name:"AvatarProps"}},menuItemProps:{defaultValue:null,description:"Props passed to the menu item component.",name:"menuItemProps",required:!1,type:{name:"MenuItemProps"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}},isMenuChild:{defaultValue:null,description:"",name:"isMenuChild",required:!1,type:{name:"boolean"}},isSelectable:{defaultValue:null,description:"",name:"isSelectable",required:!1,type:{name:"boolean"}}}}}catch{}const de="_scrollableContainer_5mit9_1",ce="_virtualizedTooltipContainer_5mit9_10",$={scrollableContainer:de,virtualizedTooltipContainer:ce},E=Object.freeze({maxItemsWithoutScroll:10,itemLineHeight:34,itemLineWidth:150}),x=({avatarItems:e=[],avatarRenderer:n,type:o,tooltipContainerAriaLabel:l,tooltipContentContainerRef:t})=>{const a=u.useMemo(()=>e.map(p=>({value:p,height:E.itemLineHeight})),[e]),s=Math.min(e.length,E.maxItemsWithoutScroll),i={height:E.itemLineHeight*s,minWidth:E.itemLineWidth};return r.createElement("div",{className:$.virtualizedTooltipContainer,"aria-label":l,ref:t,tabIndex:-1},r.createElement(oe,{items:a,itemRenderer:(p,m,y)=>n(p.value,m,y,o,!1),role:"treegrid",scrollableClassName:$.scrollableContainer,getItemId:(p,m)=>String(m),style:i}))};try{x.displayName="AvatarGroupCounterTooltipContentVirtualizedList",x.__docgenInfo={description:"",displayName:"AvatarGroupCounterTooltipContentVirtualizedList",props:{avatarItems:{defaultValue:{value:"[]"},description:"The list of avatars displayed in the virtualized tooltip.",name:"avatarItems",required:!1,type:{name:"AvatarItem[]"}},avatarRenderer:{defaultValue:null,description:"Function to render each avatar item.",name:"avatarRenderer",required:!1,type:{name:"(item: AvatarItem, index: number, style: CSSProperties, type: AvatarType, displayAsGrid: boolean) => ReactElement<any, string | JSXElementConstructor<any>>"}},tooltipContainerAriaLabel:{defaultValue:null,description:"The ARIA label of the tooltip container.",name:"tooltipContainerAriaLabel",required:!1,type:{name:"string"}},tooltipContentContainerRef:{defaultValue:null,description:"Ref for the tooltip content container.",name:"tooltipContentContainerRef",required:!1,type:{name:"Ref<HTMLDivElement>"}},type:{defaultValue:null,description:"The type of avatars in the tooltip.",name:"type",required:!1,type:{name:"enum",value:[{value:'"icon"'},{value:'"text"'},{value:'"img"'}]}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const pe="_tooltipAvatarItemTitle_1yijn_1",me="_tooltipAvatarItemAvatar_1yijn_5",fe="_tooltipContainer_1yijn_9",ye="_tooltipGridContainer_1yijn_21",ve="_scrollableContainer_1yijn_26",A={tooltipAvatarItemTitle:pe,tooltipAvatarItemAvatar:me,tooltipContainer:fe,tooltipGridContainer:ye,scrollableContainer:ve},Q=200,K=22,L=[Z.TAB],J=[Z.ESCAPE];function G({counterContainerRef:e=void 0,tooltipContentContainerRef:n,focusPrevPlaceholderRef:o,focusNextPlaceholderRef:l,isKeyboardTooltipVisible:t,setIsKeyboardTooltipVisible:a}){const s=u.useCallback(()=>{t||setTimeout(()=>a(!0),Q)},[t,a]),i=u.useCallback(()=>{t&&a(!1)},[t,a]);se({ref:e,onFocusByKeyboard:s}),X({eventName:"blur",ref:n,callback:i}),h({keys:L,ref:e,withoutAnyModifier:!0,preventDefault:!0,callback:u.useCallback(()=>{t&&n!=null&&n.current&&n.current.focus()},[t,n])}),h({keys:L,modifier:h.modifiers.SHIFT,ref:e,callback:i}),h({keys:L,ref:n,withoutAnyModifier:!0,callback:u.useCallback(()=>{l!=null&&l.current&&l.current.focus(),t&&a(!1)},[l,t,a])}),h({keys:L,ref:n,modifier:h.modifiers.SHIFT,callback:u.useCallback(()=>{o!=null&&o.current&&o.current.focus(),t&&a(!1)},[o,t,a])}),h({keys:J,ref:n,callback:u.useCallback(()=>{e!=null&&e.current&&e.current.focus(),t&&a(!1)},[e,t,a])}),h({keys:J,ref:e,callback:i}),X({eventName:"focus",ref:l,callback:i})}const U=(e,n,o,l,t)=>{const a=e.value,s={...o,width:t?void 0:"100%"},i=`tooltip-item-${n}-label`;return r.createElement(re,{key:n,isClickable:!!(a!=null&&a.onClick),clickableProps:{onClick:p=>a.onClick(p,a.id),tabIndex:"-1"}},r.createElement("div",{style:s},r.createElement(q,{direction:"row",gap:"xs",ariaLabelledby:i},r.createElement(z,{...a,tooltipProps:void 0,ariaLabel:"",customSize:K,type:l||(a==null?void 0:a.type),tabIndex:-1,size:z.sizes.SMALL,className:A.tooltipAvatarItemAvatar}),!t&&r.createElement("div",{id:i,className:A.tooltipAvatarItemTitle},a.tooltipContent))))};try{G.displayName="useTooltipContentTabNavigation",G.__docgenInfo={description:"",displayName:"useTooltipContentTabNavigation",props:{counterContainerRef:{defaultValue:{value:"undefined"},description:"",name:"counterContainerRef",required:!1,type:{name:"RefObject<HTMLDivElement>"}},tooltipContentContainerRef:{defaultValue:null,description:"",name:"tooltipContentContainerRef",required:!0,type:{name:"RefObject<HTMLElement>"}},focusPrevPlaceholderRef:{defaultValue:null,description:"",name:"focusPrevPlaceholderRef",required:!0,type:{name:"RefObject<HTMLDivElement>"}},focusNextPlaceholderRef:{defaultValue:null,description:"",name:"focusNextPlaceholderRef",required:!0,type:{name:"RefObject<HTMLDivElement>"}},isKeyboardTooltipVisible:{defaultValue:null,description:"",name:"isKeyboardTooltipVisible",required:!0,type:{name:"boolean"}},setIsKeyboardTooltipVisible:{defaultValue:null,description:"",name:"setIsKeyboardTooltipVisible",required:!0,type:{name:"(value: boolean) => void"}}}}}catch{}const R=({avatars:e=[],type:n,className:o,isVirtualizedList:l=!1,tooltipContentContainerRef:t})=>{const a=u.useCallback(d=>{var f;return((f=d==null?void 0:d.tooltipProps)==null?void 0:f.content)||(d==null?void 0:d.ariaLabel)},[]),{avatarItems:s,displayAsGrid:i,tooltipContainerAriaLabel:p}=u.useMemo(()=>{const d=e.map(c=>({value:{...c.props,tooltipContent:a(c.props)}})),f=!d.some(c=>c.value.tooltipContent),v=f?void 0:d.map(c=>c.value.tooltipContent).join(",");return{avatarItems:d,displayAsGrid:f,tooltipContainerAriaLabel:v}},[e,a]),m=u.useMemo(()=>s.map((d,f)=>U(d,f,void 0,n,i)),[s,i,n]);if(l)return r.createElement(x,{avatarRenderer:U,tooltipContentContainerRef:t,tooltipContainerAriaLabel:p,avatarItems:s,type:n});const y={ref:t,tabIndex:-1,role:"treegrid",ariaLabel:p,className:i?C(A.scrollableContainer,A.tooltipContainer,A.tooltipGridContainer,o):C(A.scrollableContainer,A.tooltipContainer,o),direction:i?q.directions.ROW:q.directions.COLUMN,gap:i?q.gaps.XS:q.gaps.SMALL,wrap:i};return r.createElement(q,{...y},m)};try{R.displayName="AvatarGroupCounterTooltipContent",R.__docgenInfo={description:"",displayName:"AvatarGroupCounterTooltipContent",props:{type:{defaultValue:null,description:"The type of avatars displayed inside the tooltip.",name:"type",required:!1,type:{name:"enum",value:[{value:'"icon"'},{value:'"text"'},{value:'"img"'}]}},avatars:{defaultValue:{value:"[]"},description:"The avatars shown in the tooltip.",name:"avatars",required:!1,type:{name:"ReactElement<AvatarProps, string | JSXElementConstructor<any>>[]"}},isVirtualizedList:{defaultValue:{value:"false"},description:"If true, the tooltip uses a virtualized list for performance optimization.",name:"isVirtualizedList",required:!1,type:{name:"boolean"}},tooltipContentContainerRef:{defaultValue:null,description:"Ref for the tooltip content container.",name:"tooltipContentContainerRef",required:!1,type:{name:"Ref<HTMLDivElement>"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const w=({focusPrevPlaceholderRef:e,focusNextPlaceholderRef:n,counterContainerRef:o,children:l=[],avatars:t=[],type:a,className:s,counterTooltipCustomProps:i,counterTooltipIsVirtualizedList:p=!1})=>{const[m,y]=u.useState(!1),d=u.useRef(null),f=u.useMemo(()=>(i==null?void 0:i.content)||r.createElement(R,{avatars:t,type:a,className:s,isVirtualizedList:p,tooltipContentContainerRef:d}),[t,s,i==null?void 0:i.content,p,a]);G({counterContainerRef:o,tooltipContentContainerRef:d,focusPrevPlaceholderRef:e,focusNextPlaceholderRef:n,setIsKeyboardTooltipVisible:y,isKeyboardTooltipVisible:m});const v=u.useCallback(()=>{y(!1)},[]);return!(t!=null&&t.length)&&!(i!=null&&i.content)?r.createElement(r.Fragment,null,l):r.createElement(le,{open:m,hideDelay:Q,showTrigger:["mouseenter"],hideTrigger:["mouseleave"],onTooltipHide:v,...i||{},content:f},l)};try{w.displayName="AvatarGroupCounterTooltipContainer",w.__docgenInfo={description:"",displayName:"AvatarGroupCounterTooltipContainer",props:{type:{defaultValue:null,description:"The type of avatars displayed in the tooltip.",name:"type",required:!1,type:{name:"enum",value:[{value:'"icon"'},{value:'"text"'},{value:'"img"'}]}},children:{defaultValue:{value:"[]"},description:"The counter element and focus placeholders.",name:"children",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>>[]"}},avatars:{defaultValue:{value:"[]"},description:"The list of avatars displayed inside the tooltip.",name:"avatars",required:!1,type:{name:"ReactElement<AvatarProps, string | JSXElementConstructor<any>>[]"}},counterTooltipCustomProps:{defaultValue:null,description:"Props passed to the Tooltip component. See full options in the [Tooltip documentation](https://vibe.monday.com/?path=/docs/components-tooltip--docs).",name:"counterTooltipCustomProps",required:!1,type:{name:"Partial<TooltipProps>"}},counterTooltipIsVirtualizedList:{defaultValue:{value:"false"},description:"If true, the tooltip uses a virtualized list for performance optimization.",name:"counterTooltipIsVirtualizedList",required:!1,type:{name:"boolean"}},focusPrevPlaceholderRef:{defaultValue:null,description:"Ref for the element before the tooltip content, used for keyboard navigation.",name:"focusPrevPlaceholderRef",required:!1,type:{name:"RefObject<HTMLDivElement>"}},focusNextPlaceholderRef:{defaultValue:null,description:"Ref for the element after the tooltip content, used for keyboard navigation.",name:"focusNextPlaceholderRef",required:!1,type:{name:"RefObject<HTMLDivElement>"}},counterContainerRef:{defaultValue:null,description:"Ref for the counter container element.",name:"counterContainerRef",required:!1,type:{name:"RefObject<HTMLDivElement>"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const ee=(e,n)=>{var o;(o=n==null?void 0:n.onClick)==null||o.call(n,e,n.id)},_e="_counterContainer_10wi6_1",he="_xs_10wi6_22",ge="_small_10wi6_28",Ce="_medium_10wi6_34",Ae="_large_10wi6_40",be="_primary_10wi6_46",Te="_dark_10wi6_50",qe="_negative_10wi6_54",Ve="_light_10wi6_58",Ie="_disabled_10wi6_62",Ee="_menu_10wi6_67",g={counterContainer:_e,"focus-visible":"_focus-visible_10wi6_10",xs:he,small:ge,medium:Ce,large:Ae,primary:be,dark:Te,negative:qe,light:Ve,disabled:Ie,menu:Ee},H=({counterTooltipAvatars:e=[],counterProps:n,counterTooltipCustomProps:o,counterTooltipIsVirtualizedList:l=!1,size:t="medium",type:a,counterAriaLabel:s,disabled:i})=>{const{color:p="light",count:m=e.length,prefix:y="+",maxDigits:d=3,ariaLabelItemsName:f="items",noAnimation:v,dialogContainerSelector:c,tabIndex:k=0}=n||{},b=ue(g,t==null?void 0:t.toString()),T=g[p],V=u.useRef(null),O=u.useRef(null),N=u.useRef(null),M=u.useCallback(()=>r.createElement(ae,{color:p,count:m,prefix:y,maxDigits:d,ariaLabel:s||`Tab for more ${f}`,noAnimation:v,counterClassName:C({[g.disabled]:i}),size:t==="xs"?"xs":void 0}),[s,f,p,d,y,m,i,v]);return!e.length&&!m?null:i?r.createElement("div",{ref:N,className:C(g.counterContainer,g.disabled,b,T)},M()):e.some(_=>{var I;return(I=_.props)==null?void 0:I.onClick})?r.createElement(ne,{component:M,zIndex:1,className:C(g.counterContainer,b,T),ariaLabel:s||`${m} additional ${f}`,dialogContainerSelector:c},r.createElement(W,{id:"menu",size:W.sizes.MEDIUM,className:g.menu,focusItemIndexOnMount:0},e.map((_,I)=>{var j,D,P,F;return r.createElement(S,{menuItemProps:{key:((j=_.props)==null?void 0:j.id)||String(I),title:((P=(D=_.props)==null?void 0:D.tooltipProps)==null?void 0:P.content)||((F=_==null?void 0:_.props)==null?void 0:F.ariaLabel),onClick:te=>ee(te,_.props)},avatarProps:{..._.props,customSize:K,ariaLabel:"",tabIndex:-1}})}))):r.createElement(w,{focusPrevPlaceholderRef:V,focusNextPlaceholderRef:O,counterContainerRef:N,avatars:e,counterTooltipCustomProps:o,counterTooltipIsVirtualizedList:l,type:a},r.createElement("div",{tabIndex:-1,ref:V}),r.createElement("div",{tabIndex:k,className:C(g.counterContainer,b,T),ref:N},M(),r.createElement("div",{tabIndex:-1,ref:O})))};try{H.displayName="AvatarGroupCounter",H.__docgenInfo={description:"",displayName:"AvatarGroupCounter",props:{counterTooltipAvatars:{defaultValue:{value:"[]"},description:"The list of avatars hidden behind the counter.",name:"counterTooltipAvatars",required:!1,type:{name:"ReactElement<AvatarProps, string | JSXElementConstructor<any>>[]"}},counterProps:{defaultValue:null,description:"Props for customizing the counter appearance.",name:"counterProps",required:!1,type:{name:"AvatarGroupCounterVisualProps"}},counterTooltipCustomProps:{defaultValue:null,description:"Props for customizing the counter tooltip.",name:"counterTooltipCustomProps",required:!1,type:{name:"Partial<TooltipProps>"}},counterTooltipIsVirtualizedList:{defaultValue:{value:"false"},description:"If true, the counter tooltip uses a virtualized list for performance optimization.",name:"counterTooltipIsVirtualizedList",required:!1,type:{name:"boolean"}},size:{defaultValue:{value:"medium"},description:"The size of the counter.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"xs"'},{value:'"medium"'},{value:'"large"'}]}},type:{defaultValue:null,description:"The type of the avatars in the counter.",name:"type",required:!1,type:{name:"enum",value:[{value:'"icon"'},{value:'"text"'},{value:'"img"'}]}},counterAriaLabel:{defaultValue:null,description:"The label of the counter for accessibility.",name:"counterAriaLabel",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"If true, the counter is disabled and non-interactive.",name:"disabled",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const Le="_avatarGroupContainer_1g1uk_1",Se="_avatarContainer_1g1uk_10",B={avatarGroupContainer:Le,avatarContainer:Se},Y=({className:e,avatarClassName:n,id:o,children:l,size:t,type:a,max:s=5,counterProps:i,counterTooltipCustomProps:p,counterTooltipIsVirtualizedList:m=!1,disabled:y})=>{const{displayAvatars:d,counterTooltipAvatars:f}=u.useMemo(()=>{if(!l)return{};const v=Array.isArray(l)?l:[l];return{displayAvatars:v.slice(0,s).map((c,k)=>{var b,T;return r.cloneElement(c,{key:k,...c==null?void 0:c.props,size:t||((b=c==null?void 0:c.props)==null?void 0:b.size),type:a||((T=c==null?void 0:c.props)==null?void 0:T.type),className:C(B.avatarContainer,n),onClick:V=>ee(V,c.props),disabled:y})}),counterTooltipAvatars:v.slice(s)}},[n,l,y,s,t,a]);return l?r.createElement("div",{className:C(B.avatarGroupContainer,e),id:o},d,r.createElement(H,{counterTooltipAvatars:f,counterProps:i,counterTooltipCustomProps:p,counterTooltipIsVirtualizedList:m,size:t,type:a,disabled:y})):null};try{Y.displayName="AvatarGroup",Y.__docgenInfo={description:"",displayName:"AvatarGroup",props:{avatarClassName:{defaultValue:null,description:"Class name applied to each avatar.",name:"avatarClassName",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"The avatars displayed in the group.",name:"children",required:!1,type:{name:"ReactElement<AvatarProps, string | JSXElementConstructor<any>> | ReactElement<AvatarProps, string | JSXElementConstructor<any>>[]"}},size:{defaultValue:null,description:"The size of the avatars in the group.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"xs"'},{value:'"medium"'},{value:'"large"'}]}},type:{defaultValue:null,description:"The type of the avatars in the group.",name:"type",required:!1,type:{name:"enum",value:[{value:'"icon"'},{value:'"text"'},{value:'"img"'}]}},max:{defaultValue:{value:"5"},description:"The maximum number of avatars displayed before showing a counter.",name:"max",required:!1,type:{name:"number"}},counterProps:{defaultValue:null,description:"Props for customizing the counter display.",name:"counterProps",required:!1,type:{name:"AvatarGroupCounterVisualProps"}},counterTooltipCustomProps:{defaultValue:null,description:"Props passed to the Tooltip component. See full options in the [Tooltip documentation](https://vibe.monday.com/?path=/docs/components-tooltip--docs).",name:"counterTooltipCustomProps",required:!1,type:{name:"Partial<TooltipProps>"}},counterTooltipIsVirtualizedList:{defaultValue:{value:"false"},description:"If true, the counter tooltip uses a virtualized list for performance optimization.",name:"counterTooltipIsVirtualizedList",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"If true, the component is disabled and non-interactive.",name:"disabled",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}export{Y as A};
