import{j as i}from"./jsx-runtime-DDzbWKUH.js";import{useMDXComponents as l}from"./index-CXa8ra7y.js";import{M as d}from"./index-dE0vnNb5.js";import{N as c,O as h,S as u,a as x,V as v,b as f}from"./NumberField.stories-CkId73s7.js";import{c as j,D as b,o as g}from"./component-description-map-Bp5mAxZU.js";import{N as o}from"./NumberField-CVBVcutk.js";import{r as a}from"./usage-guidelines-CjZwxEOd.js";import{a as w}from"./component-rules-DmDpx3UD.js";import"./index-Hemj67b4.js";import"./_commonjsHelpers-BosuxZz1.js";import"./iframe-CI6kyxsg.js";import"./index-CcurGEUM.js";import"./index-D63y3F3s.js";import"./index-BedKbVpA.js";import"./index-DrFu-skq.js";import"./Flex-BEu-Gd_z.js";import"./index-BpvXyOxN.js";import"./useMergeRef-DQ4XPFxl.js";import"./useIsomorphicLayoutEffect-FdvxY73P.js";import"./ssr-utils-Do6V6AqB.js";import"./Clickable-A8m-5-d5.js";import"./useClickableProps-Cl-ObpBN.js";import"./function-utils-DXYBjL2Y.js";import"./test-ids-utils-CSfXomCJ.js";import"./noop-DX6rZLP_.js";import"./typesciptCssModulesHelper-Ji7rRrZn.js";import"./camelCase-CO1PkVrH.js";import"./withStaticProps-DfSG2La2.js";import"./Workspace-BIJf5qCK.js";import"./_tslib-Ct4JumdA.js";import"./createStoryMetaSettingsDecorator-CZWEfz_r.js";import"./index-VC5anwLh.js";import"./Invite-CWwo6O26.js";import"./AddSmall-WZFkNTzJ.js";import"./Calendar-BX7mDXzx.js";import"./Table-DKnXfo9h.js";import"./Check-B_icfwyn.js";import"./CloseSmall-CIab6kaf.js";import"./Settings-DOfpeGYp.js";import"./Drag-po37gvvh.js";import"./DropdownChevronDown-hX_A7Og1.js";import"./DropdownChevronRight-DGHOJF1-.js";import"./Wand-Cv7iNunW.js";import"./NewTab-CFmtLVc3.js";import"./Info-BB4o2YOm.js";import"./NavigationChevronRight-BM1UJa0v.js";import"./Remove-C7LZQ9Te.js";import"./ThumbsUp-DnZbk6gE.js";import"./Search-BxUBhs64.js";import"./SortDescending-B1UwxT6Q.js";import"./Upgrade-Jax58DJ-.js";import"./index-B-lxVbXh.js";import"./v4-CtRu48qb.js";import"./SplitButtonMenu-DG4UmXwF.js";import"./DialogConstants-DkeX1sw_.js";import"./Tooltip-WSo3miKz.js";import"./index-NFRdg0hY.js";import"./index-DLqmmtYJ.js";import"./index-8zVcErkr.js";import"./index-8rJYV3Dp.js";import"./CSSTransition-usT7-fC7.js";import"./extends-B6xKY8K9.js";import"./Icon-F8zJl_9g.js";import"./Button-iAbJtqkU.js";import"./Loader-BY1eCkzO.js";import"./sizes-BOsbvv4u.js";import"./DialogContentContainer-lbi8em3I.js";import"./useMenuItemKeyboardEvents-CHNh2wzx.js";import"./useFullKeyboardListeners-44yzp6oL.js";import"./index-CXrJR90Q.js";import"./MenuItem-YyKeXKKD.js";import"./useIsOverflowing-CkZDmDV4.js";import"./debounce-Bylel5eg.js";import"./Label-KTGr4Eue.js";import"./Text-A3hPU_Wc.js";import"./TypographyConstants--sIkucHi.js";import"./colors-vars-map-DOupSotq.js";import"./Divider-DLAtuxCi.js";import"./IconButton-t36CoXmh.js";import"./information-box-C2DnEpI4.js";import"./withStaticProps-DibdfTK_.js";import"./link-Dw3-1D-q.js";import"./ButtonGroup-BOAG40Mz.js";import"./Checkbox-Cl9NLtpg.js";import"./RadioButton-DRS-veGY.js";import"./Link-DBvHWVri.js";import"./Counter-OAq1fPNY.js";import"./index-BhJ9w1Ot.js";import"./SwitchTransition-BQCJMqAO.js";import"./Chips-BRwaCr9j.js";import"./Avatar-CX195UWp.js";import"./index-DxqC8EIR.js";import"./Toggle-DjfHd-vg.js";import"./index-DS1BdwZI.js";import"./Dropdown-CiV_NRIQ.js";import"./inheritsLoose-C4PSNlvh.js";import"./memoize-one.esm-CcMeOnPo.js";import"./TabList-Cp01vdzJ.js";import"./useGridKeyboardNavigation-Baegmm3H.js";import"./BreadcrumbItem-D7bIznL7.js";import"./AttentionBox-BvBzk5jV.js";import"./AlertBannerText-gem5I_yR.js";import"./Toast-CnY8_yAv.js";import"./MultiStepIndicator-CncNCDqv.js";import"./HiddenText-9a3j3pQH.js";import"./TipseenWizard-CRwZuX4V.js";import"./Steps-B6k_MkjE.js";import"./StepsGalleryHeader-DRE40DwL.js";import"./isArrayLike-CCcVsAV0.js";import"./toFinite-ClfBq1DX.js";import"./toNumber-DA38wwG6.js";import"./TextField-Bs9wAALp.js";import"./index-V5d9qz7E.js";import"./FieldLabel-CeCn2UGz.js";import"./Search-CCKm7GTu.js";import"./BaseInput-D7E1OPHx.js";import"./Combobox-M63Gh_Of.js";import"./index-Bs0C4iL5.js";import"./index-BMFTbhVI.js";import"./VirtualizedList-BH52-Hmi.js";import"./index.esm-CsnITLvm.js";import"./assertThisInitialized-B9jnkVVz.js";import"./react-virtualized-auto-sizer.esm-CuRSY4Lt.js";import"./virtualized-service-DqzQFWKL.js";import"./person1-D9Wcho68.js";import"./person3-B60Gf7uf.js";import"./AvatarGroup-CBGPWbQq.js";import"./MenuButton-DGa0Hw3g.js";import"./Skeleton-Csyq2sMb.js";import"./Heading-DOteyPGj.js";import"./LinearProgressBar-IlMQT4c0.js";import"./EditableHeading-DMUl1xSh.js";import"./EditableTypography-DxvsWVd0.js";import"./EditableText-BwZq_qSv.js";import"./ListItem-CvvMd_r2.js";import"./List-DOvlS-Ft.js";import"./Box-D9cKzrT2.js";import"./AccordionItem-98bYPMC2.js";import"./ExpandCollapse-BHbOWBcf.js";import"./VirtualizedList.stories.helpers-BcKCXt6n.js";import"./tip-BKixvd9t.js";import"./Flex-DaTSFknt.js";import"./ColorPicker-B1EIRv4v.js";import"./colors-utils-C1Q1nqOD.js";import"./Badge-Dd76ezcU.js";import"./Slider-dIQ_-kA4.js";import"./Table.stories.helpers-PJ3tE-af.js";import"./TableBody-Bb6FoWEe.js";import"./VirtualizedGrid.stories.helpers-RunykL0_.js";import"./useGridKeyboardNavigationContext.stories.helpers-B2edAqSg.js";import"./range-D3V44zw2.js";import"./MenuGridItem-DT6MPNgM.js";import"./_tslib-BMUU9Vyh.js";function m(t){const e={code:"code",div:"div",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...l(),...t.components},{Canvas:r,PropsTable:s,RelatedComponents:p}=e;return r||n("Canvas"),s||n("PropsTable"),p||n("RelatedComponents"),i.jsxs(i.Fragment,{children:[i.jsx(d,{of:c}),`
`,i.jsx(e.h1,{id:"numberfield",children:"NumberField"}),`
`,i.jsx(e.h2,{id:"overview",children:"Overview"}),`
`,i.jsxs(e.p,{children:["The ",i.jsx(e.code,{children:"NumberField"})," component provides an accessible, strictly numeric input with built-in vertical stepper controls for incrementing or decrementing values. It supports controlled usage, custom sizing, min/max clamping, and visual feedback states (error, success, disabled, read-only)."]}),`
`,i.jsx(r,{of:h}),`
`,i.jsx(e.h2,{id:"import-path",children:"Import path"}),`
`,i.jsx(e.pre,{children:i.jsx(e.code,{className:"language-tsx",children:`import { NumberField } from "@vibe/core";
`})}),`
`,i.jsx(e.h2,{id:"props",children:"Props"}),`
`,i.jsx(s,{}),`
`,i.jsx(e.h2,{id:"usage",children:"Usage"}),`
`,i.jsx(a,{guidelines:["Always pass both `value` and `onChange` props to use the component in controlled mode.","Use `min`, `max`, and `step` to enforce value boundaries and configure stepping behavior.","Use `allowOutOfBounds` when you want to allow users to enter invalid values and handle validation externally.","Leverage validation states (`error`, `success`) with `infoText` to provide clear feedback to users.","Apply `disabled` or `readOnly` states to prevent user interaction when necessary.","Use `step` to control increment/decrement granularity - defaults to 1 for whole numbers."]}),`
`,i.jsx(e.h2,{id:"accessibility",children:"Accessibility"}),`
`,i.jsx(a,{guidelines:[i.jsxs(i.Fragment,{children:["Using an ",i.jsx(e.code,{children:"id"})," is highly recommended for all instances to ensure the best accessibility."]}),i.jsxs(i.Fragment,{children:["Always provide a visible ",i.jsx(e.code,{children:"label"})," or an ",i.jsx(e.code,{children:"aria-label"})," to ensure the input's purpose is clear to all users."]}),i.jsxs(i.Fragment,{children:["When using ",i.jsx(e.code,{children:"label"})," or ",i.jsx(e.code,{children:"infoText"}),", you must also provide an ",i.jsx(e.code,{children:"id"}),". This is crucial, as it allows screen readers to correctly associate the input with its label and description."]}),i.jsxs(i.Fragment,{children:["Providing an ",i.jsx(e.code,{children:"id"})," also automatically links the Increment and Decrement buttons to the input via the"," ",i.jsx(e.code,{children:"aria-controls"})," attribute, further improving the experience for users of assistive technologies."]})]}),`
`,i.jsx(e.h2,{id:"variants",children:"Variants"}),`
`,i.jsx(e.h3,{id:"size-variants",children:"Size Variants"}),`
`,i.jsx(e.p,{children:"There are three sizes available: Small (32px), Medium (40px), and Large (48px)."}),`
`,i.jsx(r,{of:u}),`
`,i.jsx(e.h3,{id:"states",children:"States"}),`
`,i.jsx(e.p,{children:"Different states including success, error, disabled, and read-only with reactive validation feedback."}),`
`,i.jsx(r,{of:x}),`
`,i.jsx(e.h3,{id:"additional-variants",children:"Additional Variants"}),`
`,i.jsx(e.p,{children:"Examples with icons and informational text."}),`
`,i.jsx(r,{of:v}),`
`,i.jsx(e.h2,{id:"validation",children:"Validation"}),`
`,i.jsxs(e.p,{children:["The NumberField supports comprehensive validation with dynamic feedback. Use ",i.jsx(e.code,{children:"allowOutOfBounds"})," to permit invalid entries while providing real-time validation feedback."]}),`
`,i.jsx(r,{of:f}),`
`,i.jsx(e.h2,{id:"dos-and-donts",children:"Do's and Don'ts"}),`
`,i.jsx(w,{rules:[{positive:{component:i.jsx(e.div,{style:{width:"80%"},children:i.jsx(o,{value:25,onChange:()=>{},label:"Age",min:0,max:120,infoText:"Enter your age"})}),description:"Provide specific, descriptive labels and helpful context with explanatory helper text to clarify the expected input."},negative:{component:i.jsx(e.div,{style:{width:"80%"},children:i.jsx(o,{value:25,label:"Number",onChange:()=>{},infoText:"Enter a value"})}),description:"Avoid generic labels like 'Number' or 'Value'. The label should be specific about what the user needs to enter."}},{positive:{component:i.jsx(e.div,{style:{width:"80%"},children:i.jsx(o,{value:-5,onChange:()=>{},label:"Temperature (°C)",error:!0,infoText:"Temperature cannot be negative",min:0,allowOutOfBounds:!0})}),description:"When input is invalid, provide immediate visual feedback but allow the user to see and correct their entry."},negative:{component:i.jsx(e.div,{style:{width:"80%"},children:i.jsx(o,{value:-5,onChange:()=>{},label:"Temperature (°C)",error:!0,min:0,allowOutOfBounds:!0})}),description:"Don't show an error state without a clear explanation. Always provide a helpful message that guides the user to a valid input."}}]}),`
`,i.jsx(e.h2,{id:"related-components",children:"Related components"}),`
`,i.jsx(p,{componentsNames:[j,b,g]})]})}function ht(t={}){const{wrapper:e}={...l(),...t.components};return e?i.jsx(e,{...t,children:i.jsx(m,{...t})}):m(t)}function n(t,e){throw new Error("Expected component `"+t+"` to be defined: you likely forgot to import, pass, or provide it.")}export{ht as default};
