import{j as e}from"./jsx-runtime-lwGtIXvq.js";const p=({children:n=[]})=>e.jsx("ul",{children:n});try{functionarguments.displayName="functionarguments",functionarguments.__docgenInfo={description:"",displayName:"functionarguments",props:{}}}catch{}const g="_argument_1raim_1",f="_required_1raim_32",r={argument:g,"argument-name":"_argument-name_1raim_8","argument-type":"_argument-type_1raim_9",required:f},a=({children:n,name:i,type:d,description:s,default:u,required:l})=>e.jsxs("li",{className:r.argument,children:[i&&e.jsx("code",{className:r["argument-name"],children:i}),e.jsx("code",{className:r["argument-type"],children:d}),l&&e.jsx("span",{className:r.required,children:"*"}),s&&e.jsxs(e.Fragment,{children:[" - ",s]}),u&&e.jsxs(e.Fragment,{children:[" ","Defaults to: ",e.jsx("code",{children:u})]}),n&&e.jsx("ul",{children:n})]});try{functionargument.displayName="functionargument",functionargument.__docgenInfo={description:"",displayName:"functionargument",props:{name:{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string"}},type:{defaultValue:null,description:"",name:"type",required:!0,type:{name:"string"}},description:{defaultValue:null,description:"",name:"description",required:!1,type:{name:"string"}},default:{defaultValue:null,description:"",name:"default",required:!1,type:{name:"string"}},required:{defaultValue:null,description:"",name:"required",required:!1,type:{name:"boolean"}}}}}catch{}const _={component:p,title:"Storybook Blocks/FunctionArguments"},t={args:{children:e.jsxs(a,{name:"argument",type:"type",description:"Description of the argument",children:[e.jsx(a,{name:"callback",type:"(event: Event) => void",description:"Callback function to execute when the event is fired.",required:!0}),e.jsx(a,{name:"count",type:"number",description:"The number of items to process.",default:"0",required:!0})]})}};var o,c,m;t.parameters={...t.parameters,docs:{...(o=t.parameters)==null?void 0:o.docs,source:{originalSource:`{
  args: {
    children: <FunctionArgument name="argument" type="type" description="Description of the argument">
        <FunctionArgument name="callback" type="(event: Event) => void" description="Callback function to execute when the event is fired." required />
        <FunctionArgument name="count" type="number" description="The number of items to process." default="0" required />
      </FunctionArgument>
  }
}`,...(m=(c=t.parameters)==null?void 0:c.docs)==null?void 0:m.source}}};const y=["Overview"],x=Object.freeze(Object.defineProperty({__proto__:null,Overview:t,__namedExportsOrder:y,default:_},Symbol.toStringTag,{value:"Module"}));export{x as F,t as O};
