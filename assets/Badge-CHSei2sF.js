import{j as t}from"./jsx-runtime-lwGtIXvq.js";import{r as p}from"./index-CTZeEbLr.js";import{c as l}from"./index-BpvXyOxN.js";import{u as E}from"./useMergeRef-C008K4k9.js";import{g as T,b as y,a as S}from"./test-ids-utils-CSfXomCJ.js";import{b as a}from"./DialogConstants-DkeX1sw_.js";import{a as C,w as I}from"./withStaticProps-DfSG2La2.js";import{C as x}from"./Counter-MxuSPnc5.js";import{g as f}from"./typesciptCssModulesHelper-oFWQo8l_.js";import{c as D}from"./camelCase-CO1PkVrH.js";var h=(e=>(e.INDICATOR="indicator",e.COUNTER="counter",e))(h||{}),g=(e=>(e[e.TOP_START=a.TOP_START]="TOP_START",e[e.TOP_END=a.TOP_END]="TOP_END",e[e.BOTTOM_START=a.BOTTOM_START]="BOTTOM_START",e[e.BOTTOM_END=a.BOTTOM_END]="BOTTOM_END",e))(g||{}),b=(e=>(e.RECTANGULAR="rectangular",e.OUTSIDE="outside",e.CIRCULAR="circular",e))(b||{});const A="_indicator_ux5y0_1",M="_primary_ux5y0_6",L="_notification_ux5y0_9",_={indicator:A,primary:M,notification:L};var N=(e=>(e.PRIMARY="primary",e.NOTIFICATION="notification",e))(N||{});const d=({color:e="notification",className:r,id:i,"data-testid":o})=>t.jsx("div",{className:l(_.indicator,_[e],r),"data-testid":o||T(y.INDICATOR,i)}),w=C(d,{colors:N});try{d.displayName="Indicator",d.__docgenInfo={description:"",displayName:"Indicator",props:{color:{defaultValue:{value:"notification"},description:"The color of the indicator.",name:"color",required:!1,type:{name:"IndicatorColor"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const P="_badgeWrapper_1hzzf_1",j="_badge_1hzzf_1",B="_outside_1hzzf_9",k="_topEnd_1hzzf_13",W="_rectangular_1hzzf_13",U="_circular_1hzzf_23",G="_topStart_1hzzf_28",H="_bottomEnd_1hzzf_43",$="_bottomStart_1hzzf_58",n={badgeWrapper:P,badge:j,outside:B,topEnd:k,rectangular:W,circular:U,topStart:G,bottomEnd:H,bottomStart:$},u=p.forwardRef(({type:e="indicator",anchor:r="top-end",alignment:i="rectangular",className:o,id:c,"data-testid":q,children:O,...s},v)=>{const R=p.useRef(null),V=E(v,R),z=l(n.badge,f(n,D(r)),f(n,i)),m=s.color||e==="indicator"?"notification":"negative";return t.jsxs("div",{ref:V,className:l(n.badgeWrapper,o),id:c,"data-vibe":S.BADGE,children:[O,t.jsx("div",{className:z,"data-testid":q||T(y.BADGE,c),children:e==="indicator"?t.jsx(w,{color:m,...s}):e==="counter"&&t.jsx(x,{color:m,...s})})]})}),ne=I(u,{types:h,alignments:b,anchors:g});try{u.displayName="Badge",u.__docgenInfo={description:"",displayName:"Badge",props:{anchor:{defaultValue:{value:"top-end"},description:"The position of the badge relative to its parent.",name:"anchor",required:!1,type:{name:"BadgeAnchor"}},alignment:{defaultValue:{value:"rectangular"},description:"The alignment style of the badge.",name:"alignment",required:!1,type:{name:"BadgeAlignments"}},children:{defaultValue:null,description:"The content the badge is attached to.",name:"children",required:!0,type:{name:"ReactNode"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}},type:{defaultValue:{value:"indicator"},description:'The type of badge, set to `"counter"` for numeric values.\nThe type of badge, set to `"indicator"` for a simple dot.',name:"type",required:!1,type:{name:'"indicator" | "counter"'}},ariaLabeledBy:{defaultValue:null,description:"The ID of the element describing the counter.",name:"ariaLabeledBy",required:!1,type:{name:"string"}},counterClassName:{defaultValue:null,description:"Class name applied to the counter element.",name:"counterClassName",required:!1,type:{name:"string"}},count:{defaultValue:null,description:"The numeric value displayed in the counter.",name:"count",required:!1,type:{name:"number"}},ariaLabel:{defaultValue:null,description:"The label of the counter for accessibility.",name:"ariaLabel",required:!1,type:{name:"string"}},size:{defaultValue:null,description:"The size of the counter.",name:"size",required:!1,type:{name:"CounterSize"}},kind:{defaultValue:null,description:"The visual style of the counter.",name:"kind",required:!1,type:{name:"CounterType"}},color:{defaultValue:null,description:`The color of the counter.
The color of the indicator.`,name:"color",required:!1,type:{name:'"primary" | "negative" | "dark" | "light" | "notification"'}},maxDigits:{defaultValue:null,description:"The maximum number of digits displayed before truncation.",name:"maxDigits",required:!1,type:{name:"number"}},prefix:{defaultValue:null,description:"Text prepended to the counter value.",name:"prefix",required:!1,type:{name:"string"}},onMouseDown:{defaultValue:null,description:"Callback fired when the counter is clicked.",name:"onMouseDown",required:!1,type:{name:"(event: MouseEvent<HTMLSpanElement, MouseEvent>) => void"}},noAnimation:{defaultValue:null,description:"If true, disables counter animations.",name:"noAnimation",required:!1,type:{name:"boolean"}}}}}catch{}export{ne as B};
