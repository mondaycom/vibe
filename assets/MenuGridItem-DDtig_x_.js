import{r as o,R as p}from"./index-Hemj67b4.js";import{u as R}from"./useMergeRef-DQ4XPFxl.js";import{N as b}from"./useFullKeyboardListeners-CpRGyrUm.js";import{a as S,b as G,G as T}from"./useGridKeyboardNavigation-3hc_Zu7D.js";import{b as O}from"./useMenuItemKeyboardEvents-BQybGziJ.js";import{g as L,C as k}from"./test-ids-utils-9ISiqDto.js";const y=({wrapperRef:e,setActiveItemIndex:n,getPreviousSelectableIndex:r,getNextSelectableIndex:t,activeItemIndex:a,isUnderSubMenu:d,closeMenu:l})=>{const u=S([],e);return o.useMemo(()=>({onOutboundNavigation:(s,m)=>{switch(u.onOutboundNavigation(s,m),m){case b.UP:return n(r(a));case b.DOWN:return n(t(a));case b.LEFT:d&&l({})}}}),[u,n,r,a,t,d,l])};try{y.displayName="useMenuGridItemNavContext",y.__docgenInfo={description:"",displayName:"useMenuGridItemNavContext",props:{wrapperRef:{defaultValue:null,description:"",name:"wrapperRef",required:!1,type:{name:"MutableRefObject<HTMLElement> & { current?: HTMLElement & { disabled?: boolean; }; }"}},setActiveItemIndex:{defaultValue:null,description:"",name:"setActiveItemIndex",required:!1,type:{name:"(index: number) => void"}},getNextSelectableIndex:{defaultValue:null,description:"",name:"getNextSelectableIndex",required:!1,type:{name:"(activeItemIndex: number) => number"}},getPreviousSelectableIndex:{defaultValue:null,description:"",name:"getPreviousSelectableIndex",required:!1,type:{name:"(activeItemIndex: number) => number"}},activeItemIndex:{defaultValue:null,description:"",name:"activeItemIndex",required:!1,type:{name:"number"}},isUnderSubMenu:{defaultValue:null,description:"",name:"isUnderSubMenu",required:!1,type:{name:"boolean"}},closeMenu:{defaultValue:null,description:"",name:"closeMenu",required:!1,type:{name:"(option: CloseMenuOption) => void"}}}}}catch{}const v=({wrapperRef:e,childRef:n,index:r,activeItemIndex:t,useDocumentEventListeners:a=!1})=>{const{lastNavigationDirectionRef:d}=G(),l=o.useMemo(()=>r===t,[t,r]);o.useEffect(()=>{var u,i,s;a||(l?(u=n.current)==null||u.focus():(s=(i=e==null?void 0:e.current)==null?void 0:i.blur)==null||s.call(i))},[n,l,d,e,a])};try{v.displayName="useFocusGridItemByActiveStatus",v.__docgenInfo={description:"",displayName:"useFocusGridItemByActiveStatus",props:{wrapperRef:{defaultValue:null,description:"",name:"wrapperRef",required:!0,type:{name:"RefObject<HTMLElement>"}},childRef:{defaultValue:null,description:"",name:"childRef",required:!0,type:{name:"RefObject<HTMLElement>"}},index:{defaultValue:null,description:"",name:"index",required:!0,type:{name:"number"}},activeItemIndex:{defaultValue:null,description:"",name:"activeItemIndex",required:!0,type:{name:"number"}},useDocumentEventListeners:{defaultValue:{value:"false"},description:"",name:"useDocumentEventListeners",required:!1,type:{name:"boolean"}}}}}catch{}const I=o.forwardRef(({className:e,id:n,children:r,index:t,activeItemIndex:a=-1,closeMenu:d,getNextSelectableIndex:l,getPreviousSelectableIndex:u,setActiveItemIndex:i,setSubMenuIsOpenByIndex:s,isUnderSubMenu:m=!1,disabled:h=!1,useDocumentEventListeners:M=!1,"data-testid":q},V)=>{const f=o.useRef(null),_=R(V,f),g=o.useRef(),c=r&&p.Children.only(r);c||console.error("MenuGridItem can accept only a single element as first level child, this element is not valid: ",c);const N=o.useCallback(x=>{s(t,x),x&&i(t)},[t,i,s]),{focusWithinProps:C}=O({onFocusWithinChange:N});v({wrapperRef:f,childRef:g,activeItemIndex:a,index:t,useDocumentEventListeners:M});const E=y({wrapperRef:f,setActiveItemIndex:i,getPreviousSelectableIndex:u,getNextSelectableIndex:l,activeItemIndex:a,isUnderSubMenu:m,closeMenu:d});return p.createElement("section",{ref:_,className:e,id:n,"data-testid":q||L(k.MENU_GRID_ITEM,n),tabIndex:-1,role:"grid",...C},p.createElement(T.Provider,{value:E},p.cloneElement(c,{...c==null?void 0:c.props,disabled:h,ref:g})))});Object.assign(I,{isMenuChild:!0,isSelectable:!0});try{I.displayName="MenuGridItem",I.__docgenInfo={description:"",displayName:"MenuGridItem",props:{children:{defaultValue:null,description:"The content of the menu grid item.",name:"children",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>> | ReactElement<any, string | JSXElementConstructor<any>>[]"}},disabled:{defaultValue:{value:"false"},description:"If true, keyboard navigation will skip this item. This prop is also passed to the child.",name:"disabled",required:!1,type:{name:"boolean"}},closeMenu:{defaultValue:null,description:"A callback function to close the wrapping menu.",name:"closeMenu",required:!1,type:{name:"(option: CloseMenuOption) => void"}},activeItemIndex:{defaultValue:{value:"-1"},description:"The currently active index of the wrapping menu.",name:"activeItemIndex",required:!1,type:{name:"number"}},setActiveItemIndex:{defaultValue:null,description:"Callback function to set the active item index.",name:"setActiveItemIndex",required:!1,type:{name:"(index: number) => void"}},getNextSelectableIndex:{defaultValue:null,description:"Function to get the next selectable index.",name:"getNextSelectableIndex",required:!1,type:{name:"(activeItemIndex: number) => number"}},getPreviousSelectableIndex:{defaultValue:null,description:"Function to get the previous selectable index.",name:"getPreviousSelectableIndex",required:!1,type:{name:"(activeItemIndex: number) => number"}},index:{defaultValue:null,description:"The index of this menu grid item.",name:"index",required:!1,type:{name:"number"}},isUnderSubMenu:{defaultValue:{value:"false"},description:"If true, this item is under a submenu instead of a top-level menu.",name:"isUnderSubMenu",required:!1,type:{name:"boolean"}},setSubMenuIsOpenByIndex:{defaultValue:null,description:"Callback function to open or close a submenu by its index.",name:"setSubMenuIsOpenByIndex",required:!1,type:{name:"(index: number, isOpen: boolean) => void"}},useDocumentEventListeners:{defaultValue:{value:"false"},description:"If true, event listeners will be attached to the document.",name:"useDocumentEventListeners",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}export{I as M};
