import{j as e}from"./jsx-runtime-lwGtIXvq.js";import{useMDXComponents as p}from"./index-BfNsOeqz.js";import{M as s,C as a}from"./index-BnwX2cN0.js";import{V as d,O as l}from"./VirtualizedGrid.stories-8G_zZHLD.js";import{r as c}from"./usage-guidelines-DaF3e-2f.js";import"./index-CTZeEbLr.js";import"./_commonjsHelpers-BosuxZz1.js";import"./iframe-C2xNG56n.js";import"./index-bWNNYTW-.js";import"./index-BrqHMYbN.js";import"./index-BedKbVpA.js";import"./index-DrFu-skq.js";import"./VirtualizedGrid.stories.helpers-DvS0gFks.js";import"./index-BpvXyOxN.js";import"./index.esm-B4DTZ0aw.js";import"./extends-B6xKY8K9.js";import"./assertThisInitialized-B9jnkVVz.js";import"./CSSTransition-CWtXmFMf.js";import"./memoize-one.esm-CcMeOnPo.js";import"./react-virtualized-auto-sizer.esm-CJUwJr1b.js";import"./virtualized-service-0gNRWI3d.js";import"./debounce-D3NSP8gs.js";import"./index-BxdhJjph.js";import"./useIsomorphicLayoutEffect-BBiFUoiz.js";import"./ssr-utils-Do6V6AqB.js";import"./useMergeRef-Do2VYePL.js";import"./function-utils-C5K4iOy1.js";import"./test-ids-utils-B1IbFLmr.js";import"./Text-BwLUW2oo.js";import"./typesciptCssModulesHelper-Ji7rRrZn.js";import"./TypographyConstants-BPC4crwB.js";import"./useIsOverflowing-CqkoFCDi.js";import"./Tooltip-CT7Hoq9W.js";import"./index-Bt5DuqPA.js";import"./index-CkU0kzyk.js";import"./index-gB5zY9qh.js";import"./index-BGSF-Nm4.js";import"./useClickableProps-BJf5EuJX.js";import"./camelCase-CO1PkVrH.js";import"./DialogConstants-DkeX1sw_.js";import"./Flex-DYzKCQWz.js";import"./Clickable-B9_U6rsC.js";import"./noop-DX6rZLP_.js";import"./withStaticProps-DfSG2La2.js";import"./Icon-BxXV8fvZ.js";import"./withStaticProps-DoUMAG04.js";import"./Button-BcV-q4GT.js";import"./Loader-XtPXB_TQ.js";function n(r){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...p(),...r.components},{PropsTable:o,RelatedComponents:t}=i;return o||m("PropsTable"),t||m("RelatedComponents"),e.jsxs(e.Fragment,{children:[e.jsx(s,{of:d}),`
`,e.jsx(i.h1,{id:"virtualizedgrid",children:"VirtualizedGrid"}),`
`,e.jsx(i.p,{children:"VirtualizedGrid is a component which only renders visible grid items, it is a logic component and doesn't change and look and feel"}),`
`,e.jsxs(i.p,{children:["Under the hood we are using - ",e.jsx(i.a,{href:"https://github.com/bvaughn/react-window",rel:"nofollow",children:"react-window"})," and ",e.jsx(i.a,{href:"https://github.com/bvaughn/react-virtualized-auto-sizer",rel:"nofollow",children:"react-virtualized-auto-sizer"})]}),`
`,e.jsx(a,{of:l}),`
`,e.jsx(i.h3,{id:"import",children:"Import"}),`
`,e.jsx(i.pre,{children:e.jsx(i.code,{className:"language-js",children:`import { VirtualizedGrid } from "@vibe/core";
`})}),`
`,e.jsx(i.h2,{id:"props",children:"Props"}),`
`,e.jsx(o,{}),`
`,e.jsx(i.h2,{id:"usage",children:"Usage"}),`
`,e.jsx(c,{guidelines:["Use this component to implement a grid with many items or when each item render has heavy calculations.","Rendering only the visible grid items instead of all the grid's items will create better performance and a smoother experience for users while using the grid."]}),`
`,e.jsx(i.h2,{id:"related-components",children:"Related components"}),`
`,e.jsx(t,{componentsNames:["Table","VirtualizedList","MenuGridItem"]})]})}function pe(r={}){const{wrapper:i}={...p(),...r.components};return i?e.jsx(i,{...r,children:e.jsx(n,{...r})}):n(r)}function m(r,i){throw new Error("Expected component `"+r+"` to be defined: you likely forgot to import, pass, or provide it.")}export{pe as default};
