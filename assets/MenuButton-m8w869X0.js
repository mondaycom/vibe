import{r as a,R as i}from"./index-Hemj67b4.js";import{c as be}from"./index-BpvXyOxN.js";import{r as _e}from"./CSSTransition-usT7-fC7.js";import{D as n,T as Ee}from"./Tooltip-CEg_DCyQ.js";import{D as T}from"./DialogContentContainer-BmCeWtAc.js";import{u as we}from"./useIsomorphicLayoutEffect-FdvxY73P.js";import{u as Se}from"./useMergeRef-DQ4XPFxl.js";import{a as Ve,S as qe}from"./Button-t0_MS1N7.js";import{H as Ie,b as Me,D as Oe}from"./DialogConstants-DkeX1sw_.js";import{N as y}from"./function-utils-6EQ2u6TA.js";import{g as K}from"./typesciptCssModulesHelper-Ji7rRrZn.js";import{a as xe,g as Ne,C as ze}from"./test-ids-utils-9ISiqDto.js";import{r as Ae}from"./Workspace-BIJf5qCK.js";import{c as De}from"./camelCase-B8c2Dc7Y.js";import{w as Pe}from"./withStaticProps-DfSG2La2.js";var H=(t=>(t.XXS="xxs",t.XS="xs",t.SMALL="small",t.MEDIUM="medium",t.LARGE="large",t))(H||{}),Y=(t=>(t.START="start",t.END="end",t))(Y||{});const ke="_wrapper_17m2u_2",Le="_active_17m2u_56",Re="_sizeXxs_17m2u_68",Be="_sizeXs_17m2u_76",Ke="_sizeSmall_17m2u_84",Ue="_sizeMedium_17m2u_92",Xe="_sizeLarge_17m2u_101",He="_disabled_17m2u_110",Ye="_text_17m2u_121",Fe="_innerText_17m2u_125",r={wrapper:ke,"focus-visible":"_focus-visible_17m2u_28",active:Le,sizeXxs:Re,sizeXs:Be,sizeSmall:Ke,sizeMedium:Ue,sizeLarge:Xe,disabled:He,text:Ye,innerText:Fe},U={main:8,secondary:0},X=[n.hideShowTriggers.ESCAPE_KEY,n.hideShowTriggers.TAB_KEY],C=a.forwardRef(({id:t,className:F,openDialogComponentClassName:b,children:_,component:W=Ae,componentPosition:E="start",size:c="small",open:f=!1,onClick:Z=y,zIndex:$=null,ariaLabel:G="Menu",closeMenuOnItemClick:w,dialogOffset:S=U,dialogPosition:j=n.positions.BOTTOM_START,dialogClassName:J,dialogPaddingSize:V=T.sizes.SMALL,dialogShowTriggerIgnoreClass:Q,dialogHideTriggerIgnoreClass:ee,onMenuHide:q=y,onMenuShow:I=y,disabled:u=!1,text:m,tooltipContent:te,tooltipProps:ae,tooltipTriggers:ne=["mouseleave"],tooltipPosition:ie="right",startingEdge:oe="bottom",removeTabCloseTrigger:M=!1,tooltipReferenceClassName:re,hideWhenReferenceHidden:O=!0,dialogContainerSelector:le,active:se,triggerElement:g="button",showTooltipOnlyOnTriggerElement:ue,"data-testid":de,closeDialogOnContentClick:x=!1,ariaControls:me},pe)=>{const N=a.useRef(null),z=Se(pe,N),[l,d]=a.useState(f),A=se??l,p=a.useCallback(e=>{q(),d(!1);const o=N.current;!o||!e||window.requestAnimationFrame(()=>{o.focus()})},[q]),D=a.useCallback(e=>{const o=X.includes(e.key);(o||w)&&e.propagate&&p(o)},[w,p]),ce=a.useCallback((e,o)=>{p(l&&X.includes(o))},[p,l]),fe=a.useCallback(()=>{d(!0),I()},[d,I]),[h,ge]=a.useMemo(()=>{const e=new Set([n.hideShowTriggers.CLICK_OUTSIDE,n.hideShowTriggers.TAB_KEY,n.hideShowTriggers.ESCAPE_KEY]);return x&&(e.add(n.hideShowTriggers.CONTENT_CLICK),e.add(n.hideShowTriggers.ENTER)),M&&e.delete(n.hideShowTriggers.TAB_KEY),[i.Children.toArray(_).map(s=>{if(!i.isValidElement(s))return null;const v={};return s.type&&s.type.supportFocusOnMount&&(v.focusOnMount=!0,e.delete(n.hideShowTriggers.ESCAPE_KEY)),s.type&&s.type.isMenu&&(v.onClose=D),i.cloneElement(s,v)}),Array.from(e)]},[_,D,x,M]),he=a.useMemo(()=>h.length===0?null:i.createElement(T,{size:V,type:T.types.POPOVER},h),[h,V]),ve=a.useMemo(()=>({...U,...S}),[S]),Te=e=>{if(u){e.currentTarget.blur();return}Z(e)},P=W,ye=a.useMemo(()=>{switch(c){case"xxs":case"xs":return qe;case"small":case"medium":case"large":return Ve;default:return 24}},[c]),k=P?i.createElement(P,{size:ye.toString(),role:"img","aria-hidden":"true"}):null;we(()=>{d(f)},[f,d]);const Ce=g==="button"?{ref:z}:{active:A,disabled:u,ref:_e.isForwardRef(g)?z:void 0},L=i.createElement(g,{id:t,"data-testid":de||Ne(ze.MENU_BUTTON,t),"data-vibe":xe.MENU_BUTTON,type:"button",className:be(r.wrapper,F,K(r,De(`size-${c}`)),{[r.active]:A,[K(r,b)]:l&&b,[r.disabled]:u,[r.text]:m}),"aria-haspopup":"true","aria-expanded":l,"aria-controls":me,"aria-label":!m&&G,onMouseUp:Te,"aria-disabled":u,...Ce},E==="start"&&k,m&&i.createElement("span",{className:r.innerText},m),E==="end"&&k),R=e=>i.createElement(n,{wrapperClassName:J,position:j,containerSelector:le,startingEdge:oe,animationType:"expand",content:he,moveBy:ve,showTrigger:u?[]:["click","enter"],hideTrigger:ge,showTriggerIgnoreClass:Q,hideTriggerIgnoreClass:ee,useDerivedStateFromProps:!0,onDialogDidShow:fe,onDialogDidHide:ce,zIndex:$,isOpen:l,hideWhenReferenceHidden:O},e),B=e=>i.createElement(Ee,{content:te,position:ie,showTrigger:"mouseenter",hideTrigger:ne,referenceWrapperClassName:re,hideWhenReferenceHidden:O,...ae},e);return ue?R(B(L)):B(R(L))}),ut=Pe(C,{sizes:H,paddingSizes:Oe,dialogPositions:Me,hideTriggers:Ie,componentPositions:Y});try{C.displayName="MenuButton",C.__docgenInfo={description:"",displayName:"MenuButton",props:{active:{defaultValue:null,description:"If true, the button is in an active state.",name:"active",required:!1,type:{name:"boolean"}},openDialogComponentClassName:{defaultValue:null,description:"Class name applied to the button when the dialog is open.",name:"openDialogComponentClassName",required:!1,type:{name:"string"}},component:{defaultValue:null,description:"The component used as the button icon.",name:"component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements> | (() => Element)"}},size:{defaultValue:{value:"small"},description:"The size of the button.",name:"size",required:!1,type:{name:"enum",value:[{value:'"xs"'},{value:'"small"'},{value:'"large"'},{value:'"xxs"'},{value:'"medium"'}]}},open:{defaultValue:{value:"false"},description:"If true, the menu is open.",name:"open",required:!1,type:{name:"boolean"}},onClick:{defaultValue:null,description:"Callback fired when the button is clicked.",name:"onClick",required:!1,type:{name:"(event: MouseEvent<Element, MouseEvent>) => void"}},zIndex:{defaultValue:{value:"null"},description:"The z-index of the menu.",name:"zIndex",required:!1,type:{name:"number"}},ariaLabel:{defaultValue:{value:"Menu"},description:"The label of the button for accessibility.",name:"ariaLabel",required:!1,type:{name:"string"}},dialogClassName:{defaultValue:null,description:"Class name applied to the menu dialog wrapper.",name:"dialogClassName",required:!1,type:{name:"string"}},dialogOffset:{defaultValue:{value:"{ main: 8, secondary: 0 }"},description:"The offset of the menu relative to the button.",name:"dialogOffset",required:!1,type:{name:"DialogOffset"}},dialogPaddingSize:{defaultValue:{value:"DialogContentContainer.sizes.SMALL"},description:"The padding size inside the menu dialog.",name:"dialogPaddingSize",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"large"'},{value:'"medium"'},{value:'"none"'}]}},dialogPosition:{defaultValue:{value:"Dialog.positions.BOTTOM_START"},description:"The position of the menu dialog relative to the button.",name:"dialogPosition",required:!1,type:{name:"enum",value:[{value:'"top-start"'},{value:'"top-end"'},{value:'"bottom-start"'},{value:'"bottom-end"'},{value:'"top"'},{value:'"right"'},{value:'"bottom"'},{value:'"left"'},{value:'"left-start"'},{value:'"left-end"'},{value:'"right-start"'},{value:'"right-end"'}]}},dialogShowTriggerIgnoreClass:{defaultValue:null,description:"Classes that prevent showing the dialog when present.",name:"dialogShowTriggerIgnoreClass",required:!1,type:{name:"string | string[]"}},dialogHideTriggerIgnoreClass:{defaultValue:null,description:"Classes that prevent hiding the dialog when present.",name:"dialogHideTriggerIgnoreClass",required:!1,type:{name:"string | string[]"}},dialogContainerSelector:{defaultValue:null,description:"The container selector in which to append the dialog.",name:"dialogContainerSelector",required:!1,type:{name:"string"}},startingEdge:{defaultValue:{value:"bottom"},description:"The starting edge alignment of the menu.",name:"startingEdge",required:!1,type:{name:"string"}},onMenuShow:{defaultValue:null,description:"Callback fired when the menu is shown.",name:"onMenuShow",required:!1,type:{name:"() => void"}},onMenuHide:{defaultValue:null,description:"Callback fired when the menu is hidden.",name:"onMenuHide",required:!1,type:{name:"() => void"}},text:{defaultValue:null,description:"The text displayed inside the button.",name:"text",required:!1,type:{name:"string"}},disabled:{defaultValue:{value:"false"},description:"If true, the button is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},tooltipContent:{defaultValue:null,description:"The tooltip content displayed when hovering over the button.",name:"tooltipContent",required:!1,type:{name:"string"}},removeTabCloseTrigger:{defaultValue:{value:"false"},description:"If true, removes the tab key from the hide trigger.",name:"removeTabCloseTrigger",required:!1,type:{name:"boolean"}},tooltipTriggers:{defaultValue:{value:'["mouseleave"]'},description:"The triggers that cause the tooltip to show or hide.",name:"tooltipTriggers",required:!1,type:{name:"DialogTriggerEvent | DialogTriggerEvent[]"}},tooltipPosition:{defaultValue:{value:"right"},description:"The position of the tooltip.",name:"tooltipPosition",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"right"'},{value:'"bottom"'},{value:'"left"'}]}},tooltipReferenceClassName:{defaultValue:null,description:"Class name applied to the tooltip reference wrapper.",name:"tooltipReferenceClassName",required:!1,type:{name:"string"}},tooltipProps:{defaultValue:null,description:"Additional props for customizing the tooltip.",name:"tooltipProps",required:!1,type:{name:"Partial<TooltipProps>"}},hideWhenReferenceHidden:{defaultValue:{value:"true"},description:"If true, hides the menu and tooltip when the button is not visible.",name:"hideWhenReferenceHidden",required:!1,type:{name:"boolean"}},children:{defaultValue:null,description:"The content inside the menu button.",name:"children",required:!1,type:{name:"ElementContent"}},componentPosition:{defaultValue:{value:"start"},description:"The position of the component relative to the text.",name:"componentPosition",required:!1,type:{name:"enum",value:[{value:'"start"'},{value:'"end"'}]}},triggerElement:{defaultValue:null,description:"The element used as the trigger for the menu.",name:"triggerElement",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},closeMenuOnItemClick:{defaultValue:null,description:"If true, closes the menu when a menu item is clicked.",name:"closeMenuOnItemClick",required:!1,type:{name:"boolean"}},showTooltipOnlyOnTriggerElement:{defaultValue:null,description:"If true, the tooltip appears only when hovering over the trigger element, not the menu dialog.",name:"showTooltipOnlyOnTriggerElement",required:!1,type:{name:"boolean"}},closeDialogOnContentClick:{defaultValue:{value:"false"},description:"If true, closes the menu when clicking inside the dialog.",name:"closeDialogOnContentClick",required:!1,type:{name:"boolean"}},ariaControls:{defaultValue:null,description:"The ARIA control of the menu button for accessibility.",name:"ariaControls",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}export{ut as M};
