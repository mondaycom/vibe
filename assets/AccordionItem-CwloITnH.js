import{c as q}from"./index-BpvXyOxN.js";import{r as n,R as p}from"./index-Hemj67b4.js";import{u as V}from"./useMergeRef-DQ4XPFxl.js";import{a as b}from"./test-ids-utils-9ISiqDto.js";import{E as A}from"./ExpandCollapse-DjAK6fYO.js";const k="_accordion_1vrah_1",R="_accordionItemExpandCollapse_1vrah_8",S="_accordionItemExpandCollapseLast_1vrah_16",_={accordion:k,accordionItemExpandCollapse:R,accordionItemExpandCollapseLast:S},N="monday-accordion";function T(t,o,i){return o.id?o.id:i?`${i}--item-${t}`:`${N}--item-${t}`}const v=n.forwardRef(({children:t=null,allowMultiple:o=!1,"data-testid":i=N,defaultIndex:h=[],className:y="",id:s},g)=>{const u=n.useRef(null),m=V(g,u),[d,f]=n.useState(h),c=n.useMemo(()=>p.Children.toArray(t),[t]),l=n.useCallback(e=>d.includes(e),[d]),C=n.useCallback(e=>{if(o){const a=[...d];if(l(e)){const r=a.indexOf(e);r>-1&&a.splice(r,1)}else a.push(e);f(a);return}l(e)?f([]):f([e])},[l,d,o]),E=n.useMemo(()=>p.Children.map(c,(e,a)=>{const r={...e==null?void 0:e.props},I=T(a,r,s);return p.cloneElement(e,{...r,id:I,onClickAccordionCallback:()=>{C(a)},open:l(a),expandCollapseComponentClassName:q(_.accordionItemExpandCollapse,{[_.accordionItemExpandCollapseLast]:a===c.length-1})})}),[c,s,l,C]);return p.createElement("div",{ref:m,className:q(_.accordion,y),"data-testid":i,"data-vibe":b.ACCORDION,id:s},c&&E)});try{v.displayName="Accordion",v.__docgenInfo={description:"",displayName:"Accordion",props:{children:{defaultValue:null,description:"The content of the accordion (`AccordionItem` components).",name:"children",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>> | ReactElement<any, string | JSXElementConstructor<any>>[]"}},allowMultiple:{defaultValue:{value:"false"},description:"If true, multiple accordion items can be expanded at the same time.",name:"allowMultiple",required:!1,type:{name:"boolean"}},defaultIndex:{defaultValue:{value:"[]"},description:"An array of initially expanded item indexes.",name:"defaultIndex",required:!1,type:{name:"number[]"}},className:{defaultValue:{value:""},description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const x=n.forwardRef(({children:t=null,title:o="",className:i="",iconSize:h=24,iconPosition:y="right",id:s,open:g,onClick:u,onClickAccordionCallback:m,hideBorder:d=!1,headerClassName:f,contentClassName:c,expandCollapseComponentClassName:l,captureOnClick:C=!0},E)=>{const e=n.useRef(null),a=V(E,e),r=n.useCallback(()=>{m&&m(),u&&u()},[m,u]);return p.createElement("div",{ref:a,className:i,id:s},p.createElement(A,{iconSize:h,iconPosition:y,id:`expand-collapse--${s}`,onClick:r,open:g,title:o,hideBorder:d,componentClassName:l,headerClassName:f,contentClassName:c,captureOnClick:C},t))});try{x.displayName="AccordionItem",x.__docgenInfo={description:"",displayName:"AccordionItem",props:{title:{defaultValue:{value:""},description:"The header content displayed in the accordion item.",name:"title",required:!1,type:{name:"ElementContent"}},children:{defaultValue:{value:"null"},description:"The content rendered inside the accordion item.",name:"children",required:!1,type:{name:"ElementContent"}},iconSize:{defaultValue:{value:"24"},description:"The size of the expand/collapse icon.",name:"iconSize",required:!1,type:{name:"string | number"}},iconPosition:{defaultValue:{value:"right"},description:"The position of the expand/collapse icon.",name:"iconPosition",required:!1,type:{name:"enum",value:[{value:'"right"'},{value:'"left"'}]}},onClick:{defaultValue:null,description:"Callback fired upon item click.",name:"onClick",required:!1,type:{name:"() => void"}},open:{defaultValue:null,description:"@ignore",name:"open",required:!1,type:{name:"boolean"}},onClickAccordionCallback:{defaultValue:null,description:"@ignore",name:"onClickAccordionCallback",required:!1,type:{name:"() => void"}},hideBorder:{defaultValue:{value:"false"},description:"If true, the accordion item's border is hidden.",name:"hideBorder",required:!1,type:{name:"boolean"}},headerClassName:{defaultValue:null,description:"Class name applied to the accordion item's header.",name:"headerClassName",required:!1,type:{name:"string"}},contentClassName:{defaultValue:null,description:"Class name applied to the accordion item's content.",name:"contentClassName",required:!1,type:{name:"string"}},expandCollapseComponentClassName:{defaultValue:null,description:"Class name applied to the expand/collapse component.",name:"expandCollapseComponentClassName",required:!1,type:{name:"string"}},captureOnClick:{defaultValue:{value:"true"},description:"If true, the click event is handled during the capture phase.",name:"captureOnClick",required:!1,type:{name:"boolean"}},className:{defaultValue:{value:""},description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}export{v as A,x as a};
