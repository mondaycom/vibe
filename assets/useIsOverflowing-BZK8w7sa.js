import{j as t}from"./jsx-runtime-DDzbWKUH.js";import{useMDXComponents as a}from"./index-CXa8ra7y.js";import{M as h,C as l}from"./index-DyTgX6-N.js";import{R as i}from"./index-Hemj67b4.js";import{l as d}from"./tip-BKixvd9t.js";import{m as n}from"./storybook-link-CyTpmT3K.js";import{U as f,O as x}from"./useIsOverflowing.stories-BlJwvivb.js";import{e as m,d as s}from"./function-arguments-cT2l_yKe.js";import{n as p}from"./link-ByEAMSgF.js";import"./iframe-8ZdQW_d5.js";import"./index-DGErypBa.js";import"./index-D63y3F3s.js";import"./_commonjsHelpers-BosuxZz1.js";import"./index-BedKbVpA.js";import"./index-DrFu-skq.js";import"./index-BpvXyOxN.js";import"./Flex-DaTSFknt.js";import"./withStaticProps-DibdfTK_.js";import"./_tslib-BMUU9Vyh.js";import"./useIsOverflowing-DshK7x5b.js";import"./debounce-D-uO1lYf.js";import"./isObject-C3e4t58V.js";import"./_baseGetTag-ENn7h-yl.js";import"./toNumber-CBHRrcgy.js";import"./isSymbol-DWIQbemu.js";import"./TextField-Dc_mArgZ.js";import"./index-CxHVRCQs.js";import"./noop-DX6rZLP_.js";import"./Icon-zHybxhV-.js";import"./test-ids-utils-9ISiqDto.js";import"./useMergeRef-DQ4XPFxl.js";import"./useIsomorphicLayoutEffect-FdvxY73P.js";import"./ssr-utils-Do6V6AqB.js";import"./index-DLqmmtYJ.js";import"./index-8zVcErkr.js";import"./function-utils-6EQ2u6TA.js";import"./isArray-Dxzbedgu.js";import"./withStaticProps-DfSG2La2.js";import"./Loader-DF-6VJjt.js";import"./Text-B2fubIt7.js";import"./typesciptCssModulesHelper-Ji7rRrZn.js";import"./TypographyConstants-CKbCiKDn.js";import"./Tooltip-C_-kbcOd.js";import"./index-NFRdg0hY.js";import"./index-8rJYV3Dp.js";import"./CSSTransition-usT7-fC7.js";import"./extends-B6xKY8K9.js";import"./camelCase-B8c2Dc7Y.js";import"./eq-DPGIUuQ3.js";import"./DialogConstants-DkeX1sw_.js";import"./Flex-DIvs4XZj.js";import"./Clickable-L_6z1d8K.js";import"./useClickableProps-BnhuEIMR.js";import"./FieldLabel-DfmdapVI.js";import"./sizes-BOsbvv4u.js";import"./HiddenText-CpgCxLLU.js";const j=()=>i.createElement(d,{title:"What to do when overflow is detected?"},"You might want to use"," ",i.createElement(n,{size:n.sizes.SMALL,page:"Components/Tooltip"},"Tooltip")," ","to display all the content.");function c(e){const o={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...a(),...e.components},{UsageGuidelines:r}=o;return r||u("UsageGuidelines"),t.jsxs(t.Fragment,{children:[t.jsx(h,{of:f}),`
`,t.jsx(o.h1,{id:"useisoverflowing",children:"useIsOverflowing"}),`
`,t.jsx(o.p,{children:"Use this hook, when there is a chance that content won't fit into the container, to track if overflow occurs."}),`
`,t.jsx(l,{of:x}),`
`,t.jsx(o.h3,{id:"import",children:"Import"}),`
`,t.jsx(o.pre,{children:t.jsx(o.code,{className:"language-js",children:`import { useIsOverflowing } from "@vibe/core/hooks";
`})}),`
`,t.jsx(o.h2,{id:"usage",children:"Usage"}),`
`,t.jsx(r,{guidelines:["Use this when content might not fit into it's container."]}),`
`,t.jsx(j,{}),`
`,t.jsx(o.h2,{id:"arguments",children:"Arguments"}),`
`,t.jsx(m,{children:t.jsx(s,{name:"ref",type:"React.MutableRefObject",description:t.jsxs(t.Fragment,{children:["A React",t.jsx(p,{size:p.sizes.MEDIUM,href:"https://react.dev/reference/react/useRef",children:"ref"}),"object for the container of likely to overflow content."]})})}),`
`,t.jsx(o.h2,{id:"returns",children:"Returns"}),`
`,t.jsx(m,{children:t.jsx(s,{name:"isOverflowing",type:"bool",description:t.jsx(t.Fragment,{children:"Is content overflow the container."})})})]})}function vt(e={}){const{wrapper:o}={...a(),...e.components};return o?t.jsx(o,{...e,children:t.jsx(c,{...e})}):c(e)}function u(e,o){throw new Error("Expected component `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}export{vt as default};
