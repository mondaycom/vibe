import{g as q}from"./typesciptCssModulesHelper-Ji7rRrZn.js";import{g as _,C as h}from"./test-ids-utils-9ISiqDto.js";import{c as i}from"./index-BpvXyOxN.js";import{R as a,r as v}from"./index-Hemj67b4.js";import{c as le,E as $}from"./colors-vars-map-DOupSotq.js";import{I as D,C as ne,i as x}from"./Icon-zHybxhV-.js";import{c as A}from"./camelCase-B8c2Dc7Y.js";import{a as R}from"./withStaticProps-DfSG2La2.js";import{T as re}from"./Tooltip-C_-kbcOd.js";import{C as se}from"./Clickable-L_6z1d8K.js";const z={positive:"--positive-color-selected",negative:"--negative-color-selected",primary:"--primary-selected-color",warning:"--warning-color-selected"},X={positive:"--positive-color-selected-hover",negative:"--negative-color-selected-hover",primary:"--primary-selected-hover-color"};function ie(e,l=!1,o=!1){return le.includes(e)?`var(--color-${e}${l?"-selected":""})`:Object.keys(X).includes(e)&&o?`var(${X[e]})`:Object.keys(z).includes(e)&&l?`var(${z[e]})`:e}var P=(e=>(e.IMG="img",e.ICON="icon",e.TEXT="text",e))(P||{}),C=(e=>(e.XS="xs",e.SMALL="small",e.MEDIUM="medium",e.LARGE="large",e))(C||{});const oe="_badgeLarge_1f26z_1",de="_badgeMedium_1f26z_6",ue="_badgeSmall_1f26z_11",ce="_badgeXs_1f26z_12",me={badgeLarge:oe,badgeMedium:de,badgeSmall:ue,badgeXs:ce},S=({src:e,icon:l,tabIndex:o=0,className:c,size:m="large",id:n,"data-testid":p,...g})=>{const r=i(q(me,A("badge--"+m)),c),s=p||_(h.AVATAR_BADGE,n);return l?a.createElement(D,{icon:l,className:r,...g,"data-testid":s}):e?a.createElement(ne,{src:e,className:r,clickable:o===-1,...g,"data-testid":s}):null},T=R(S,{sizes:C});try{S.displayName="AvatarBadge",S.__docgenInfo={description:"",displayName:"AvatarBadge",props:{src:{defaultValue:null,description:"The image source for the badge.",name:"src",required:!1,type:{name:"string"}},icon:{defaultValue:null,description:"The icon displayed inside the badge.",name:"icon",required:!1,type:{name:"SubIcon"}},tabIndex:{defaultValue:{value:"0"},description:"The tab index of the badge.",name:"tabIndex",required:!1,type:{name:"string | number"}},size:{defaultValue:{value:"large"},description:"The size of the badge.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"xs"'},{value:'"medium"'},{value:'"large"'}]}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const pe="_contentImg_xr8it_1",fe="_contentText_xr8it_7",ve="_contentTextLarge_xr8it_19",ge="_contentTextMedium_xr8it_27",be="_contentTextSmall_xr8it_32",_e="_contentTextXs_xr8it_37",he="_contentIconLarge_xr8it_42",ye="_contentIconMedium_xr8it_47",xe="_contentIconSmall_xr8it_52",O={contentImg:pe,contentText:fe,contentTextLarge:ve,contentTextMedium:ge,contentTextSmall:be,contentTextXs:_e,contentIconLarge:he,contentIconMedium:ye,contentIconSmall:xe},M=({type:e="text",src:l,icon:o,text:c,ariaLabel:m,role:n,size:p="large",textClassName:g="",id:r,"data-testid":s})=>{const u=i(q(O,A("content_"+e)),q(O,A("content_"+e+"--"+p)));switch(e){case"img":return a.createElement("img",{role:n,alt:m,src:l,className:u,id:r,"data-testid":s||_(h.AVATAR_CONTENT,r)});case"icon":return a.createElement(D,{icon:o,"aria-label":m,className:u,ariaHidden:!1,id:r,"data-testid":s||_(h.AVATAR_CONTENT,r)});case"text":return a.createElement("span",{"aria-label":m,role:n,className:i(u,g),id:r,"data-testid":s||_(h.AVATAR_CONTENT,r)},c);default:return null}},Te=R(M,{sizes:C,types:P});try{M.displayName="AvatarContent",M.__docgenInfo={description:"",displayName:"AvatarContent",props:{src:{defaultValue:null,description:"The image source when the type is set to `img`.",name:"src",required:!1,type:{name:"string"}},type:{defaultValue:{value:"text"},description:"The type of content displayed inside the avatar.",name:"type",required:!1,type:{name:"enum",value:[{value:'"icon"'},{value:'"text"'},{value:'"img"'}]}},size:{defaultValue:{value:"large"},description:"The size of the avatar content.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"xs"'},{value:'"medium"'},{value:'"large"'}]}},role:{defaultValue:null,description:"The ARIA role of the content.",name:"role",required:!1,type:{name:"string"}},ariaLabel:{defaultValue:null,description:"The label of the content for accessibility.",name:"ariaLabel",required:!1,type:{name:"string"}},icon:{defaultValue:null,description:"The icon displayed when the type is set to `icon`.",name:"icon",required:!1,type:{name:"SubIcon"}},textClassName:{defaultValue:{value:""},description:"Class name applied to the text content.",name:"textClassName",required:!1,type:{name:"string"}},text:{defaultValue:null,description:"The text displayed when the type is set to `text`.",name:"text",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const B=v.forwardRef(({children:e,isClickable:l=!0,clickableProps:o={}},c)=>l?a.createElement(se,{...o,ref:c},e):a.createElement(a.Fragment,null,e));try{B.displayName="ClickableWrapper",B.__docgenInfo={description:"",displayName:"ClickableWrapper",props:{children:{defaultValue:null,description:"The content inside the wrapper.",name:"children",required:!0,type:{name:"ReactNode"}},isClickable:{defaultValue:{value:"true"},description:"If true, wraps the content in a `Clickable` component.",name:"isClickable",required:!1,type:{name:"boolean"}},clickableProps:{defaultValue:{value:"{}"},description:"Props passed to the `Clickable` component.",name:"clickableProps",required:!1,type:{name:"ClickableProps"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const qe="_avatar_vvf9a_1",Ae="_large_vvf9a_5",Ce="_medium_vvf9a_10",Ve="_small_vvf9a_15",Ie="_xs_vvf9a_20",ke="_clickableWrapper_vvf9a_25",Ne="_circle_vvf9a_30",Ee="_circleImg_vvf9a_56",we="_circleText_vvf9a_60",Se="_disabled_vvf9a_64",Me="_square_vvf9a_74",Be="_withoutBorder_vvf9a_91",Le="_badges_vvf9a_95",Re="_badge_vvf9a_95",Pe="_badgeTopLeft_vvf9a_112",We="_badgeTopRight_vvf9a_118",He="_badgeBottomLeft_vvf9a_124",$e="_badgeBottomRight_vvf9a_131",t={avatar:qe,large:Ae,medium:Ce,small:Ve,xs:Ie,clickableWrapper:ke,circle:Ne,"focus-visible":"_focus-visible_vvf9a_46",circleImg:Ee,circleText:we,disabled:Se,square:Me,withoutBorder:Be,badges:Le,badge:Re,badgeTopLeft:Pe,badgeTopRight:We,badgeBottomLeft:He,badgeBottomRight:$e},L=({id:e,type:l="text",className:o,avatarContentWrapperClassName:c,textClassName:m="",size:n="large",src:p,icon:g,text:r,tooltipProps:s,ariaLabel:u,withoutTooltip:W=!1,role:G,backgroundColor:H="chili-blue",square:j,disabled:V,tabIndex:F,ariaHidden:K=!1,topLeftBadgeProps:I,topRightBadgeProps:k,bottomLeftBadgeProps:N,bottomRightBadgeProps:E,withoutBorder:U=!1,customSize:y=null,customBackgroundColor:w=null,onClick:b,"data-testid":J})=>{const Q=v.useMemo(()=>w?{backgroundColor:w}:p?{}:{backgroundColor:ie(H)},[p,H,w]),Y=v.useMemo(()=>y?{height:y,width:y}:{},[y]),f=v.useMemo(()=>{if(!W)return s?{content:u,...s}:{content:u}},[u,s,W]),Z=v.useMemo(()=>{const d=[];return x(I)||d.push(a.createElement("div",{key:"top-left-badge",className:i(t.badge,t.badgeTopLeft)},a.createElement(T,{size:n,...I}))),x(k)||d.push(a.createElement("div",{key:"top-right-badge",className:i(t.badge,t.badgeTopRight)},a.createElement(T,{size:n,...k}))),x(N)||d.push(a.createElement("div",{key:"bottom-left-badge",className:i(t.badge,t.badgeBottomLeft)},a.createElement(T,{size:n,...N}))),x(E)||d.push(a.createElement("div",{key:"bottom-right-bade",className:i(t.badge,t.badgeBottomRight)},a.createElement(T,{size:n,...E}))),d.length>0?a.createElement("div",{className:i(t.badges)},d):null},[n,I,k,N,E]),ee=v.useMemo(()=>!V&&(b||f!=null&&f.content)?0:-1,[V,b,f==null?void 0:f.content]),ae=F??ee,te=v.useCallback(d=>{d.preventDefault(),b&&b(d,e)},[b,e]);return a.createElement("div",{id:e,"data-testid":J||_(h.AVATAR,e),className:i(t.avatar,t[n],o),style:Y},a.createElement(B,{isClickable:!!b,clickableProps:{onClick:te,tabIndex:"-1",className:t.clickableWrapper}},a.createElement(re,{showTrigger:["focus","mouseenter"],hideTrigger:["blur","mouseleave"],...f},a.createElement("div",{className:i(t.circle,q(t,A("circle--"+l)),{[t.disabled]:V,[t.square]:j,[t.withoutBorder]:U},c),"aria-hidden":K,tabIndex:ae,style:{...Q}},a.createElement(Te,{type:l,size:n,src:p,icon:g,text:r,ariaLabel:u,role:G,textClassName:m})),Z)))},Qe=R(L,{types:P,sizes:C,colors:$,backgroundColors:$});try{L.displayName="Avatar",L.__docgenInfo={description:"",displayName:"Avatar",props:{src:{defaultValue:null,description:"The image source for the avatar.",name:"src",required:!1,type:{name:"string"}},text:{defaultValue:null,description:"The text displayed inside the avatar.",name:"text",required:!1,type:{name:"string"}},tooltipProps:{defaultValue:null,description:"Props passed to the Tooltip component. See full options in the [Tooltip documentation](https://vibe.monday.com/?path=/docs/components-tooltip--docs).",name:"tooltipProps",required:!1,type:{name:"Partial<TooltipProps>"}},ariaLabel:{defaultValue:null,description:"The ARIA label of the avatar.",name:"ariaLabel",required:!1,type:{name:"string"}},withoutTooltip:{defaultValue:{value:"false"},description:"If true, the tooltip is disabled.",name:"withoutTooltip",required:!1,type:{name:"boolean"}},icon:{defaultValue:null,description:"The icon displayed inside the avatar.",name:"icon",required:!1,type:{name:"SubIcon"}},type:{defaultValue:{value:"text"},description:"The type of the avatar.",name:"type",required:!1,type:{name:"enum",value:[{value:'"icon"'},{value:'"text"'},{value:'"img"'}]}},textClassName:{defaultValue:{value:""},description:"Class name applied to the text inside the avatar.",name:"textClassName",required:!1,type:{name:"string"}},avatarContentWrapperClassName:{defaultValue:null,description:"Class name applied to the avatar content wrapper.",name:"avatarContentWrapperClassName",required:!1,type:{name:"string"}},backgroundColor:{defaultValue:{value:"chili-blue"},description:"The background color of the avatar.",name:"backgroundColor",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"positive"'},{value:'"negative"'},{value:'"warning"'},{value:'"grass_green"'},{value:'"done-green"'},{value:'"bright-green"'},{value:'"saladish"'},{value:'"egg_yolk"'},{value:'"working_orange"'},{value:'"dark-orange"'},{value:'"peach"'},{value:'"sunset"'},{value:'"stuck-red"'},{value:'"dark-red"'},{value:'"sofia_pink"'},{value:'"lipstick"'},{value:'"bubble"'},{value:'"purple"'},{value:'"dark_purple"'},{value:'"berry"'},{value:'"dark_indigo"'},{value:'"indigo"'},{value:'"navy"'},{value:'"bright-blue"'},{value:'"dark-blue"'},{value:'"aquamarine"'},{value:'"chili-blue"'},{value:'"river"'},{value:'"winter"'},{value:'"explosive"'},{value:'"american_gray"'},{value:'"blackish"'},{value:'"brown"'},{value:'"orchid"'},{value:'"tan"'},{value:'"sky"'},{value:'"coffee"'},{value:'"royal"'},{value:'"teal"'},{value:'"lavender"'},{value:'"steel"'},{value:'"lilac"'},{value:'"pecan"'}]}},customBackgroundColor:{defaultValue:{value:"null"},description:"A custom background color.",name:"customBackgroundColor",required:!1,type:{name:"string"}},role:{defaultValue:null,description:"The ARIA role of the avatar.",name:"role",required:!1,type:{name:"AriaRole"}},size:{defaultValue:{value:"large"},description:"The size of the avatar.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"xs"'},{value:'"medium"'},{value:'"large"'}]}},customSize:{defaultValue:{value:"null"},description:"A custom size in pixels.",name:"customSize",required:!1,type:{name:"number"}},tabIndex:{defaultValue:null,description:"The tab index of the avatar.",name:"tabIndex",required:!1,type:{name:"number"}},ariaHidden:{defaultValue:{value:"false"},description:"If true, the avatar is hidden from assistive technologies.",name:"ariaHidden",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"If true, the avatar is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},square:{defaultValue:null,description:"If true, renders the avatar as a square instead of a circle.",name:"square",required:!1,type:{name:"boolean"}},topLeftBadgeProps:{defaultValue:null,description:"Props for the top-left badge.",name:"topLeftBadgeProps",required:!1,type:{name:"AvatarBadgeProps"}},topRightBadgeProps:{defaultValue:null,description:"Props for the top-right badge.",name:"topRightBadgeProps",required:!1,type:{name:"AvatarBadgeProps"}},bottomLeftBadgeProps:{defaultValue:null,description:"Props for the bottom-left badge.",name:"bottomLeftBadgeProps",required:!1,type:{name:"AvatarBadgeProps"}},bottomRightBadgeProps:{defaultValue:null,description:"Props for the bottom-right badge.",name:"bottomRightBadgeProps",required:!1,type:{name:"AvatarBadgeProps"}},withoutBorder:{defaultValue:{value:"false"},description:"If true, removes the avatar's border.",name:"withoutBorder",required:!1,type:{name:"boolean"}},onClick:{defaultValue:null,description:"Callback fired when the avatar is clicked.",name:"onClick",required:!1,type:{name:"(event: MouseEvent<Element, MouseEvent> | KeyboardEvent<Element>, avatarId: string) => void"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}export{Qe as A,B as C,P as a,ie as g};
