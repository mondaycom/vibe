import{j as e}from"./jsx-runtime-DDzbWKUH.js";import{useMDXComponents as s}from"./index-CXa8ra7y.js";import{M as c,C as m}from"./index-DyTgX6-N.js";import{U as p,O as a}from"./useClickOutside.stories-CK9V5X2_.js";import{e as l,d as i}from"./function-arguments-cT2l_yKe.js";import{n as r}from"./link-ByEAMSgF.js";import{r as d}from"./usage-guidelines-CjZwxEOd.js";import"./index-Hemj67b4.js";import"./_commonjsHelpers-BosuxZz1.js";import"./iframe-8ZdQW_d5.js";import"./index-DGErypBa.js";import"./index-D63y3F3s.js";import"./index-BedKbVpA.js";import"./index-DrFu-skq.js";import"./index-NFRdg0hY.js";import"./index-DLqmmtYJ.js";import"./ssr-utils-Do6V6AqB.js";import"./Box-CI4IQ3Nw.js";import"./index-BpvXyOxN.js";import"./useMergeRef-DQ4XPFxl.js";import"./useIsomorphicLayoutEffect-FdvxY73P.js";import"./test-ids-utils-9ISiqDto.js";import"./camelCase-B8c2Dc7Y.js";import"./_baseGetTag-ENn7h-yl.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-DWIQbemu.js";import"./withStaticProps-DfSG2La2.js";import"./withStaticProps-DibdfTK_.js";function n(o){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...s(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsx(c,{of:p}),`
`,e.jsx(t.h1,{id:"useclickoutside",children:"useClickOutside"}),`
`,e.jsx(t.p,{children:"This hook is used when you want to capture click events outside your component."}),`
`,e.jsx(m,{of:a}),`
`,e.jsx(t.h3,{id:"import",children:"Import"}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-js",children:`import { useClickOutside } from "@vibe/core/hooks";
`})}),`
`,e.jsx(t.h2,{id:"arguments",children:"Arguments"}),`
`,e.jsx(l,{children:e.jsxs(i,{name:"options",type:"Object",children:[e.jsx(i,{name:"ref",type:"React.MutableRefObject",description:e.jsxs(e.Fragment,{children:["A React",e.jsx(r,{href:"https://react.dev/reference/react/useRef",children:"ref"}),"object."]}),required:!0}),e.jsx(i,{name:"callback",type:"(value: string) => void",description:"Callback function to execute on outside clicks.",required:!0}),e.jsx(i,{name:"ignoreClasses",type:"string[]",description:"A list of classes to ignore when checking if the click is outside the element."}),e.jsx(i,{name:"eventName",type:"keyof HTMLElementEventMap | string",description:e.jsxs(e.Fragment,{children:["The event to listen to. See",e.jsx(r,{href:"https://developer.mozilla.org/en-US/docs/Web/Events",children:"a full list"}),"for more info."]}),defaultValue:"click"})]})}),`
`,e.jsx(t.h2,{id:"usage",children:"Usage"}),`
`,e.jsx(d,{guidelines:["Use this hook when you want to listen on events outside of the element","Use this hook when you need to use events not from the react app"]})]})}function H(o={}){const{wrapper:t}={...s(),...o.components};return t?e.jsx(t,{...o,children:e.jsx(n,{...o})}):n(o)}export{H as default};
