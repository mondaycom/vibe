import{j as t}from"./jsx-runtime-lwGtIXvq.js";import{r as n,R as te}from"./index-CTZeEbLr.js";import{c as i}from"./index-BpvXyOxN.js";import{S as ne}from"./Steps-DFdfhgnz.js";import{g as b,b as N}from"./test-ids-utils-B1IbFLmr.js";import{T as A}from"./Text-BwLUW2oo.js";import{H as ae,A as ie}from"./DialogConstants-DkeX1sw_.js";import{u as se}from"./useMergeRef-Do2VYePL.js";import{a as re,T as le}from"./Tooltip-CT7Hoq9W.js";import{I as oe}from"./IconButton-Dk2vdsWa.js";import{a as de}from"./CloseSmall-DUYWL2FE.js";import{w as pe}from"./withStaticProps-DfSG2La2.js";const ue="_title_ojk0n_1",me={title:ue},f=({text:e,className:a,id:s,"data-testid":o})=>e?t.jsx(A,{type:"text1",weight:"bold",role:"heading",color:"inherit","aria-level":3,maxLines:2,className:i(me.title,a),id:s,"data-testid":o||b(N.TIPSEEN_TITLE,s),children:e}):null;try{f.displayName="TipseenTitle",f.__docgenInfo={description:"",displayName:"TipseenTitle",props:{text:{defaultValue:null,description:"The title text displayed in the Tipseen.",name:"text",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const He="Submit",je="Dismiss",ce="Close";var P=(e=>(e.LIGHT="light",e.DARK="dark",e.FIXED_LIGHT="fixed-light",e.FIXED_DARK="fixed-dark",e))(P||{}),E=(e=>(e.PRIMARY="primary",e.INVERTED="inverted",e))(E||{});const fe="_tipseenWrapper_pkmfh_1",he="_tipseenWrapperWithoutCustomWidth_pkmfh_8",ye="_floating_pkmfh_11",Te="_tipseenHeader_pkmfh_18",ge="_tipseenTitle_pkmfh_22",_e="_tipseenContent_pkmfh_25",ve="_tipseenCloseButton_pkmfh_30",Ce="_dark_pkmfh_36",l={tipseenWrapper:fe,tipseenWrapperWithoutCustomWidth:he,floating:ye,tipseenHeader:Te,tipseenTitle:ge,tipseenContent:_e,tipseenCloseButton:ve,dark:Ce},w=te.createContext("primary"),q=n.forwardRef(({className:e,id:a,position:s="bottom",animationType:o="expand",hideDelay:p=0,showDelay:r=100,title:h,titleClassName:m,hideCloseButton:y,closeButtonTheme:d="light",onClose:T,closeAriaLabel:g,children:M=null,content:z,containerSelector:D,hideTrigger:x=[],showTrigger:_=[],width:c,moveBy:H,hideWhenReferenceHidden:j=!1,referenceWrapperClassName:R,tip:L=!0,tooltipArrowClassName:O,modifiers:X=[],floating:v=!1,color:F,"data-testid":U},S)=>{const u=F??"inverted",C=Array.isArray(_)&&Array.isArray(x)&&_.length===0&&r>0,$=n.useRef(null),G=se(S,$),[K,I]=n.useState(!C),J=g||ce;n.useEffect(()=>{let W;return r&&(W=setTimeout(()=>{I(!0)},r)),()=>{clearTimeout(W)}},[r,I]);const Y=n.useMemo(()=>u==="inverted"?"onInverted":"onPrimary",[u]),Q=n.useMemo(()=>d==="light"?u==="inverted"?"on-inverted-background":"on-primary-color":d,[u,d]),Z=S||a?"div":n.Fragment,ee=t.jsxs("div",{children:[t.jsxs("div",{className:i(l.tipseenHeader),children:[y?null:t.jsx(oe,{hideTooltip:!0,className:i(l.tipseenCloseButton,{[l.dark]:d==="dark"||d==="fixed-dark"}),onClick:T,size:"xs",kind:"tertiary",color:Q,ariaLabel:J,icon:de}),t.jsx(f,{text:h,className:i(l.tipseenTitle,m)})]}),t.jsx(A,{color:Y,type:"text2",element:"p",className:i(l.tipseenContent),children:t.jsx(w.Provider,{value:u,children:z})})]});return t.jsx(Z,{ref:G,id:a,"data-testid":U||b(N.TIPSEEN,a),children:t.jsx(le,{className:i(l.tipseenWrapper,e,{[l.tipseenWrapperWithoutCustomWidth]:!c,[l.floating]:v}),maxWidth:c,arrowClassName:O,style:c?{width:c}:void 0,shouldShowOnMount:!C,position:s,animationType:o,hideDelay:p,showDelay:0,hideTrigger:x,showTrigger:_,showOnDialogEnter:!1,content:ee,theme:u==="inverted"?"dark":"primary",containerSelector:D,disableDialogSlide:!1,moveBy:H,hideWhenReferenceHidden:j,referenceWrapperClassName:R,tip:L&&!v,modifiers:X,open:C?K:void 0,forceRenderWithoutChildren:v,children:M})})}),Re=pe(q,{closeButtonThemes:P,animationTypes:ie,hideShowTriggers:ae,colors:E,positions:re});try{q.displayName="Tipseen",q.__docgenInfo={description:"",displayName:"Tipseen",props:{titleClassName:{defaultValue:null,description:"Class name applied to the Tipseen title.",name:"titleClassName",required:!1,type:{name:"string"}},position:{defaultValue:{value:"bottom"},description:"The position of the Tipseen relative to the target element.",name:"position",required:!1,type:{name:"TooltipPositions"}},animationType:{defaultValue:{value:"expand"},description:"The animation type used for showing/hiding the Tipseen.",name:"animationType",required:!1,type:{name:"DialogAnimationType"}},hideDelay:{defaultValue:{value:"0"},description:"The delay in milliseconds before hiding the Tipseen.",name:"hideDelay",required:!1,type:{name:"number"}},showDelay:{defaultValue:{value:"100"},description:"The delay in milliseconds before showing the Tipseen.",name:"showDelay",required:!1,type:{name:"number"}},title:{defaultValue:null,description:"The title text of the Tipseen.",name:"title",required:!1,type:{name:"string"}},hideCloseButton:{defaultValue:null,description:"If true, hides the close button.",name:"hideCloseButton",required:!1,type:{name:"boolean"}},children:{defaultValue:{value:"null"},description:"The child element that triggers the Tipseen.",name:"children",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>>"}},containerSelector:{defaultValue:null,description:"The CSS selector of the container where the Tipseen should be rendered.",name:"containerSelector",required:!1,type:{name:"string"}},hideTrigger:{defaultValue:{value:"[]"},description:"Events that trigger hiding the Tipseen.",name:"hideTrigger",required:!1,type:{name:"DialogTriggerEvent | DialogTriggerEvent[]"}},showTrigger:{defaultValue:{value:"[]"},description:"Events that trigger showing the Tipseen.",name:"showTrigger",required:!1,type:{name:"DialogTriggerEvent | DialogTriggerEvent[]"}},width:{defaultValue:null,description:"The width of the Tipseen.",name:"width",required:!1,type:{name:"number"}},moveBy:{defaultValue:null,description:"Offset values for positioning adjustments.",name:"moveBy",required:!1,type:{name:"MoveBy"}},hideWhenReferenceHidden:{defaultValue:{value:"false"},description:"If true, hides the Tipseen when the reference element is hidden.",name:"hideWhenReferenceHidden",required:!1,type:{name:"boolean"}},referenceWrapperClassName:{defaultValue:null,description:"Class name applied to the reference wrapper element.",name:"referenceWrapperClassName",required:!1,type:{name:"string"}},tip:{defaultValue:{value:"true"},description:"If false, hides the arrow of the Tipseen.",name:"tip",required:!1,type:{name:"boolean"}},tooltipArrowClassName:{defaultValue:null,description:"Class name applied to the Tipseen arrow.",name:"tooltipArrowClassName",required:!1,type:{name:"string"}},modifiers:{defaultValue:{value:"[]"},description:`Custom Popper.js modifiers.
https://popper.js.org/docs/v2/modifiers/`,name:"modifiers",required:!1,type:{name:"Partial<Modifier<unknown, object>>[]"}},closeAriaLabel:{defaultValue:null,description:"The aria-label for the close button.",name:"closeAriaLabel",required:!1,type:{name:"string"}},onClose:{defaultValue:null,description:"Callback fired when the Tipseen is closed.",name:"onClose",required:!1,type:{name:"(event?: MouseEvent<HTMLButtonElement, MouseEvent>) => void"}},content:{defaultValue:null,description:"The content displayed inside the Tipseen.",name:"content",required:!0,type:{name:"ElementContent"}},closeButtonTheme:{defaultValue:{value:"light"},description:"The theme of the Tipseen close button.",name:"closeButtonTheme",required:!1,type:{name:"TipseenCloseButtonTheme"}},floating:{defaultValue:{value:"false"},description:"If true, renders the Tipseen as a floating element without a reference.",name:"floating",required:!1,type:{name:"boolean"}},color:{defaultValue:null,description:"The color theme of the Tipseen.",name:"color",required:!1,type:{name:"TipseenColor"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const qe="_tipseenBasicContent_ylf1o_1",Ve={tipseenBasicContent:qe},V=({title:e,children:a=null,titleClassName:s,className:o,id:p,"data-testid":r})=>t.jsxs("div",{className:i(Ve.tipseenBasicContent,o),id:p,"data-testid":r||b(N.TIPSEEN_CONTENT,p),children:[t.jsx(f,{text:e,className:s}),a]});try{V.displayName="TipseenBasicContent",V.__docgenInfo={description:"",displayName:"TipseenBasicContent",props:{title:{defaultValue:null,description:"The title text displayed in the Tipseen content.",name:"title",required:!1,type:{name:"string"}},titleClassName:{defaultValue:null,description:"Class name applied to the title.",name:"titleClassName",required:!1,type:{name:"string"}},children:{defaultValue:{value:"null"},description:"The content inside the Tipseen.",name:"children",required:!1,type:{name:"ElementContent | ElementContent[]"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const be="_tipseenWizard_tl6ag_1",Ne="_tipseenWizardWizard_tl6ag_5",B={tipseenWizard:be,tipseenWizardWizard:Ne},Ee="Got it",k=({id:e,title:a,onFinish:s,titleClassName:o,className:p,...r})=>{const h=r,m=n.useContext(w),y=n.useMemo(()=>m===E.INVERTED?"on-inverted-background":"on-primary-color",[m]),d=n.useMemo(()=>({kind:"primary",size:"small"}),[]),T=n.useMemo(()=>({size:"small"}),[]),g=n.useMemo(()=>({kind:"primary",size:"small",children:Ee}),[]);return t.jsx(V,{title:a,className:i(B.tipseenWizard,p),titleClassName:o,id:e||"wizard",children:t.jsx(ne,{className:i(B.tipseenWizardWizard),color:y,isContentOnTop:!0,areButtonsIconsHidden:!0,backButtonProps:T,nextButtonProps:d,finishButtonProps:g,onFinish:s,...h})})};try{k.displayName="TipseenWizard",k.__docgenInfo={description:"",displayName:"TipseenWizard",props:{title:{defaultValue:null,description:"The title text displayed in the Tipseen Wizard.",name:"title",required:!1,type:{name:"string"}},titleClassName:{defaultValue:null,description:"Class name applied to the Tipseen title.",name:"titleClassName",required:!1,type:{name:"string"}},onFinish:{defaultValue:null,description:"Callback fired when the wizard is completed.",name:"onFinish",required:!1,type:{name:"(e: MouseEvent<Element, MouseEvent> | KeyboardEvent<Element>) => void"}},activeStepIndex:{defaultValue:null,description:"The index of the currently active step.",name:"activeStepIndex",required:!1,type:{name:"number"}},onChangeActiveStep:{defaultValue:null,description:"Callback fired when the active step changes.",name:"onChangeActiveStep",required:!1,type:{name:"(e: MouseEvent<Element, MouseEvent>, stepIndex: number) => void"}},areNavigationButtonsHidden:{defaultValue:null,description:"If true, hides the navigation buttons.",name:"areNavigationButtonsHidden",required:!1,type:{name:"boolean"}},steps:{defaultValue:null,description:"The list of steps in the steps component.",name:"steps",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>>[]"}},type:{defaultValue:null,description:"The visual style of the steps component.",name:"type",required:!1,type:{name:"StepsType"}},color:{defaultValue:null,description:"The color theme of the steps component.",name:"color",required:!1,type:{name:"StepsColor"}},isContentOnTop:{defaultValue:null,description:"If true, the content is displayed above the step navigation.",name:"isContentOnTop",required:!1,type:{name:"boolean"}},areButtonsIconsHidden:{defaultValue:null,description:"If true, hides the icons in the navigation buttons.",name:"areButtonsIconsHidden",required:!1,type:{name:"boolean"}},backButtonProps:{defaultValue:null,description:"Props applied to the back button.",name:"backButtonProps",required:!1,type:{name:"Partial<ButtonProps>"}},nextButtonProps:{defaultValue:null,description:"Props applied to the next button.",name:"nextButtonProps",required:!1,type:{name:"Partial<ButtonProps>"}},finishButtonProps:{defaultValue:null,description:"Props applied to the finish button.",name:"finishButtonProps",required:!1,type:{name:"Partial<ButtonProps>"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}export{je as D,He as S,Re as T,k as a,w as b,E as c,V as d};
