import{j as h}from"./jsx-runtime-DDzbWKUH.js";import{r as n,R as f}from"./index-Hemj67b4.js";import{c as P}from"./index-BpvXyOxN.js";import{u as v}from"./useMergeRef-DQ4XPFxl.js";import{g as R,C as S}from"./test-ids-utils-CSfXomCJ.js";import{u as x}from"./index-CXrJR90Q.js";import{g as E}from"./typesciptCssModulesHelper-Ji7rRrZn.js";import{c as j}from"./camelCase-B8c2Dc7Y.js";import{w as I}from"./withStaticProps-DfSG2La2.js";const L="_tabPanelWrapper_8vrwg_1",w={tabPanelWrapper:L},q=n.forwardRef(({className:e,id:s,children:t,index:i,"data-testid":l},c)=>{const p=n.useRef(null),d=v(c,p);return h.jsx("div",{ref:d,className:P(w.tabPanelWrapper,e),id:s,"data-testid":l||R(S.TAB_PANEL,s),role:"tabpanel",children:t},`${s}_${i}`)});try{q.displayName="TabPanel",q.__docgenInfo={description:"",displayName:"TabPanel",props:{children:{defaultValue:null,description:"The content inside the tab panel.",name:"children",required:!1,type:{name:"string | ReactElement<any, string | JSXElementConstructor<any>> | ReactElement<any, string | JSXElementConstructor<any>>[]"}},index:{defaultValue:null,description:"The index of the tab panel.",name:"index",required:!1,type:{name:"number"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const N=n.forwardRef(({className:e,id:s,activeTabId:t=0,children:i,"data-testid":l},c)=>{const p=n.useRef(null),d=v(c,p),[T,b]=n.useState(t),[a,u]=n.useState(t),o=x(t);n.useEffect(()=>{t!==o&&t!==a&&(b(a),u(t))},[t,a,o]);const g=n.useCallback(r=>{b(a),u(r)},[a]);return h.jsx("div",{ref:d,className:e,id:s,"data-testid":l||R(S.TABS_CONTEXT,s),children:f.Children.map(i,r=>{if(r.type.isTabList){const m=r.props.onTabChange,V=C=>{g(C),m==null||m(C)};return f.cloneElement(r,{activeTabId:a,onTabChange:V})}if(r.type.isTabPanels){const m=T<a?"ltr":"rtl";return f.cloneElement(r,{activeTabId:a,animationDirection:m})}return r})})});try{N.displayName="TabsContext",N.__docgenInfo={description:"",displayName:"TabsContext",props:{activeTabId:{defaultValue:{value:"0"},description:"The index of the currently active tab.",name:"activeTabId",required:!1,type:{name:"number"}},children:{defaultValue:null,description:"The child elements representing the tab list and tab panels.",name:"children",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>> | ReactElement<any, string | JSXElementConstructor<any>>[]"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}var A=(e=>(e.RTL="rtl",e.LTR="ltr",e))(A||{});const D="_tabPanelsWrapper_1djsp_1",W="_tabPanel_1djsp_1",X="_animationDirectionRtl_1djsp_5",J="_animationDirectionLtr_1djsp_9",M="_active_1djsp_13",$="_panelSlideIn_1djsp_1",_={tabPanelsWrapper:D,tabPanel:W,animationDirectionRtl:X,animationDirectionLtr:J,active:M,panelSlideIn:$},y=n.forwardRef(({className:e,id:s,activeTabId:t=0,animationDirection:i="rtl",children:l,"data-testid":c},p)=>{const d=n.useRef(null),T=v(p,d),b=n.useMemo(()=>f.Children.map(l,(a,u)=>{const o=t===u;if(!o)return null;const g=o?"active":"non-active",r=o?`animation-direction-${i}`:"";return f.cloneElement(a,{index:u,...a.props,className:P(_.tabPanel,[E(_,g)],[E(_,j(r))],a.props.className)})}).filter(Boolean),[l,t,i]);return h.jsx("div",{ref:T,className:P(_.tabPanelsWrapper,e),id:s,"data-testid":c||R(S.TAB_PANELS,s),children:b})});Object.assign(y,{isTabPanels:!0});const U=I(y,{animationDirections:A});try{y.displayName="TabPanels",y.__docgenInfo={description:"",displayName:"TabPanels",props:{activeTabId:{defaultValue:{value:"0"},description:"The index of the currently active tab panel.",name:"activeTabId",required:!1,type:{name:"number"}},animationDirection:{defaultValue:{value:"rtl"},description:"The animation direction when switching between tab panels.",name:"animationDirection",required:!1,type:{name:"enum",value:[{value:'"ltr"'},{value:'"rtl"'}]}},children:{defaultValue:null,description:"The child elements representing tab panels.",name:"children",required:!1,type:{name:"ReactElement<TabPanelProps, string | JSXElementConstructor<any>> | ReactElement<TabPanelProps, string | JSXElementConstructor<...>>[]"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}export{N as T,U as a,q as b};
