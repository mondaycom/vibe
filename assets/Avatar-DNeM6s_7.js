import{j as a}from"./jsx-runtime-DDzbWKUH.js";import{g as q}from"./typesciptCssModulesHelper-Ji7rRrZn.js";import{g as _,C as h,a as ne}from"./test-ids-utils-CSfXomCJ.js";import{c as i}from"./index-BpvXyOxN.js";import{r as v}from"./index-Hemj67b4.js";import{c as le,E as H}from"./colors-vars-map-DOupSotq.js";import{I as O,C as re,i as x}from"./Icon-DwNv_s03.js";import{c as A}from"./camelCase-CO1PkVrH.js";import{a as R}from"./withStaticProps-DfSG2La2.js";import{T as se}from"./Tooltip-DhpRQITc.js";import{C as ie}from"./Clickable-DSXcpF2s.js";const $={positive:"--positive-color-selected",negative:"--negative-color-selected",primary:"--primary-selected-color",warning:"--warning-color-selected"},z={positive:"--positive-color-selected-hover",negative:"--negative-color-selected-hover",primary:"--primary-selected-hover-color",warning:"--warning-color-selected-hover"};function oe(e,n=!1,o=!1){return le.includes(e)?`var(--color-${e}${n?"-selected":""})`:Object.keys(z).includes(e)&&o?`var(${z[e]})`:Object.keys($).includes(e)&&n?`var(${$[e]})`:e}var E=(e=>(e.IMG="img",e.ICON="icon",e.TEXT="text",e))(E||{}),C=(e=>(e.XS="xs",e.SMALL="small",e.MEDIUM="medium",e.LARGE="large",e))(C||{});const de="_badgeLarge_1f26z_1",ue="_badgeMedium_1f26z_6",ce="_badgeSmall_1f26z_11",me="_badgeXs_1f26z_12",pe={badgeLarge:de,badgeMedium:ue,badgeSmall:ce,badgeXs:me},M=({src:e,icon:n,tabIndex:o=0,className:c,size:m="large",id:l,"data-testid":p,...g})=>{const r=i(q(pe,A("badge--"+m)),c),s=p||_(h.AVATAR_BADGE,l);return n?a.jsx(O,{icon:n,className:r,...g,"data-testid":s}):e?a.jsx(re,{src:e,className:r,clickable:o===-1,...g,"data-testid":s}):null},T=R(M,{sizes:C});try{M.displayName="AvatarBadge",M.__docgenInfo={description:"",displayName:"AvatarBadge",props:{src:{defaultValue:null,description:"The image source for the badge.",name:"src",required:!1,type:{name:"string"}},icon:{defaultValue:null,description:"The icon displayed inside the badge.",name:"icon",required:!1,type:{name:"SubIcon"}},tabIndex:{defaultValue:{value:"0"},description:"The tab index of the badge.",name:"tabIndex",required:!1,type:{name:"string | number"}},size:{defaultValue:{value:"large"},description:"The size of the badge.",name:"size",required:!1,type:{name:"enum",value:[{value:'"xs"'},{value:'"small"'},{value:'"medium"'},{value:'"large"'}]}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const fe="_contentImg_xr8it_1",ve="_contentText_xr8it_7",ge="_contentTextLarge_xr8it_19",be="_contentTextMedium_xr8it_27",_e="_contentTextSmall_xr8it_32",he="_contentTextXs_xr8it_37",ye="_contentIconLarge_xr8it_42",xe="_contentIconMedium_xr8it_47",Te="_contentIconSmall_xr8it_52",X={contentImg:fe,contentText:ve,contentTextLarge:ge,contentTextMedium:be,contentTextSmall:_e,contentTextXs:he,contentIconLarge:ye,contentIconMedium:xe,contentIconSmall:Te},j=({type:e="text",src:n,icon:o,text:c,ariaLabel:m,role:l,size:p="large",textClassName:g="",id:r,"data-testid":s})=>{const u=i(q(X,A("content_"+e)),q(X,A("content_"+e+"--"+p)));switch(e){case"img":return a.jsx("img",{role:l,alt:m,src:n,className:u,id:r,"data-testid":s||_(h.AVATAR_CONTENT,r)});case"icon":return a.jsx(O,{icon:o,"aria-label":m,className:u,ariaHidden:!1,id:r,"data-testid":s||_(h.AVATAR_CONTENT,r)});case"text":return a.jsx("span",{"aria-label":m,role:l,className:i(u,g),id:r,"data-testid":s||_(h.AVATAR_CONTENT,r),children:c});default:return null}},qe=R(j,{sizes:C,types:E});try{j.displayName="AvatarContent",j.__docgenInfo={description:"",displayName:"AvatarContent",props:{src:{defaultValue:null,description:"The image source when the type is set to `img`.",name:"src",required:!1,type:{name:"string"}},type:{defaultValue:{value:"text"},description:"The type of content displayed inside the avatar.",name:"type",required:!1,type:{name:"enum",value:[{value:'"img"'},{value:'"icon"'},{value:'"text"'}]}},size:{defaultValue:{value:"large"},description:"The size of the avatar content.",name:"size",required:!1,type:{name:"enum",value:[{value:'"xs"'},{value:'"small"'},{value:'"medium"'},{value:'"large"'}]}},role:{defaultValue:null,description:"The ARIA role of the content.",name:"role",required:!1,type:{name:"string"}},ariaLabel:{defaultValue:null,description:"The label of the content for accessibility.",name:"ariaLabel",required:!1,type:{name:"string"}},icon:{defaultValue:null,description:"The icon displayed when the type is set to `icon`.",name:"icon",required:!1,type:{name:"SubIcon"}},textClassName:{defaultValue:{value:""},description:"Class name applied to the text content.",name:"textClassName",required:!1,type:{name:"string"}},text:{defaultValue:null,description:"The text displayed when the type is set to `text`.",name:"text",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const B=v.forwardRef(({children:e,isClickable:n=!0,clickableProps:o={}},c)=>n?a.jsx(ie,{...o,ref:c,children:e}):a.jsx(a.Fragment,{children:e}));try{B.displayName="ClickableWrapper",B.__docgenInfo={description:"",displayName:"ClickableWrapper",props:{children:{defaultValue:null,description:"The content inside the wrapper.",name:"children",required:!0,type:{name:"ReactNode"}},isClickable:{defaultValue:{value:"true"},description:"If true, wraps the content in a `Clickable` component.",name:"isClickable",required:!1,type:{name:"boolean"}},clickableProps:{defaultValue:{value:"{}"},description:"Props passed to the `Clickable` component.",name:"clickableProps",required:!1,type:{name:"ClickableProps"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const Ae="_avatar_vvf9a_1",Ce="_large_vvf9a_5",Ve="_medium_vvf9a_10",Ie="_small_vvf9a_15",Ne="_xs_vvf9a_20",ke="_clickableWrapper_vvf9a_25",we="_circle_vvf9a_30",Se="_circleImg_vvf9a_56",Me="_circleText_vvf9a_60",je="_disabled_vvf9a_64",Be="_square_vvf9a_74",Le="_withoutBorder_vvf9a_91",Re="_badges_vvf9a_95",Ee="_badge_vvf9a_95",Pe="_badgeTopLeft_vvf9a_112",We="_badgeTopRight_vvf9a_118",He="_badgeBottomLeft_vvf9a_124",$e="_badgeBottomRight_vvf9a_131",t={avatar:Ae,large:Ce,medium:Ve,small:Ie,xs:Ne,clickableWrapper:ke,circle:we,"focus-visible":"_focus-visible_vvf9a_46",circleImg:Se,circleText:Me,disabled:je,square:Be,withoutBorder:Le,badges:Re,badge:Ee,badgeTopLeft:Pe,badgeTopRight:We,badgeBottomLeft:He,badgeBottomRight:$e},L=({id:e,type:n="text",className:o,avatarContentWrapperClassName:c,textClassName:m="",size:l="large",src:p,icon:g,text:r,tooltipProps:s,ariaLabel:u,withoutTooltip:P=!1,role:D,backgroundColor:W="chili-blue",square:G,disabled:V,tabIndex:F,ariaHidden:K=!1,topLeftBadgeProps:I,topRightBadgeProps:N,bottomLeftBadgeProps:k,bottomRightBadgeProps:w,withoutBorder:U=!1,customSize:y=null,customBackgroundColor:S=null,onClick:b,"data-testid":J})=>{const Q=v.useMemo(()=>S?{backgroundColor:S}:p?{}:{backgroundColor:oe(W)},[p,W,S]),Y=v.useMemo(()=>y?{height:y,width:y}:{},[y]),f=v.useMemo(()=>{if(!P)return s?{content:u,...s}:{content:u}},[u,s,P]),Z=v.useMemo(()=>{const d=[];return x(I)||d.push(a.jsx("div",{className:i(t.badge,t.badgeTopLeft),children:a.jsx(T,{size:l,...I})},"top-left-badge")),x(N)||d.push(a.jsx("div",{className:i(t.badge,t.badgeTopRight),children:a.jsx(T,{size:l,...N})},"top-right-badge")),x(k)||d.push(a.jsx("div",{className:i(t.badge,t.badgeBottomLeft),children:a.jsx(T,{size:l,...k})},"bottom-left-badge")),x(w)||d.push(a.jsx("div",{className:i(t.badge,t.badgeBottomRight),children:a.jsx(T,{size:l,...w})},"bottom-right-bade")),d.length>0?a.jsx("div",{className:i(t.badges),children:d}):null},[l,I,N,k,w]),ee=v.useMemo(()=>!V&&(b||f!=null&&f.content)?0:-1,[V,b,f==null?void 0:f.content]),ae=F??ee,te=v.useCallback(d=>{d.preventDefault(),b&&b(d,e)},[b,e]);return a.jsx("div",{id:e,"data-testid":J||_(h.AVATAR,e),className:i(t.avatar,t[l],o),style:Y,"data-vibe":ne.AVATAR,children:a.jsx(B,{isClickable:!!b,clickableProps:{onClick:te,tabIndex:"-1",className:t.clickableWrapper},children:a.jsxs(se,{showTrigger:["focus","mouseenter"],hideTrigger:["blur","mouseleave"],...f,children:[a.jsx("div",{className:i(t.circle,q(t,A("circle--"+n)),{[t.disabled]:V,[t.square]:G,[t.withoutBorder]:U},c),"aria-hidden":K,tabIndex:ae,style:{...Q},children:a.jsx(qe,{type:n,size:l,src:p,icon:g,text:r,ariaLabel:u,role:D,textClassName:m})}),Z]})})})},Ze=R(L,{types:E,sizes:C,colors:H,backgroundColors:H});try{L.displayName="Avatar",L.__docgenInfo={description:"",displayName:"Avatar",props:{src:{defaultValue:null,description:"The image source for the avatar.",name:"src",required:!1,type:{name:"string"}},text:{defaultValue:null,description:"The text displayed inside the avatar.",name:"text",required:!1,type:{name:"string"}},tooltipProps:{defaultValue:null,description:"Props passed to the Tooltip component. See full options in the [Tooltip documentation](https://vibe.monday.com/?path=/docs/components-tooltip--docs).",name:"tooltipProps",required:!1,type:{name:"Partial<TooltipProps>"}},ariaLabel:{defaultValue:null,description:"The ARIA label of the avatar.",name:"ariaLabel",required:!1,type:{name:"string"}},withoutTooltip:{defaultValue:{value:"false"},description:"If true, the tooltip is disabled.",name:"withoutTooltip",required:!1,type:{name:"boolean"}},icon:{defaultValue:null,description:"The icon displayed inside the avatar.",name:"icon",required:!1,type:{name:"SubIcon"}},type:{defaultValue:{value:"text"},description:"The type of the avatar.",name:"type",required:!1,type:{name:"enum",value:[{value:'"img"'},{value:'"icon"'},{value:'"text"'}]}},textClassName:{defaultValue:{value:""},description:"Class name applied to the text inside the avatar.",name:"textClassName",required:!1,type:{name:"string"}},avatarContentWrapperClassName:{defaultValue:null,description:"Class name applied to the avatar content wrapper.",name:"avatarContentWrapperClassName",required:!1,type:{name:"string"}},backgroundColor:{defaultValue:{value:"chili-blue"},description:"The background color of the avatar.",name:"backgroundColor",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"positive"'},{value:'"negative"'},{value:'"grass_green"'},{value:'"done-green"'},{value:'"bright-green"'},{value:'"saladish"'},{value:'"egg_yolk"'},{value:'"working_orange"'},{value:'"dark-orange"'},{value:'"peach"'},{value:'"sunset"'},{value:'"stuck-red"'},{value:'"dark-red"'},{value:'"sofia_pink"'},{value:'"lipstick"'},{value:'"bubble"'},{value:'"purple"'},{value:'"dark_purple"'},{value:'"berry"'},{value:'"dark_indigo"'},{value:'"indigo"'},{value:'"navy"'},{value:'"bright-blue"'},{value:'"dark-blue"'},{value:'"aquamarine"'},{value:'"chili-blue"'},{value:'"river"'},{value:'"winter"'},{value:'"explosive"'},{value:'"american_gray"'},{value:'"blackish"'},{value:'"brown"'},{value:'"orchid"'},{value:'"tan"'},{value:'"sky"'},{value:'"coffee"'},{value:'"royal"'},{value:'"teal"'},{value:'"lavender"'},{value:'"steel"'},{value:'"lilac"'},{value:'"pecan"'},{value:'"warning"'}]}},customBackgroundColor:{defaultValue:{value:"null"},description:"A custom background color.",name:"customBackgroundColor",required:!1,type:{name:"string"}},role:{defaultValue:null,description:"The ARIA role of the avatar.",name:"role",required:!1,type:{name:"AriaRole"}},size:{defaultValue:{value:"large"},description:"The size of the avatar.",name:"size",required:!1,type:{name:"enum",value:[{value:'"xs"'},{value:'"small"'},{value:'"medium"'},{value:'"large"'}]}},customSize:{defaultValue:{value:"null"},description:"A custom size in pixels.",name:"customSize",required:!1,type:{name:"number"}},tabIndex:{defaultValue:null,description:"The tab index of the avatar.",name:"tabIndex",required:!1,type:{name:"number"}},ariaHidden:{defaultValue:{value:"false"},description:"If true, the avatar is hidden from assistive technologies.",name:"ariaHidden",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"If true, the avatar is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},square:{defaultValue:null,description:"If true, renders the avatar as a square instead of a circle.",name:"square",required:!1,type:{name:"boolean"}},topLeftBadgeProps:{defaultValue:null,description:"Props for the top-left badge.",name:"topLeftBadgeProps",required:!1,type:{name:"AvatarBadgeProps"}},topRightBadgeProps:{defaultValue:null,description:"Props for the top-right badge.",name:"topRightBadgeProps",required:!1,type:{name:"AvatarBadgeProps"}},bottomLeftBadgeProps:{defaultValue:null,description:"Props for the bottom-left badge.",name:"bottomLeftBadgeProps",required:!1,type:{name:"AvatarBadgeProps"}},bottomRightBadgeProps:{defaultValue:null,description:"Props for the bottom-right badge.",name:"bottomRightBadgeProps",required:!1,type:{name:"AvatarBadgeProps"}},withoutBorder:{defaultValue:{value:"false"},description:"If true, removes the avatar's border.",name:"withoutBorder",required:!1,type:{name:"boolean"}},onClick:{defaultValue:null,description:"Callback fired when the avatar is clicked.",name:"onClick",required:!1,type:{name:"(event: MouseEvent<Element, MouseEvent> | KeyboardEvent<Element>, avatarId: string) => void"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}export{Ze as A,B as C,E as a,oe as g};
