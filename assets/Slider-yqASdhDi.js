import{j as m}from"./jsx-runtime-lwGtIXvq.js";import{r as i,R as De}from"./index-CTZeEbLr.js";import{u as Le}from"./useMergeRef-C008K4k9.js";import{N as R}from"./function-utils-CSFuT5hl.js";import{a as Me}from"./useIsOverflowing-CDKfAaU8.js";import{c as P}from"./index-BpvXyOxN.js";import{g as q}from"./typesciptCssModulesHelper-oFWQo8l_.js";import{T as Oe}from"./Tooltip-C-Jn4wPI.js";import{c as X}from"./camelCase-CO1PkVrH.js";import{I as je}from"./Icon-MuJFX10s.js";import{T as $e}from"./TextField-Bqp-lOEX.js";import{d as Fe}from"./debounce-D3NSP8gs.js";import{a as Be,w as ze}from"./withStaticProps-DfSG2La2.js";import{B as He}from"./sizes-BOsbvv4u.js";function H(e,t,n){const a=e-t,r=Math.round((n-t)*100/a);return[r,r]}function ye(e,t,n){if(e)return e;if(!(typeof t>"u"))return typeof n!="function"?t.toString():n(t)}function Ke(e,t){const n=e%t;return n===0?e:e-n}function We(e,t,n,a){if(!n){const[_,h]=H(e,t,a);return{dimension:_,offset:0,positions:[h],thumbKeys:["start"]}}const[r,o]=a,[c,l]=H(e,t,r),[p,u]=H(e,t,o);return{dimension:p,offset:c,positions:[l,u],thumbKeys:["start","end"]}}function he(e,t,n){const a=(e-t)/10;if(a<n)return n;const r=Ke(Math.round(a),n);return(e-t)/r>10?2*r:r}function Xe(e,t,n,a){return a&&!Array.isArray(e)?[t,n]:e<t?t:e>n?n:e}function Ue(e,t,n){return Array.isArray(t)?t.map((a,r)=>{const o=Array.isArray(e)?e[r]:void 0;return ye(o,a,n)}):ye(e,t,n)}function Je(e,t,n){if(!t)return 0;const a=Math.abs(n[0]-e),r=Math.abs(n[1]-e);return a>r?1:0}function ve(e,t,n,a,r){const o=n-t,c=a.width/o,l=Math.round(e/c)+t,p=Math.round(l/r)*r;return p<t?t:p>n?n:p}function U(e){return function(n){return`${e}__${n}`}}try{U.displayName="createTestIdHelper",U.__docgenInfo={description:"",displayName:"createTestIdHelper",props:{}}}catch{}const Ye=200,Ge=300;var Ie=(e=>(e.PREFIX="prefix",e.POSTFIX="postfix",e))(Ie||{}),qe=(e=>(e.PRIMARY="primary",e.NEGATIVE="negative",e.POSITIVE="positive",e))(qe||{});function Ze(e){const[t]=i.useState(typeof e<"u");return t}function Qe(e,t,n){const a=t?n:e,[r,o]=i.useState(a);return t?[n,R]:[r,o]}function et(e,t,n,a,r,o,c,l,p,u,_,h,v){const g=i.useCallback(s=>{h(s),typeof c=="function"&&c(s)},[h,c]),b=i.useCallback((s,f)=>f===""||Number.isNaN(Number(f))?s===1?r:o:f>r?r:f<o?o:f,[o,r]),S=i.useCallback(s=>{const[f,d]=[...a()];return s.index===1?[f,b(s.index,s.newValue)]:[b(s.index,s.newValue),d]},[b,a]),V=i.useCallback((s,f=R)=>{const[d,y]=S(s);return d<y?[d,y]:(f(s.index===0?1:0),[y,d])},[S]),N=i.useCallback(s=>{p(s),u(s),_(s)},[p,u,_]),x=i.useCallback((s,f=void 0,d=!1)=>{if(!l){g(b(null,s));return}const w=V({newValue:s,index:f??t},d?R:u);g(w)},[g,V,b,t,l,u]),k=i.useCallback(s=>{if(!l){g(b(null,s));return}const f={newValue:s,index:n()??0},d=V(f,N);g(d)},[g,V,N,b,n,l]),T=i.useCallback(s=>{const f=l?e[t]:e;if(f===o)return;const y=f-(s||v);x(y)},[e,x,t,o,l,v]),C=i.useCallback(s=>{const f=l?e[t]:e;if(f===r)return;const y=f+(s||v);x(y)},[e,x,t,r,l,v]);return i.useMemo(()=>({changeThumbValue:x,decreaseValue:T,drugThumb:k,increaseValue:C,setActive:p,setDragging:_,setFocused:u}),[x,T,k,C,p,_,u])}function tt(){const[e,t]=i.useState(null),n=i.useRef(null),a=i.useCallback(o=>{t(o),n.current=o},[t,n]),r=i.useCallback(()=>n.current,[n]);return[e,a,r]}function nt(){const e=i.useRef(null),[t,n]=i.useState({left:0,right:100,width:100}),a=i.useCallback(()=>{if(!e.current)return;const r=e.current.getBoundingClientRect(),{left:o,right:c,width:l}=r;n({left:o,right:c,width:l})},[e,n]);return Me({ref:e,callback:a,debounceTime:Ye}),i.useEffect(()=>{a()},[a]),{railCoords:t,railRef:e}}function rt(e,t,n,a){const r=Ze(t),[o,c]=Qe(e,r,t),l=i.useRef(o);i.useEffect(()=>{r&&l.current!==o&&(l.current=o)},[r,o]);const p=i.useCallback(h=>{c(h),l.current=h},[l,c]),u=()=>l.current,_=Ue(a,o,n);return{actualValue:o,actualValueText:_,getSelectedValue:u,isControlled:r,setSelectedValue:p}}const Ne=i.createContext({}),we=i.createContext({}),ke=i.createContext({}),Ae=i.createContext({});function J({children:e,ariaLabel:t,ariaLabelledby:n,color:a,"data-testid":r,defaultValue:o,disabled:c,max:l,min:p,onChange:u,ranged:_,showValue:h,valueLabelPosition:v,valueLabelColor:g,size:b,step:S,value:V,valueFormatter:N,valueText:x,infixOptions:k}){const T=U(r),{actualValue:C,actualValueText:s,getSelectedValue:f,setSelectedValue:d}=rt(o,V,N,x),[y,E]=i.useState(null),[w,F]=i.useState(null),[D,B,L]=tt(),z=i.useMemo(()=>({active:y,ariaLabel:t,ariaLabelledby:n,color:a,disabled:c,dragging:D,focused:w,size:b,shapeTestId:T,showValue:h,valueLabelPosition:v,valueLabelColor:g}),[y,t,n,a,c,D,w,b,T,h,v,g]),Pe=i.useMemo(()=>({max:l,min:p,ranged:_,step:S,value:C,valueText:s}),[l,p,_,S,C,s]),Re=et(C,w,L,f,l,p,u,_,E,F,B,d,S);return m.jsx(Ne.Provider,{value:z,children:m.jsx(we.Provider,{value:Pe,children:m.jsx(ke.Provider,{value:Re,children:m.jsx(Ae.Provider,{value:k,children:e})})})})}function me(){return i.useContext(Ne)}function at(){return i.useContext(Ae)}function $(){return i.useContext(we)}function _e(){return i.useContext(ke)}try{J.displayName="SliderProvider",J.__docgenInfo={description:"",displayName:"SliderProvider",props:{children:{defaultValue:null,description:"The child elements inside the slider provider.",name:"children",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>> | ReactElement<any, string | JSXElementConstructor<any>>[]"}},infixOptions:{defaultValue:null,description:"Configuration options for prefix, postfix, and selection indicator.",name:"infixOptions",required:!1,type:{name:"{ indicateSelection?: boolean; prefix?: string | ReactElement<any, string | JSXElementConstructor<any>> | { icon: IconType; } | ((value: number, valueText: string) => void); postfix?: string | ... 2 more ... | ((value: number, valueText: string) => void); selectionIndicatorWidth?: string; }"}},ariaLabel:{defaultValue:null,description:"Define a string that labels the current element (Slider)",name:"ariaLabel",required:!1,type:{name:"string"}},ariaLabelledby:{defaultValue:null,description:"ElementId of Node that have the text needed for labeling the current element (Slider)",name:"ariaLabelledby",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"Custom `class name` to be added to the component-root-node",name:"className",required:!1,type:{name:"string"}},color:{defaultValue:null,description:"Color Mode (primary/positive/negative) of the component (Slider)",name:"color",required:!1,type:{name:"SliderColor"}},"data-testid":{defaultValue:null,description:"Unique TestId - can be used as Selector for integration tests and other needs (tracking, etc)",name:"data-testid",required:!1,type:{name:"string"}},defaultValue:{defaultValue:null,description:"",name:"defaultValue",required:!1,type:{name:"number | number[]"}},disabled:{defaultValue:null,description:`If set to true, Component (Slider) will be disabled
 - impossible to change value of component (Slider)
 - visual changes (opacity)`,name:"disabled",required:!1,type:{name:"boolean"}},id:{defaultValue:null,description:"Attribute `id` to be added to the component-root-node",name:"id",required:!1,type:{name:"string"}},max:{defaultValue:null,description:"Max range value of the component (Slider)",name:"max",required:!1,type:{name:"number"}},min:{defaultValue:null,description:"Min range value of the component (Slider)",name:"min",required:!1,type:{name:"number"}},onChange:{defaultValue:null,description:`Optional onChange callback (for outer trigger or Controlled mode)
- required in Controlled Mode`,name:"onChange",required:!1,type:{name:"(value: number | number[]) => void"}},ranged:{defaultValue:null,description:"If true switch slider to RRange mode (two Thumbs)",name:"ranged",required:!1,type:{name:"boolean"}},step:{defaultValue:null,description:`The granularity with which the slider can step through values.
(A "discrete" slider.) The min prop serves as the origin for the valid values.
We recommend (max - min) to be evenly divisible by the step.`,name:"step",required:!1,type:{name:"number"}},showValue:{defaultValue:null,description:"Always show `value` instead of Tooltip",name:"showValue",required:!1,type:{name:"boolean"}},valueLabelPosition:{defaultValue:null,description:"Position of the `value` when `showValue` is true",name:"valueLabelPosition",required:!1,type:{name:"SliderLabelPosition"}},valueLabelColor:{defaultValue:null,description:"Color of the `value` when `showValue` is true",name:"valueLabelColor",required:!1,type:{name:"SliderLabelColor"}},size:{defaultValue:null,description:"Size small/medium/large of the component (Slider)",name:"size",required:!1,type:{name:"SliderSize"}},value:{defaultValue:null,description:`Current/selected value of the range of the Component (Slider)
  - should be used in Controlled Mode only
  - in ranged mode should be an array of two numbers`,name:"value",required:!1,type:{name:"number | number[]"}},valueFormatter:{defaultValue:null,description:"Function to format the value, e.g. add %. By default, returns `${value}%`",name:"valueFormatter",required:!1,type:{name:"(value: number) => string"}},valueText:{defaultValue:null,description:`Text/presentation of current/selected value
 - should be used in Controlled Mode only`,name:"valueText",required:!1,type:{name:"string"}},indicateSelection:{defaultValue:null,description:"Show selected from Slider range value",name:"indicateSelection",required:!1,type:{name:"boolean"}},prefix:{defaultValue:null,description:`Options for initial/start/prefix element, it can be one of:
 - Any Component (react component, node, text, number etc.)
 - Or it can be an object of options for Icons component (see Icon components props)
 - Or it can be an object for Label (Icon, Heading - and other components)
 - Or it can be Render Props Function witch are getting value and valueText`,name:"prefix",required:!1,type:{name:"string | ReactElement<any, string | JSXElementConstructor<any>> | { icon: IconType; } | ((value: number, valueText: string) => void)"}},postfix:{defaultValue:null,description:"Options for postfix/end/finishing element. Same as prefix element.",name:"postfix",required:!1,type:{name:"string | ReactElement<any, string | JSXElementConstructor<any>> | { icon: IconType; } | ((value: number, valueText: string) => void)"}},selectionIndicatorWidth:{defaultValue:null,description:"Width of SelectionIndicator (i.e. TextField)",name:"selectionIndicatorWidth",required:!1,type:{name:"string"}}}}}catch{}const it=13,ot=27,lt=8,st=9,dt=32,ut=33,ct=34,pt=35,ft=36,mt=37,_t=38,yt=39,ht=40;function I(e,t,n){return e?e.keyCode===t||e.which===t||n:!1}function Y(e){return I(e,it)}function ge(e){return e.shiftKey&&Y(e)}function be(e){return I(e,ot)}function G(e){return I(e,_t)}function Z(e){return I(e,ht)}function Q(e){return I(e,yt)}function ee(e){return I(e,mt)}function Se(e){return I(e,lt)}function xe(e){return I(e,dt)}function te(e){return I(e,st)}function ne(e){return I(e,ut)}function re(e){return I(e,ct)}function ae(e){return I(e,pt)}function ie(e){return I(e,ft)}function Ve(e){return e.shiftKey&&te(e)}try{Y.displayName="isEnterEvent",Y.__docgenInfo={description:"",displayName:"isEnterEvent",props:{}}}catch{}try{ge.displayName="isShiftEnterEvent",ge.__docgenInfo={description:"",displayName:"isShiftEnterEvent",props:{}}}catch{}try{be.displayName="isEscapeEvent",be.__docgenInfo={description:"",displayName:"isEscapeEvent",props:{}}}catch{}try{G.displayName="isArrowUpEvent",G.__docgenInfo={description:"",displayName:"isArrowUpEvent",props:{}}}catch{}try{Z.displayName="isArrowDownEvent",Z.__docgenInfo={description:"",displayName:"isArrowDownEvent",props:{}}}catch{}try{Q.displayName="isArrowRightEvent",Q.__docgenInfo={description:"",displayName:"isArrowRightEvent",props:{}}}catch{}try{ee.displayName="isArrowLeftEvent",ee.__docgenInfo={description:"",displayName:"isArrowLeftEvent",props:{}}}catch{}try{Se.displayName="isBackspaceEvent",Se.__docgenInfo={description:"",displayName:"isBackspaceEvent",props:{}}}catch{}try{xe.displayName="isSpaceEvent",xe.__docgenInfo={description:"",displayName:"isSpaceEvent",props:{}}}catch{}try{te.displayName="isTabEvent",te.__docgenInfo={description:"",displayName:"isTabEvent",props:{}}}catch{}try{ne.displayName="isPageUpEvent",ne.__docgenInfo={description:"",displayName:"isPageUpEvent",props:{}}}catch{}try{re.displayName="isPageDownEvent",re.__docgenInfo={description:"",displayName:"isPageDownEvent",props:{}}}catch{}try{ae.displayName="isEndEvent",ae.__docgenInfo={description:"",displayName:"isEndEvent",props:{}}}catch{}try{ie.displayName="isHomeEvent",ie.__docgenInfo={description:"",displayName:"isHomeEvent",props:{}}}catch{}try{Ve.displayName="isShiftTabEvent",Ve.__docgenInfo={description:"",displayName:"isShiftTabEvent",props:{}}}catch{}const vt="_rail_6i2o2_1",gt="_small_6i2o2_10",bt="_medium_6i2o2_16",St="_large_6i2o2_22",Ee={rail:vt,small:gt,medium:bt,large:St},oe=i.forwardRef(({className:e,children:t,onClick:n=R,size:a},r)=>{const{shapeTestId:o}=me();function c(l){n(l)}return m.jsx("div",{"data-testid":o("rail"),className:P(Ee.rail,q(Ee,a),e),onClick:c,ref:r,children:t})});try{oe.displayName="SliderRail",oe.__docgenInfo={description:"",displayName:"SliderRail",props:{onClick:{defaultValue:null,description:"Callback fired when the rail is clicked.",name:"onClick",required:!1,type:{name:"(event: MouseEvent<Element, MouseEvent>) => void"}},children:{defaultValue:null,description:"The child elements inside the slider rail.",name:"children",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>> | ReactElement<any, string | JSXElementConstructor<any>>[]"}},size:{defaultValue:null,description:"The size of the slider rail.",name:"size",required:!0,type:{name:"SliderSize"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const xt="_track_p1i26_1",Vt="_positive_p1i26_11",Et="_negative_p1i26_15",Te={track:xt,positive:Vt,negative:Et},le=De.memo(({className:e,color:t})=>m.jsx("div",{className:P(Te.track,q(Te,t),e)}));try{le.displayName="SliderTrack",le.__docgenInfo={description:"",displayName:"SliderTrack",props:{color:{defaultValue:null,description:"The color of the slider track.",name:"color",required:!0,type:{name:"SliderColor"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const Tt="_filledTrack_1cjix_1",Ct="_positive_1cjix_11",It="_negative_1cjix_15",Ce={filledTrack:Tt,positive:Ct,negative:It};function qt(e,t,n){return n?{right:`${t}%`,width:`${e-t}%`}:{left:`${t}%`,width:`${e-t}%`}}const se=({className:e,dimension:t=0,offset:n=0,reverse:a=!1,color:r})=>{const o=qt(t,n,a);return m.jsx("div",{className:P(Ce.filledTrack,q(Ce,r),e),style:o})};try{se.displayName="SliderFilledTrack",se.__docgenInfo={description:"",displayName:"SliderFilledTrack",props:{dimension:{defaultValue:{value:"0"},description:"The size of the filled track, based on the selected value.",name:"dimension",required:!1,type:{name:"number"}},offset:{defaultValue:{value:"0"},description:"The offset from the start of the track.",name:"offset",required:!1,type:{name:"number"}},reverse:{defaultValue:{value:"false"},description:"If true, the filled track starts from the end instead of the beginning.",name:"reverse",required:!1,type:{name:"boolean"}},color:{defaultValue:null,description:"The color of the filled track.",name:"color",required:!0,type:{name:"SliderColor"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const Nt="_thumb_1m4vv_1",wt="_dragging_1m4vv_14",kt="_focused_1m4vv_22",At="_notDisabledThumb_1m4vv_28",Pt="_positive_1m4vv_43",Rt="_negative_1m4vv_51",Dt="_small_1m4vv_59",Lt="_medium_1m4vv_64",Mt="_large_1m4vv_69",Ot="_label_1m4vv_74",jt="_positionTop_1m4vv_83",$t="_positionBottom_1m4vv_86",Ft="_colorPrimary_1m4vv_89",Bt="_colorSecondary_1m4vv_92",A={thumb:Nt,dragging:wt,focused:kt,notDisabledThumb:At,"focus-visible":"_focus-visible_1m4vv_28",positive:Pt,negative:Rt,small:Dt,medium:Lt,large:Mt,label:Ot,positionTop:jt,positionBottom:$t,colorPrimary:Ft,colorSecondary:Bt},de=({className:e,index:t=0,onMove:n=R,position:a=0,size:r,color:o})=>{const{max:c,min:l,ranged:p,value:u,valueText:_}=$(),h=p?u[t]:u,v=p?_[t]:_,{active:g,ariaLabel:b,ariaLabelledby:S,disabled:V,dragging:N,focused:x,shapeTestId:k,showValue:T,valueLabelPosition:C,valueLabelColor:s}=me(),{setActive:f,setFocused:d,setDragging:y}=_e(),E=i.useRef(null);function w(){d(null),f(null)}function F(){d(t),f(t)}function D(){f(null)}function B(z){z.stopPropagation(),y(t),document.addEventListener("pointermove",n),document.addEventListener("pointerup",L)}function L(){y(null),document.removeEventListener("pointermove",n),document.removeEventListener("pointerup",L)}return i.useEffect(()=>{x===t&&E&&E.current&&E.current.focus()},[x,t]),m.jsx(Oe,{open:g===t||N===t,content:T?null:v,position:"top",showDelay:Ge,addKeyboardHideShowTriggersByDefault:!1,children:m.jsx("div",{"aria-label":b,"aria-labelledby":S,"aria-valuemax":c,"aria-valuemin":l,"aria-valuenow":h,"aria-valuetext":v,"aria-disabled":V,className:P(A.thumb,q(A,o),q(A,r),{[A.dragging]:N===t,[A.focused]:x,[A.notDisabledThumb]:!V},e),"data-testid":k(`thumb-${t}`),onFocus:F,onBlur:w,onPointerDown:B,onPointerLeave:D,ref:E,role:"slider",style:{left:`${a}%`},tabIndex:V?-1:0,children:T&&m.jsx("label",{className:P(A.label,q(A,X("color-"+s)),q(A,X("position-"+C))),children:v})})})};try{de.displayName="SliderThumb",de.__docgenInfo={description:"",displayName:"SliderThumb",props:{index:{defaultValue:{value:"0"},description:"The index of the thumb (used in range sliders).",name:"index",required:!1,type:{name:"number"}},onMove:{defaultValue:null,description:"Callback fired when the thumb is moved.",name:"onMove",required:!1,type:{name:"(event: PointerEvent) => void"}},position:{defaultValue:{value:"0"},description:"The position of the thumb, represented as an offset percentage from the start of the track.",name:"position",required:!1,type:{name:"number"}},size:{defaultValue:null,description:"The size of the slider thumb.",name:"size",required:!0,type:{name:"SliderSize"}},color:{defaultValue:null,description:"The color theme of the slider thumb.",name:"color",required:!0,type:{name:"SliderColor"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const zt="_base_94m50_1",Ht="_disabled_94m50_8",Kt="_small_94m50_16",Wt="_medium_94m50_20",Xt="_large_94m50_24",M={base:zt,disabled:Ht,small:Kt,medium:Wt,large:Xt},ue=i.forwardRef(({className:e},t)=>{const{color:n,disabled:a,size:r,shapeTestId:o}=me(),{min:c,max:l,ranged:p,step:u,value:_}=$(),{changeThumbValue:h,drugThumb:v,decreaseValue:g,increaseValue:b}=_e(),{railCoords:S,railRef:V}=nt(),{dimension:N,offset:x,positions:k,thumbKeys:T}=We(l,c,p,_),C=i.useCallback(d=>{const y=Math.round(d.clientX-S.left),E=ve(y,c,l,S,u);v(E)},[v,c,l,S,u]),s=i.useCallback(d=>{const y=d.clientX-S.left,E=ve(y,c,l,S,u),w=Je(E,p,_);h(E,w)},[h,c,l,S,p,u,_]);function f(d){if(G(d)||Q(d))return b();if(Z(d)||ee(d))return g();if(ne(d))return d.preventDefault(),b(he(l,c,u));if(re(d))return d.preventDefault(),g(he(l,c,u));if(ie(d))return d.preventDefault(),h(c);if(ae(d))return d.preventDefault(),h(l)}return m.jsx("div",{className:P(M.base,{[q(M,r)]:r,[q(M,n)]:n,[M.disabled]:a},e),"data-testid":o("base"),onKeyDown:f,children:m.jsxs(oe,{onClick:s,size:r,ref:V,children:[m.jsx(le,{color:n}),V.current&&m.jsxs(m.Fragment,{children:[m.jsx(se,{dimension:N,offset:x,color:n}),k.map((d,y)=>m.jsx(de,{index:y,onMove:C,position:d,color:n,size:r},T[y]))]})]})})});try{ue.displayName="SliderBase",ue.__docgenInfo={description:"",displayName:"SliderBase",props:{className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const Ut="_selectionIndicator_1tm2u_1",Jt={selectionIndicator:Ut},Yt=300;function Gt(e,t,n,a){return t?e?[n[1],a[1]]:[n[0],a[0]]:[n,a]}function Zt(e){return e.replace(/\D/g,"")}const ce=({kind:e="prefix"})=>{const t=e==="postfix",{ranged:n,value:a,valueText:r}=$(),[,o]=Gt(t,n,a,r),{changeThumbValue:c}=_e(),l=i.useMemo(()=>Fe(p=>{const u=Zt(p);c(u,t?1:0,!0)},Yt),[c,t]);return m.jsx($e,{onChange:l,value:String(o),className:Jt.selectionIndicator})};try{ce.displayName="SelectionIndicator",ce.__docgenInfo={description:"",displayName:"SelectionIndicator",props:{kind:{defaultValue:{value:"prefix"},description:"Determines whether the selection indicator is a prefix or postfix.",name:"kind",required:!1,type:{name:"InfixKind"}},key:{defaultValue:null,description:"The key for the selection indicator (used for React key uniqueness).",name:"key",required:!1,type:{name:"InfixKind"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const Qt={clickable:!1,iconSize:18,ignoreFocusStyle:!0};function pe(e){const t=e==="postfix",{prefix:n,postfix:a,indicateSelection:r,selectionIndicatorWidth:o}=at(),{ranged:c,value:l,valueText:p}=$(),u=t?a:n;if(r&&(t||c))return[!0,[],m.jsx(ce,{kind:e},e),{width:o}];if(typeof u=="object"&&u.icon){const{icon:_,...h}=u,v={...Qt,...h};return[!0,[],m.jsx(je,{icon:_,...v},"infix-icon"),{}]}return typeof u=="function"?[!0,[],u(l,p),{}]:typeof u=="string"?[!0,["txt"],m.jsx(m.Fragment,{children:u}),{}]:typeof u>"u"?[!1,[],null,{}]:[!0,[],m.jsx(m.Fragment,{children:u}),{}]}try{pe.displayName="useSliderInfixComponent",pe.__docgenInfo={description:"",displayName:"useSliderInfixComponent",props:{}}}catch{}const en="_infix_m9h75_1",tn="_txt_m9h75_7",nn="_prefix_m9h75_11",rn="_postfix_m9h75_15",K={infix:en,txt:tn,prefix:nn,postfix:rn},j=({kind:e=j.kinds.PREFIX})=>{const[t,n,a,r]=pe(e);return t&&m.jsx("div",{className:P(K.infix,q(K,e),n.map(o=>q(K,o))),style:r,children:a})},O=Be(j,{kinds:Ie});try{j.displayName="SliderInfix",j.__docgenInfo={description:"",displayName:"SliderInfix",props:{kind:{defaultValue:{value:"SliderInfix.kinds.PREFIX"},description:"Specifies the type of infix (prefix or postfix).",name:"kind",required:!1,type:{name:"InfixKind"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const an="_slider_17qke_1",on="_valueShown_17qke_9",ln="_positionTop_17qke_9",sn="_positionBottom_17qke_12",W={slider:an,valueShown:on,positionTop:ln,positionBottom:sn},fe=i.forwardRef(({ariaLabel:e,ariaLabelledby:t,className:n,color:a,"data-testid":r="monday-slider",disabled:o=!1,id:c,max:l=100,min:p=0,onChange:u=R,ranged:_=!1,step:h=1,showValue:v=!1,valueLabelPosition:g="top",valueLabelColor:b="primary",size:S="small",value:V,defaultValue:N=0,valueFormatter:x=y=>`${y}%`,valueText:k,indicateSelection:T=!1,prefix:C,postfix:s,selectionIndicatorWidth:f="60px"},d)=>{const y=i.useRef(null),E=Le(d,y),w=i.useMemo(()=>({prefix:C,postfix:s,indicateSelection:T,selectionIndicatorWidth:f}),[C,s,T,f]);return m.jsx(J,{ariaLabel:e,ariaLabelledby:t,color:a,"data-testid":r,disabled:o,infixOptions:w,max:l,min:p,onChange:u,ranged:_,showValue:v,valueLabelPosition:g,valueLabelColor:b,size:S,step:h,value:V,defaultValue:Xe(N,p,l,_),valueFormatter:x,valueText:k,children:m.jsxs("div",{className:P(W.slider,{[W.valueShown]:v},q(W,X("position-"+g)),n),"data-testid":r,id:c,ref:E,children:[m.jsx(O,{kind:O.kinds.PREFIX}),m.jsx(ue,{}),m.jsx(O,{kind:O.kinds.POSTFIX})]})})}),Vn=ze(fe,{sizes:He,colors:qe});try{fe.displayName="Slider",fe.__docgenInfo={description:"",displayName:"Slider",props:{ariaLabel:{defaultValue:null,description:"Define a string that labels the current element (Slider)",name:"ariaLabel",required:!1,type:{name:"string"}},ariaLabelledby:{defaultValue:null,description:"ElementId of Node that have the text needed for labeling the current element (Slider)",name:"ariaLabelledby",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"Custom `class name` to be added to the component-root-node",name:"className",required:!1,type:{name:"string"}},color:{defaultValue:null,description:"Color Mode (primary/positive/negative) of the component (Slider)",name:"color",required:!1,type:{name:"SliderColor"}},"data-testid":{defaultValue:null,description:"Unique TestId - can be used as Selector for integration tests and other needs (tracking, etc)",name:"data-testid",required:!1,type:{name:"string"}},defaultValue:{defaultValue:{value:"0"},description:"",name:"defaultValue",required:!1,type:{name:"number | number[]"}},disabled:{defaultValue:{value:"false"},description:`If set to true, Component (Slider) will be disabled
 - impossible to change value of component (Slider)
 - visual changes (opacity)`,name:"disabled",required:!1,type:{name:"boolean"}},id:{defaultValue:null,description:"Attribute `id` to be added to the component-root-node",name:"id",required:!1,type:{name:"string"}},max:{defaultValue:{value:"100"},description:"Max range value of the component (Slider)",name:"max",required:!1,type:{name:"number"}},min:{defaultValue:{value:"0"},description:"Min range value of the component (Slider)",name:"min",required:!1,type:{name:"number"}},onChange:{defaultValue:null,description:`Optional onChange callback (for outer trigger or Controlled mode)
- required in Controlled Mode`,name:"onChange",required:!1,type:{name:"(value: number | number[]) => void"}},ranged:{defaultValue:{value:"false"},description:"If true switch slider to RRange mode (two Thumbs)",name:"ranged",required:!1,type:{name:"boolean"}},step:{defaultValue:{value:"1"},description:`The granularity with which the slider can step through values.
(A "discrete" slider.) The min prop serves as the origin for the valid values.
We recommend (max - min) to be evenly divisible by the step.`,name:"step",required:!1,type:{name:"number"}},showValue:{defaultValue:{value:"false"},description:"Always show `value` instead of Tooltip",name:"showValue",required:!1,type:{name:"boolean"}},valueLabelPosition:{defaultValue:{value:"top"},description:"Position of the `value` when `showValue` is true",name:"valueLabelPosition",required:!1,type:{name:"SliderLabelPosition"}},valueLabelColor:{defaultValue:{value:"primary"},description:"Color of the `value` when `showValue` is true",name:"valueLabelColor",required:!1,type:{name:"SliderLabelColor"}},size:{defaultValue:{value:"small"},description:"Size small/medium/large of the component (Slider)",name:"size",required:!1,type:{name:"SliderSize"}},value:{defaultValue:null,description:`Current/selected value of the range of the Component (Slider)
  - should be used in Controlled Mode only
  - in ranged mode should be an array of two numbers`,name:"value",required:!1,type:{name:"number | number[]"}},valueFormatter:{defaultValue:{value:"(value: number) => `${value}%`"},description:"Function to format the value, e.g. add %. By default, returns `${value}%`",name:"valueFormatter",required:!1,type:{name:"(value: number) => string"}},valueText:{defaultValue:null,description:`Text/presentation of current/selected value
 - should be used in Controlled Mode only`,name:"valueText",required:!1,type:{name:"string"}},indicateSelection:{defaultValue:{value:"false"},description:"Show selected from Slider range value",name:"indicateSelection",required:!1,type:{name:"boolean"}},prefix:{defaultValue:null,description:`Options for initial/start/prefix element, it can be one of:
 - Any Component (react component, node, text, number etc.)
 - Or it can be an object of options for Icons component (see Icon components props)
 - Or it can be an object for Label (Icon, Heading - and other components)
 - Or it can be Render Props Function witch are getting value and valueText`,name:"prefix",required:!1,type:{name:"string | ReactElement<any, string | JSXElementConstructor<any>> | { icon: IconType; } | ((value: number, valueText: string) => void)"}},postfix:{defaultValue:null,description:"Options for postfix/end/finishing element. Same as prefix element.",name:"postfix",required:!1,type:{name:"string | ReactElement<any, string | JSXElementConstructor<any>> | { icon: IconType; } | ((value: number, valueText: string) => void)"}},selectionIndicatorWidth:{defaultValue:{value:"60px"},description:"Width of SelectionIndicator (i.e. TextField)",name:"selectionIndicatorWidth",required:!1,type:{name:"string"}}}}}catch{}export{Vn as S};
