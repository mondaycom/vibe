import{r as n,R as i}from"./index-Hemj67b4.js";import{c as P}from"./index-BpvXyOxN.js";import{u as v}from"./useMergeRef-DQ4XPFxl.js";import{g as h,C as R}from"./test-ids-utils-9ISiqDto.js";import{u as V}from"./index-CXrJR90Q.js";import{g as C}from"./typesciptCssModulesHelper-Ji7rRrZn.js";import{c as I}from"./camelCase-B8c2Dc7Y.js";import{w as L}from"./withStaticProps-DfSG2La2.js";const x="_tabPanelWrapper_8vrwg_1",w={tabPanelWrapper:x},E=n.forwardRef(({className:e,id:s,children:t,index:l,"data-testid":o},p)=>{const d=n.useRef(null),u=v(p,d);return i.createElement("div",{key:`${s}_${l}`,ref:u,className:P(w.tabPanelWrapper,e),id:s,"data-testid":o||h(R.TAB_PANEL,s),role:"tabpanel"},t)});try{E.displayName="TabPanel",E.__docgenInfo={description:"",displayName:"TabPanel",props:{children:{defaultValue:null,description:"The content inside the tab panel.",name:"children",required:!1,type:{name:"string | ReactElement<any, string | JSXElementConstructor<any>> | ReactElement<any, string | JSXElementConstructor<any>>[]"}},index:{defaultValue:null,description:"The index of the tab panel.",name:"index",required:!1,type:{name:"number"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const q=n.forwardRef(({className:e,id:s,activeTabId:t=0,children:l,"data-testid":o},p)=>{const d=n.useRef(null),u=v(p,d),[T,b]=n.useState(t),[a,m]=n.useState(t),c=V(t);n.useEffect(()=>{t!==c&&t!==a&&(b(a),m(t))},[t,a,c]);const g=n.useCallback(r=>{b(a),m(r)},[a]);return i.createElement("div",{ref:u,className:e,id:s,"data-testid":o||h(R.TABS_CONTEXT,s)},i.Children.map(l,r=>{if(r.type.isTabList){const f=r.props.onTabChange,A=S=>{g(S),f==null||f(S)};return i.cloneElement(r,{activeTabId:a,onTabChange:A})}if(r.type.isTabPanels){const f=T<a?"ltr":"rtl";return i.cloneElement(r,{activeTabId:a,animationDirection:f})}return r}))});try{q.displayName="TabsContext",q.__docgenInfo={description:"",displayName:"TabsContext",props:{activeTabId:{defaultValue:{value:"0"},description:"The index of the currently active tab.",name:"activeTabId",required:!1,type:{name:"number"}},children:{defaultValue:null,description:"The child elements representing the tab list and tab panels.",name:"children",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>> | ReactElement<any, string | JSXElementConstructor<any>>[]"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}var N=(e=>(e.RTL="rtl",e.LTR="ltr",e))(N||{});const D="_tabPanelsWrapper_1djsp_1",W="_tabPanel_1djsp_1",j="_animationDirectionRtl_1djsp_5",X="_animationDirectionLtr_1djsp_9",J="_active_1djsp_13",M="_panelSlideIn_1djsp_1",_={tabPanelsWrapper:D,tabPanel:W,animationDirectionRtl:j,animationDirectionLtr:X,active:J,panelSlideIn:M},y=n.forwardRef(({className:e,id:s,activeTabId:t=0,animationDirection:l="rtl",children:o,"data-testid":p},d)=>{const u=n.useRef(null),T=v(d,u),b=n.useMemo(()=>i.Children.map(o,(a,m)=>{const c=t===m;if(!c)return null;const g=c?"active":"non-active",r=c?`animation-direction-${l}`:"";return i.cloneElement(a,{index:m,...a.props,className:P(_.tabPanel,[C(_,g)],[C(_,I(r))],a.props.className)})}).filter(Boolean),[o,t,l]);return i.createElement("div",{ref:T,className:P(_.tabPanelsWrapper,e),id:s,"data-testid":p||h(R.TAB_PANELS,s)},b)});Object.assign(y,{isTabPanels:!0});const K=L(y,{animationDirections:N});try{y.displayName="TabPanels",y.__docgenInfo={description:"",displayName:"TabPanels",props:{activeTabId:{defaultValue:{value:"0"},description:"The index of the currently active tab panel.",name:"activeTabId",required:!1,type:{name:"number"}},animationDirection:{defaultValue:{value:"rtl"},description:"The animation direction when switching between tab panels.",name:"animationDirection",required:!1,type:{name:"enum",value:[{value:'"ltr"'},{value:'"rtl"'}]}},children:{defaultValue:null,description:"The child elements representing tab panels.",name:"children",required:!1,type:{name:"ReactElement<TabPanelProps, string | JSXElementConstructor<any>> | ReactElement<TabPanelProps, string | JSXElementConstructor<...>>[]"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}export{q as T,K as a,E as b};
