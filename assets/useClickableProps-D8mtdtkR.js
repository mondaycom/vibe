import{j as e}from"./jsx-runtime-DDzbWKUH.js";import{useMDXComponents as d}from"./index-CXa8ra7y.js";import{M as p,C as m}from"./index-Br14hrzR.js";import{l as h}from"./tip-BKixvd9t.js";import{m as l}from"./storybook-link-CSL3MQUR.js";import{U as x,O as b}from"./useClickableProps.stories-DeZSeCdD.js";import{n as t}from"./link-ByEAMSgF.js";import"./index-Hemj67b4.js";import"./_commonjsHelpers-BosuxZz1.js";import"./iframe-6SCw9omM.js";import"./index-DT573JEO.js";import"./index-D63y3F3s.js";import"./index-BedKbVpA.js";import"./index-DrFu-skq.js";import"./index-BpvXyOxN.js";import"./Flex-DaTSFknt.js";import"./withStaticProps-DibdfTK_.js";import"./_tslib-BMUU9Vyh.js";import"./useClickableProps-BnhuEIMR.js";import"./function-utils-6EQ2u6TA.js";import"./isArray-Dxzbedgu.js";import"./_baseGetTag-ENn7h-yl.js";import"./isObject-C3e4t58V.js";import"./useMergeRef-DQ4XPFxl.js";import"./useIsomorphicLayoutEffect-FdvxY73P.js";import"./ssr-utils-Do6V6AqB.js";import"./test-ids-utils-9ISiqDto.js";const j=()=>e.jsxs(h,{title:"Check out our component solution for this use case",children:["For more simple use cases, you also can use our"," ",e.jsx(l,{size:l.sizes.SMALL,page:"Accessibility/Clickable",children:"Clickable"})," ","component wrapper."]});function c(n){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...d(),...n.components},{FunctionArgument:i,FunctionArguments:r,UsageGuidelines:a}=s;return i||o("FunctionArgument"),r||o("FunctionArguments"),a||o("UsageGuidelines"),e.jsxs(e.Fragment,{children:[e.jsx(p,{of:x}),`
`,e.jsx(s.h1,{id:"useclickableprops",children:"useClickableProps"}),`
`,e.jsx(s.p,{children:"Return props for making an element or component clickable by mouse and keyboard with screen reader support."}),`
`,e.jsx(m,{of:b}),`
`,e.jsx(s.h3,{id:"import",children:"Import"}),`
`,e.jsx(s.pre,{children:e.jsx(s.code,{className:"language-js",children:`import { useClickableProps } from "@vibe/core/hooks";
`})}),`
`,e.jsx(j,{}),`
`,e.jsx(s.h2,{id:"usage",children:"Usage"}),`
`,e.jsx(a,{guidelines:["Use this hook instead of Clickable component wrapper when you want to customize clickable styles by yourself."]}),`
`,e.jsx(s.h2,{id:"arguments",children:"Arguments"}),`
`,e.jsxs(r,{children:[e.jsx(i,{name:"onClick",type:"(event: React.MouseEvent | React.KeyboardEvent) => void",description:e.jsx(e.Fragment,{children:"Click callback."})}),e.jsx(i,{name:"onMouseDown",type:"(event: React.MouseEvent) => void",description:e.jsx(e.Fragment,{children:"Mouse down callback."})}),e.jsx(i,{name:"disabled",type:"boolean",description:e.jsx(e.Fragment,{children:"Whether element is disabled or not."})}),e.jsx(i,{name:"id",type:"string",description:e.jsx(e.Fragment,{children:"Id of the element."})}),e.jsx(i,{name:"dataTestId",type:"string",description:e.jsx(e.Fragment,{children:"Id of the element for test purposes."})}),e.jsx(i,{name:"role",type:"string",description:e.jsxs(e.Fragment,{children:["Provide semantic meaning to content.",e.jsx(t,{size:t.sizes.SMALL,href:"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles",children:"More details."})]})}),e.jsx(i,{name:"tabIndex",type:"number",description:e.jsxs(e.Fragment,{children:["Specifies the tab order of the element. Default value is 0.",e.jsx(t,{size:t.sizes.SMALL,href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex",children:"More details."})]})}),e.jsx(i,{name:"ariaLabel",type:"string",description:e.jsxs(e.Fragment,{children:["Defines a string value that labels an interactive element for assistive technologies.",e.jsx(t,{size:t.sizes.SMALL,href:"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",children:"More details."})]})}),e.jsx(i,{name:"ariaHidden",type:"boolean",description:e.jsxs(e.Fragment,{children:["HTML attribute for hiding content from screen readers and other assistive technologies.",e.jsx(t,{size:t.sizes.SMALL,href:"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",children:"More details."})]})}),e.jsx(i,{name:"ariaHasPopup",type:"boolean",description:e.jsxs(e.Fragment,{children:["Indicates the availability and type of interactive popup element that can be triggered by the element on which the attribute is set.",e.jsx(t,{size:t.sizes.SMALL,href:"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-haspopup",children:"More details."})]})}),e.jsx(i,{name:"ariaExpanded",type:"boolean",description:e.jsxs(e.Fragment,{children:["Indicate if a control is expanded or collapsed, and whether or not its child elements are displayed or hidden.",e.jsx(t,{size:t.sizes.SMALL,href:"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-expanded",children:"More details."})]})})]}),`
`,e.jsx(s.h2,{id:"returns",children:"Returns"}),`
`,e.jsxs(r,{children:[e.jsx(i,{name:"ref",type:"(node: HTMLElement) => void",description:e.jsxs(e.Fragment,{children:["A React",e.jsx(t,{size:t.sizes.SMALL,href:"https://react.dev/reference/react/useRef",children:"ref"}),"object for the clickable element."]})}),e.jsx(i,{name:"onClick",type:"(event: React.MouseEvent | React.KeyboardEvent) => void",description:e.jsx(e.Fragment,{children:"Click callback."})}),e.jsx(i,{name:"onMouseDown",type:"(event: React.MouseEvent) => void",description:e.jsx(e.Fragment,{children:"Mouse down callback."})}),e.jsx(i,{name:"onKeyDown",type:"(event: React.MouseEvent) => void",description:e.jsx(e.Fragment,{children:"Key down callback."})}),e.jsx(i,{name:"id",type:"string",description:e.jsx(e.Fragment,{children:"Id of the element."})}),e.jsx(i,{name:"data-testid",type:"string",description:e.jsx(e.Fragment,{children:"Id of the element for test purposes."})}),e.jsx(i,{name:"role",type:"string",description:e.jsxs(e.Fragment,{children:["Provide semantic meaning to content.",e.jsx(t,{size:t.sizes.SMALL,href:"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles",children:"More details."})]})}),e.jsx(i,{name:"tabIndex",type:"number",description:e.jsxs(e.Fragment,{children:["Specifies the tab order of an element.",e.jsx(t,{size:t.sizes.SMALL,href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex",children:"More details."})]})}),e.jsx(i,{name:"aria-label",type:"string",description:e.jsxs(e.Fragment,{children:["Defines a string value that labels an interactive element.",e.jsx(t,{size:t.sizes.SMALL,href:"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",children:"More details."})]})}),e.jsx(i,{name:"aria-hidden",type:"boolean",description:e.jsxs(e.Fragment,{children:["Used to hide non-interactive content from the accessibility API.",e.jsx(t,{size:t.sizes.SMALL,href:"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",children:"More details."})]})}),e.jsx(i,{name:"aria-hasPopup",type:"boolean",description:e.jsxs(e.Fragment,{children:["Indicates the availability and type of interactive popup element that can be triggered by the element on which the attribute is set.",e.jsx(t,{size:t.sizes.SMALL,href:"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-haspopup",children:"More details."})]})}),e.jsx(i,{name:"aria-expanded",type:"boolean",description:e.jsxs(e.Fragment,{children:["Indicate if a control is expanded or collapsed, and whether or not its child elements are displayed or hidden.",e.jsx(t,{size:t.sizes.SMALL,href:"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-expanded",children:"More details."})]})})]})]})}function O(n={}){const{wrapper:s}={...d(),...n.components};return s?e.jsx(s,{...n,children:e.jsx(c,{...n})}):c(n)}function o(n,s){throw new Error("Expected component `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}export{O as default};
