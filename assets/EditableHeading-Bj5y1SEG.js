import{j as d}from"./jsx-runtime-lwGtIXvq.js";import{a as r,g as s,C as u}from"./test-ids-utils-CSfXomCJ.js";import{r as m}from"./index-CTZeEbLr.js";import{a as h,b as p,H as c}from"./Heading-CnJSJ7Ut.js";import{g as f}from"./typesciptCssModulesHelper-Ji7rRrZn.js";import{E as g}from"./EditableTypography-DzOd6qsY.js";import{c as _}from"./camelCase-CO1PkVrH.js";import{w as y}from"./withStaticProps-DfSG2La2.js";const E="_h1Bold_1ep3n_1",v="_h1Medium_1ep3n_8",b="_h1Normal_1ep3n_15",M="_h1Light_1ep3n_22",q="_h2Bold_1ep3n_29",C="_h2Medium_1ep3n_36",N="_h2Normal_1ep3n_43",V="_h2Light_1ep3n_50",L="_h3Bold_1ep3n_57",T="_h3Medium_1ep3n_64",w="_h3Normal_1ep3n_71",x="_h3Light_1ep3n_78",B={h1Bold:E,h1Medium:v,h1Normal:b,h1Light:M,h2Bold:q,h2Medium:C,h2Normal:N,h2Light:V,h3Bold:L,h3Medium:T,h3Normal:w,h3Light:x},t=m.forwardRef(({type:e="h1",weight:a="normal",id:n,"data-testid":l,...i},o)=>d.jsx(g,{ref:o,"data-testid":l||s(u.EDITABLE_HEADING,n),"data-vibe":r.EDITABLE_HEADING,component:c,typographyClassName:f(B,_(e+"-"+a)),type:e,weight:a,...i})),j=y(t,{types:p,weights:h});try{t.displayName="EditableHeading",t.__docgenInfo={description:"",displayName:"EditableHeading",props:{type:{defaultValue:{value:"h1"},description:"The type of the heading element.",name:"type",required:!1,type:{name:"enum",value:[{value:'"h1"'},{value:'"h2"'},{value:'"h3"'}]}},weight:{defaultValue:{value:"normal"},description:"The font weight of the heading.",name:"weight",required:!1,type:{name:"enum",value:[{value:'"medium"'},{value:'"bold"'},{value:'"normal"'},{value:'"light"'}]}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}},value:{defaultValue:null,description:"The current value of the text.",name:"value",required:!0,type:{name:"string"}},onChange:{defaultValue:null,description:"Callback fired when the value changes.",name:"onChange",required:!1,type:{name:"(value: string) => void"}},onClick:{defaultValue:null,description:"Callback fired when the component is clicked.",name:"onClick",required:!1,type:{name:"(event: MouseEvent<Element, MouseEvent> | KeyboardEvent<Element>) => void"}},readOnly:{defaultValue:null,description:"If true, the text is read-only and cannot be edited.",name:"readOnly",required:!1,type:{name:"boolean"}},placeholder:{defaultValue:null,description:"Placeholder text displayed when the value is empty.",name:"placeholder",required:!1,type:{name:"string"}},ariaLabel:{defaultValue:null,description:"The label of the component for accessibility.",name:"ariaLabel",required:!1,type:{name:"string"}},isEditMode:{defaultValue:null,description:"Controls whether the component is in edit mode.",name:"isEditMode",required:!1,type:{name:"boolean"}},autoSelectTextOnEditMode:{defaultValue:null,description:"If true, automatically selects all text when entering edit mode.",name:"autoSelectTextOnEditMode",required:!1,type:{name:"boolean"}},onEditModeChange:{defaultValue:null,description:"Callback fired when the edit mode changes.",name:"onEditModeChange",required:!1,type:{name:"(isEditMode: boolean) => void"}},tooltipProps:{defaultValue:null,description:"Props to customize the tooltip.",name:"tooltipProps",required:!1,type:{name:"Partial<TooltipProps>"}}}}}catch{}export{j as E};
