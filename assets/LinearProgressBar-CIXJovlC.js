import{j as t}from"./jsx-runtime-DDzbWKUH.js";import{r as u}from"./index-Hemj67b4.js";import{c as w}from"./index-BpvXyOxN.js";import{g as T}from"./typesciptCssModulesHelper-Ji7rRrZn.js";import{t as R}from"./toNumber-CBHRrcgy.js";import{g as L,C as D,b}from"./test-ids-utils-9ISiqDto.js";import{c as O}from"./camelCase-B8c2Dc7Y.js";import{w as Y}from"./withStaticProps-DfSG2La2.js";import{S as F}from"./sizes-BOsbvv4u.js";const G="_label_w0tgu_1",k={label:G},S=({forElement:e="",value:a=0})=>a==null?null:t.jsx("label",{htmlFor:e,className:k.label,children:`${a.toFixed()}%`});try{S.displayName="PercentageLabel",S.__docgenInfo={description:"",displayName:"PercentageLabel",props:{forElement:{defaultValue:{value:""},description:"The ID of the element this label is associated with.",name:"forElement",required:!1,type:{name:"string"}},value:{defaultValue:{value:"0"},description:"The percentage value to display.",name:"value",required:!1,type:{name:"number"}}}}}catch{}var N=(e=>(e.PRIMARY="primary",e.SECONDARY="secondary",e))(N||{}),q=(e=>(e.PRIMARY="primary",e.SECONDARY="secondary",e.POSITIVE="positive",e.NEGATIVE="negative",e.WARNING="warning",e.NONE="none",e))(q||{});const z="_wrapper_adtw8_1",H="_fullWidth_adtw8_9",Z="_container_adtw8_12",J="_progressBar_adtw8_15",K="_completed_adtw8_18",Q="_label_adtw8_22",U="_large_adtw8_26",X="_medium_adtw8_31",ee="_small_adtw8_36",d={wrapper:z,fullWidth:H,container:Z,progressBar:J,completed:K,label:Q,large:U,medium:X,small:ee},x=(e,a,r)=>{const l=R(e-a)/R(r-a)*100;return l>100?100:l},h=e=>w(d.progressBar,{[d.completed]:e>=100}),ae="_bar_y9lxi_1",re="_typePrimaryPrimary_y9lxi_8",te="_typePrimarySecondary_y9lxi_12",ne="_typePrimaryPositive_y9lxi_16",le="_typePrimaryNegative_y9lxi_20",se="_typePrimaryWarning_y9lxi_24",ie="_typeSecondaryPrimary_y9lxi_28",oe="_typeSecondarySecondary_y9lxi_32",ue="_typeSecondaryPositive_y9lxi_36",de="_typeSecondaryNegative_y9lxi_40",me="_typeSecondaryWarning_y9lxi_44",pe="_animate_y9lxi_48",P={bar:ae,typePrimaryPrimary:re,typePrimarySecondary:te,typePrimaryPositive:ne,typePrimaryNegative:le,typePrimaryWarning:se,typeSecondaryPrimary:ie,typeSecondarySecondary:oe,typeSecondaryPositive:ue,typeSecondaryNegative:de,typeSecondaryWarning:me,animate:pe},f=({value:e,type:a,barStyle:r,animated:l,min:s,max:m,color:p,barLabelName:c,id:_,"data-testid":i,className:n})=>{const g=u.useMemo(()=>w(P.bar,T(P,O("type__"+a+"--"+r)),n,{[P.animate]:l}),[a,r,l,n]),y=u.useMemo(()=>e==null?0:x(e,s,m),[e,s,m]);return e?t.jsx("div",{role:"progressbar","aria-label":c,"aria-valuenow":y,"aria-valuemin":0,"aria-valuemax":100,className:g,style:{width:`${y}%`,...p&&{backgroundColor:p}},id:_,"data-testid":i||L(D.BAR,_)}):null};try{f.displayName="Bar",f.__docgenInfo={description:"",displayName:"Bar",props:{barStyle:{defaultValue:null,description:"Determines the visual style of the progress bar.",name:"barStyle",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"primary"'},{value:'"warning"'},{value:'"negative"'},{value:'"secondary"'},{value:'"positive"'}]}},min:{defaultValue:null,description:"The minimum value of the progress bar.",name:"min",required:!1,type:{name:"number"}},max:{defaultValue:null,description:"The maximum value of the progress bar.",name:"max",required:!1,type:{name:"number"}},value:{defaultValue:null,description:"The current progress value.",name:"value",required:!1,type:{name:"number"}},animated:{defaultValue:null,description:"If true, enables animation effects.",name:"animated",required:!1,type:{name:"boolean"}},baseClass:{defaultValue:null,description:"Base class name for the bar.",name:"baseClass",required:!1,type:{name:"string"}},barLabelName:{defaultValue:null,description:"The ARIA label describing the progress bar.",name:"barLabelName",required:!1,type:{name:"string"}},color:{defaultValue:null,description:"Custom color for the progress bar.",name:"color",required:!1,type:{name:"string"}},type:{defaultValue:null,description:"The type of the bar.",name:"type",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'}]}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const V=u.forwardRef(({min:e=0,max:a=100,value:r=0,valueSecondary:l=0,animated:s=!0,barStyle:m="primary",className:p,size:c="small",indicateProgress:_=!1,multi:i=!1,multiValues:n=[],ariaLabel:g="",id:y,fullWidth:A=!1,"data-testid":C},E)=>{const B=u.useMemo(()=>w(d.wrapper,{[T(d,c.toString())]:c,[d.fullWidth]:A},p),[c,A,p]),j=u.useMemo(()=>{if(i){const o=n&&n.length&&n[0].value;return o==null?0:x(o,e,a)}return r==null?0:x(r,e,a)},[r,e,a,i,n]),W=u.useMemo(()=>i?t.jsx(t.Fragment,{children:[...n].reverse().map(({value:o,color:v},I)=>t.jsx(f,{className:h(o),barStyle:"none",value:o,animated:s,type:"primary",color:v,min:e,max:a,id:`bar_${v}_${I}`},`bar_${v}_${I}`))}):null,[e,a,s,n,i]),M=_?t.jsx(S,{forElement:"linear-progress-bar",value:j}):null,$=i?null:t.jsxs(t.Fragment,{children:[t.jsx(f,{className:h(r),barLabelName:g,barStyle:m,value:l,animated:s,type:"secondary",min:e,max:a,"data-testid":b.BAR_SECONDARY}),t.jsx(f,{className:h(r),barStyle:m,value:r,animated:s,type:"primary",min:e,max:a,"data-testid":b.BAR_PRIMARY})]});return t.jsxs("div",{className:B,ref:E,id:y,"data-testsid":C||L(b.LINEAR_PROGRESS_BAR,y),children:[t.jsxs("div",{className:d.container,children:[$,W]}),M]})}),Se=Y(V,{styles:q,barStyles:q,types:N,barTypes:N,sizes:F});try{V.displayName="LinearProgressBar",V.__docgenInfo={description:"",displayName:"LinearProgressBar",props:{barStyle:{defaultValue:{value:"primary"},description:"Determines the visual style of the progress bar.",name:"barStyle",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"primary"'},{value:'"warning"'},{value:'"negative"'},{value:'"secondary"'},{value:'"positive"'}]}},min:{defaultValue:{value:"0"},description:"The minimum value of the progress bar.",name:"min",required:!1,type:{name:"number"}},max:{defaultValue:{value:"100"},description:"The maximum value of the progress bar.",name:"max",required:!1,type:{name:"number"}},value:{defaultValue:{value:"0"},description:"The current progress value.",name:"value",required:!1,type:{name:"number"}},valueSecondary:{defaultValue:{value:"0"},description:"The secondary progress value.",name:"valueSecondary",required:!1,type:{name:"number"}},animated:{defaultValue:{value:"true"},description:"If true, enables animation effects.",name:"animated",required:!1,type:{name:"boolean"}},size:{defaultValue:{value:"small"},description:"The size of the progress bar.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'},{value:'"large"'},{value:'"xs"'},{value:'"xxs"'}]}},indicateProgress:{defaultValue:{value:"false"},description:"If true, displays the progress percentage.",name:"indicateProgress",required:!1,type:{name:"boolean"}},multi:{defaultValue:{value:"false"},description:"If true, enables multiple progress bars.\n**Note:** `value`, `valueSecondary`, and `barStyle` will not be used.",name:"multi",required:!1,type:{name:"boolean"}},multiValues:{defaultValue:{value:"[]"},description:"An array of bar values and colors for multi-bar mode.",name:"multiValues",required:!1,type:{name:"{ value?: number; color?: string; }[]"}},ariaLabel:{defaultValue:{value:""},description:"The ARIA label for the progress bar.",name:"ariaLabel",required:!1,type:{name:"string"}},fullWidth:{defaultValue:{value:"false"},description:"If true, makes the progress bar span the full container width.",name:"fullWidth",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}export{Se as L};
