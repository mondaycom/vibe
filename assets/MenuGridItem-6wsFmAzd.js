import{j as g}from"./jsx-runtime-DDzbWKUH.js";import{r as o,R as h}from"./index-Hemj67b4.js";import{u as S}from"./useMergeRef-DQ4XPFxl.js";import{N as f}from"./useFullKeyboardListeners-44yzp6oL.js";import{a as G,b as T,G as O}from"./useGridKeyboardNavigation-Baegmm3H.js";import{b as L}from"./useMenuItemKeyboardEvents-BmOqZcjR.js";import{g as k,C as D}from"./test-ids-utils-9ISiqDto.js";const b=({wrapperRef:e,setActiveItemIndex:n,getPreviousSelectableIndex:r,getNextSelectableIndex:t,activeItemIndex:a,isUnderSubMenu:d,closeMenu:l})=>{const u=G([],e);return o.useMemo(()=>({onOutboundNavigation:(s,m)=>{switch(u.onOutboundNavigation(s,m),m){case f.UP:return n(r(a));case f.DOWN:return n(t(a));case f.LEFT:d&&l({})}}}),[u,n,r,a,t,d,l])};try{b.displayName="useMenuGridItemNavContext",b.__docgenInfo={description:"",displayName:"useMenuGridItemNavContext",props:{wrapperRef:{defaultValue:null,description:"",name:"wrapperRef",required:!1,type:{name:"MutableRefObject<HTMLElement> & { current?: HTMLElement & { disabled?: boolean; }; }"}},setActiveItemIndex:{defaultValue:null,description:"",name:"setActiveItemIndex",required:!1,type:{name:"(index: number) => void"}},getNextSelectableIndex:{defaultValue:null,description:"",name:"getNextSelectableIndex",required:!1,type:{name:"(activeItemIndex: number) => number"}},getPreviousSelectableIndex:{defaultValue:null,description:"",name:"getPreviousSelectableIndex",required:!1,type:{name:"(activeItemIndex: number) => number"}},activeItemIndex:{defaultValue:null,description:"",name:"activeItemIndex",required:!1,type:{name:"number"}},isUnderSubMenu:{defaultValue:null,description:"",name:"isUnderSubMenu",required:!1,type:{name:"boolean"}},closeMenu:{defaultValue:null,description:"",name:"closeMenu",required:!1,type:{name:"(option: CloseMenuOption) => void"}}}}}catch{}const y=({wrapperRef:e,childRef:n,index:r,activeItemIndex:t,useDocumentEventListeners:a=!1})=>{const{lastNavigationDirectionRef:d}=T(),l=o.useMemo(()=>r===t,[t,r]);o.useEffect(()=>{var u,i,s;a||(l?(u=n.current)==null||u.focus():(s=(i=e==null?void 0:e.current)==null?void 0:i.blur)==null||s.call(i))},[n,l,d,e,a])};try{y.displayName="useFocusGridItemByActiveStatus",y.__docgenInfo={description:"",displayName:"useFocusGridItemByActiveStatus",props:{wrapperRef:{defaultValue:null,description:"",name:"wrapperRef",required:!0,type:{name:"RefObject<HTMLElement>"}},childRef:{defaultValue:null,description:"",name:"childRef",required:!0,type:{name:"RefObject<HTMLElement>"}},index:{defaultValue:null,description:"",name:"index",required:!0,type:{name:"number"}},activeItemIndex:{defaultValue:null,description:"",name:"activeItemIndex",required:!0,type:{name:"number"}},useDocumentEventListeners:{defaultValue:{value:"false"},description:"",name:"useDocumentEventListeners",required:!1,type:{name:"boolean"}}}}}catch{}const v=o.forwardRef(({className:e,id:n,children:r,index:t,activeItemIndex:a=-1,closeMenu:d,getNextSelectableIndex:l,getPreviousSelectableIndex:u,setActiveItemIndex:i,setSubMenuIsOpenByIndex:s,isUnderSubMenu:m=!1,disabled:M=!1,useDocumentEventListeners:q=!1,"data-testid":V},_)=>{const p=o.useRef(null),N=S(_,p),x=o.useRef(),c=r&&h.Children.only(r);c||console.error("MenuGridItem can accept only a single element as first level child, this element is not valid: ",c);const C=o.useCallback(I=>{s(t,I),I&&i(t)},[t,i,s]),{focusWithinProps:R}=L({onFocusWithinChange:C});y({wrapperRef:p,childRef:x,activeItemIndex:a,index:t,useDocumentEventListeners:q});const E=b({wrapperRef:p,setActiveItemIndex:i,getPreviousSelectableIndex:u,getNextSelectableIndex:l,activeItemIndex:a,isUnderSubMenu:m,closeMenu:d});return g.jsx("section",{ref:N,className:e,id:n,"data-testid":V||k(D.MENU_GRID_ITEM,n),tabIndex:-1,role:"grid",...R,children:g.jsx(O.Provider,{value:E,children:h.cloneElement(c,{...c==null?void 0:c.props,disabled:M,ref:x})})})});Object.assign(v,{isMenuChild:!0,isSelectable:!0});try{v.displayName="MenuGridItem",v.__docgenInfo={description:"",displayName:"MenuGridItem",props:{children:{defaultValue:null,description:"The content of the menu grid item.",name:"children",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>> | ReactElement<any, string | JSXElementConstructor<any>>[]"}},disabled:{defaultValue:{value:"false"},description:"If true, keyboard navigation will skip this item. This prop is also passed to the child.",name:"disabled",required:!1,type:{name:"boolean"}},closeMenu:{defaultValue:null,description:"A callback function to close the wrapping menu.",name:"closeMenu",required:!1,type:{name:"(option: CloseMenuOption) => void"}},activeItemIndex:{defaultValue:{value:"-1"},description:"The currently active index of the wrapping menu.",name:"activeItemIndex",required:!1,type:{name:"number"}},setActiveItemIndex:{defaultValue:null,description:"Callback function to set the active item index.",name:"setActiveItemIndex",required:!1,type:{name:"(index: number) => void"}},getNextSelectableIndex:{defaultValue:null,description:"Function to get the next selectable index.",name:"getNextSelectableIndex",required:!1,type:{name:"(activeItemIndex: number) => number"}},getPreviousSelectableIndex:{defaultValue:null,description:"Function to get the previous selectable index.",name:"getPreviousSelectableIndex",required:!1,type:{name:"(activeItemIndex: number) => number"}},index:{defaultValue:null,description:"The index of this menu grid item.",name:"index",required:!1,type:{name:"number"}},isUnderSubMenu:{defaultValue:{value:"false"},description:"If true, this item is under a submenu instead of a top-level menu.",name:"isUnderSubMenu",required:!1,type:{name:"boolean"}},setSubMenuIsOpenByIndex:{defaultValue:null,description:"Callback function to open or close a submenu by its index.",name:"setSubMenuIsOpenByIndex",required:!1,type:{name:"(index: number, isOpen: boolean) => void"}},useDocumentEventListeners:{defaultValue:{value:"false"},description:"If true, event listeners will be attached to the document.",name:"useDocumentEventListeners",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}export{v as M};
