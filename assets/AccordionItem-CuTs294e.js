import{j as E}from"./jsx-runtime-lwGtIXvq.js";import{c as q}from"./index-BpvXyOxN.js";import{r as n,R as g}from"./index-CTZeEbLr.js";import{u as N}from"./useMergeRef-Do2VYePL.js";import{a as A}from"./test-ids-utils-B1IbFLmr.js";import{E as R}from"./ExpandCollapse-Ch6_-r-e.js";const k="_accordion_1vrah_1",S="_accordionItemExpandCollapse_1vrah_8",T="_accordionItemExpandCollapseLast_1vrah_16",_={accordion:k,accordionItemExpandCollapse:S,accordionItemExpandCollapseLast:T},v="monday-accordion";function M(t,o,r){return o.id?o.id:r?`${r}--item-${t}`:`${v}--item-${t}`}const V=n.forwardRef(({children:t=null,allowMultiple:o=!1,"data-testid":r=v,defaultIndex:C=[],className:h="",id:s},y)=>{const p=n.useRef(null),u=N(y,p),[d,m]=n.useState(C),c=n.useMemo(()=>g.Children.toArray(t),[t]),l=n.useCallback(e=>d.includes(e),[d]),f=n.useCallback(e=>{if(o){const a=[...d];if(l(e)){const i=a.indexOf(e);i>-1&&a.splice(i,1)}else a.push(e);m(a);return}l(e)?m([]):m([e])},[l,d,o]),x=n.useMemo(()=>g.Children.map(c,(e,a)=>{const i={...e==null?void 0:e.props},b=M(a,i,s);return g.cloneElement(e,{...i,id:b,onClickAccordionCallback:()=>{f(a)},open:l(a),expandCollapseComponentClassName:q(_.accordionItemExpandCollapse,{[_.accordionItemExpandCollapseLast]:a===c.length-1})})}),[c,s,l,f]);return E.jsx("div",{ref:u,className:q(_.accordion,h),"data-testid":r,"data-vibe":A.ACCORDION,id:s,children:c&&x})});try{V.displayName="Accordion",V.__docgenInfo={description:"",displayName:"Accordion",props:{children:{defaultValue:null,description:"The content of the accordion (`AccordionItem` components).",name:"children",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>> | ReactElement<any, string | JSXElementConstructor<any>>[]"}},allowMultiple:{defaultValue:{value:"false"},description:"If true, multiple accordion items can be expanded at the same time.",name:"allowMultiple",required:!1,type:{name:"boolean"}},defaultIndex:{defaultValue:{value:"[]"},description:"An array of initially expanded item indexes.",name:"defaultIndex",required:!1,type:{name:"number[]"}},className:{defaultValue:{value:""},description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const I=n.forwardRef(({children:t=null,title:o="",className:r="",iconSize:C=24,iconPosition:h="right",id:s,open:y,onClick:p,onClickAccordionCallback:u,hideBorder:d=!1,headerClassName:m,contentClassName:c,expandCollapseComponentClassName:l,captureOnClick:f=!0},x)=>{const e=n.useRef(null),a=N(x,e),i=n.useCallback(()=>{u&&u(),p&&p()},[u,p]);return E.jsx("div",{ref:a,className:r,id:s,children:E.jsx(R,{iconSize:C,iconPosition:h,id:`expand-collapse--${s}`,onClick:i,open:y,title:o,hideBorder:d,componentClassName:l,headerClassName:m,contentClassName:c,captureOnClick:f,children:t})})});try{I.displayName="AccordionItem",I.__docgenInfo={description:"",displayName:"AccordionItem",props:{title:{defaultValue:{value:""},description:"The header content displayed in the accordion item.",name:"title",required:!1,type:{name:"ElementContent"}},children:{defaultValue:{value:"null"},description:"The content rendered inside the accordion item.",name:"children",required:!1,type:{name:"ElementContent"}},iconSize:{defaultValue:{value:"24"},description:"The size of the expand/collapse icon.",name:"iconSize",required:!1,type:{name:"string | number"}},iconPosition:{defaultValue:{value:"right"},description:"The position of the expand/collapse icon.",name:"iconPosition",required:!1,type:{name:"ExpandCollapseIconPosition"}},onClick:{defaultValue:null,description:"Callback fired upon item click.",name:"onClick",required:!1,type:{name:"() => void"}},open:{defaultValue:null,description:"@ignore",name:"open",required:!1,type:{name:"boolean"}},onClickAccordionCallback:{defaultValue:null,description:"@ignore",name:"onClickAccordionCallback",required:!1,type:{name:"() => void"}},hideBorder:{defaultValue:{value:"false"},description:"If true, the accordion item's border is hidden.",name:"hideBorder",required:!1,type:{name:"boolean"}},headerClassName:{defaultValue:null,description:"Class name applied to the accordion item's header.",name:"headerClassName",required:!1,type:{name:"string"}},contentClassName:{defaultValue:null,description:"Class name applied to the accordion item's content.",name:"contentClassName",required:!1,type:{name:"string"}},expandCollapseComponentClassName:{defaultValue:null,description:"Class name applied to the expand/collapse component.",name:"expandCollapseComponentClassName",required:!1,type:{name:"string"}},captureOnClick:{defaultValue:{value:"true"},description:"If true, the click event is handled during the capture phase.",name:"captureOnClick",required:!1,type:{name:"boolean"}},className:{defaultValue:{value:""},description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}export{V as A,I as a};
