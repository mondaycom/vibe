import{j as n}from"./jsx-runtime-lwGtIXvq.js";import{r as t}from"./index-CTZeEbLr.js";import{a as w,g as j,b as B}from"./test-ids-utils-B1IbFLmr.js";import{u as P}from"./useMergeRef-Do2VYePL.js";import{D as E}from"./Tooltip-CT7Hoq9W.js";import{I as F}from"./IconButton-pZXIim6m.js";import{t as M}from"./Info-jvFNh0HS.js";import{c as z}from"./index-BpvXyOxN.js";import{L as W}from"./Link-kEB9F9pq.js";import{D as H}from"./DialogContentContainer-vYpEsTib.js";import{F as O}from"./Flex-DYzKCQWz.js";import{T as q}from"./Text-BwLUW2oo.js";const $="_infoLink_17omv_1",U={infoLink:$},f=t.forwardRef(({className:e,...i},a)=>n.jsx(W,{ref:a,className:z(U.infoLink,e),...i}));try{f.displayName="InfoLink",f.__docgenInfo={description:"",displayName:"InfoLink",props:{textClassName:{defaultValue:null,description:"Class name applied to the link text.",name:"textClassName",required:!1,type:{name:"string"}},href:{defaultValue:null,description:"The URL the link points to.",name:"href",required:!1,type:{name:"string"}},text:{defaultValue:null,description:"The text content of the link.",name:"text",required:!1,type:{name:"string"}},rel:{defaultValue:null,description:"Specifies the relationship between the current document and the linked resource.",name:"rel",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:"Callback fired when the link is clicked.",name:"onClick",required:!1,type:{name:"(event: MouseEvent<Element, MouseEvent>) => void"}},target:{defaultValue:null,description:"Specifies where to open the linked document.",name:"target",required:!1,type:{name:"LinkTarget"}},ariaLabelDescription:{defaultValue:null,description:"The ARIA label description for accessibility.",name:"ariaLabelDescription",required:!1,type:{name:"string"}},ariaDescribedby:{defaultValue:null,description:"The ID of the element that describes this link.",name:"ariaDescribedby",required:!1,type:{name:"string"}},ariaLabeledBy:{defaultValue:null,description:"The ID of the element labeling this link.",name:"ariaLabeledBy",required:!1,type:{name:"string"}},icon:{defaultValue:null,description:"Icon displayed next to the link text.",name:"icon",required:!1,type:{name:"SubIcon"}},iconPosition:{defaultValue:null,description:"The position of the icon relative to the text.",name:"iconPosition",required:!1,type:{name:"LinkIconPosition"}},disableNavigation:{defaultValue:null,description:"If true, disables navigation when the link is clicked.",name:"disableNavigation",required:!1,type:{name:"boolean"}},inheritFontSize:{defaultValue:null,description:"If true, the link inherits the surrounding text's font size.",name:"inheritFontSize",required:!1,type:{name:"boolean"}},inlineText:{defaultValue:null,description:"If true, the link is styled to fit within inline text content.",name:"inlineText",required:!1,type:{name:"boolean"}},color:{defaultValue:null,description:"The link's color style",name:"color",required:!1,type:{name:"LinkColor"}},style:{defaultValue:null,description:"Inline style object applied to the link element.",name:"style",required:!1,type:{name:"CSSProperties"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const G="_contentWrapper_13lof_1",J="_link_13lof_4",V={contentWrapper:G,link:J},c=t.forwardRef(({id:e,title:i,body:a,link:l,className:d},u)=>!i&&!a&&!l?null:n.jsx(H,{id:e,type:"popover",size:"medium",className:d,children:n.jsxs(O,{ref:u,tabIndex:-1,align:"start",direction:"column",gap:"xs",className:V.contentWrapper,children:[i&&n.jsx(q,{type:"text2",weight:"bold",children:i}),a&&n.jsx(q,{type:"text2",element:"p",children:a}),l&&n.jsx(f,{className:V.link,...l})]})}));try{c.displayName="InfoDialogContent",c.__docgenInfo={description:"",displayName:"InfoDialogContent",props:{title:{defaultValue:null,description:"The title text displayed at the top of the info dialog.",name:"title",required:!1,type:{name:"string"}},body:{defaultValue:null,description:"The main body text content displayed in the info dialog.",name:"body",required:!1,type:{name:"string"}},link:{defaultValue:null,description:"Link configuration for the info dialog.",name:"link",required:!1,type:{name:"LinkProps"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const x=t.forwardRef(({id:e,className:i,title:a,body:l,link:d,"aria-label":u,"aria-labelledby":I,position:_="bottom-start",disabled:m=!1,onDialogShow:o,onDialogHide:r,hideButtonTooltip:T,dialogClassName:C,containerSelector:L,"data-testid":N},v)=>{const h=t.useRef(null),S=P(v,h),D=t.useRef(null),y=t.useRef(null),[g,b]=t.useState(!1),p=e?`${e}-dialog`:void 0,R=t.useCallback(()=>{b(!0),o==null||o(),requestAnimationFrame(()=>{var s;(s=y.current)==null||s.focus()})},[o]),A=t.useCallback(s=>{var k;b(!1),r==null||r(),s.key==="Escape"&&((k=h.current)==null||k.focus())},[r]);return n.jsx(E,{ref:D,id:p,disable:m,position:_,moveBy:{main:4,secondary:0},showTrigger:["click"],hideTrigger:["click","clickoutside","esckey"],onDialogDidShow:R,onDialogDidHide:A,containerSelector:L,content:n.jsx(c,{ref:y,id:p,title:a,body:l,link:d,className:C}),hideWhenReferenceHidden:!0,children:n.jsx(F,{ref:S,id:e,className:i,icon:M,size:"xs",kind:"tertiary",active:g,disabled:m,ariaLabel:u,ariaLabeledBy:I,ariaControls:p,ariaHasPopup:"dialog",ariaExpanded:g,"data-testid":N||j(B.INFO,e),"data-vibe":w.INFO,hideTooltip:T})})});try{x.displayName="Info",x.__docgenInfo={description:"",displayName:"Info",props:{title:{defaultValue:null,description:"The title text displayed at the top of the info dialog.",name:"title",required:!1,type:{name:"string"}},body:{defaultValue:null,description:"The main body text content displayed in the info dialog.",name:"body",required:!0,type:{name:"string"}},link:{defaultValue:null,description:"Link configuration for the info dialog.",name:"link",required:!1,type:{name:"LinkProps"}},"aria-labelledby":{defaultValue:null,description:"The ID of the element that labels the info button.",name:"aria-labelledby",required:!1,type:{name:"string"}},position:{defaultValue:{value:"bottom-start"},description:"The placement of the dialog relative to the info button.",name:"position",required:!1,type:{name:"DialogPosition"}},disabled:{defaultValue:{value:"false"},description:"If true, the info dialog is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},onDialogShow:{defaultValue:null,description:"Callback fired when the info dialog is shown.",name:"onDialogShow",required:!1,type:{name:"() => void"}},onDialogHide:{defaultValue:null,description:"Callback fired when the info dialog is hidden.",name:"onDialogHide",required:!1,type:{name:"() => void"}},dialogClassName:{defaultValue:null,description:"Class name applied to the dialog content.",name:"dialogClassName",required:!1,type:{name:"string"}},containerSelector:{defaultValue:null,description:"The CSS selector of the container where the dialog is rendered.",name:"containerSelector",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}},"aria-label":{defaultValue:null,description:"The ARIA label for the info button.",name:"aria-label",required:!1,type:{name:"string"}},hideButtonTooltip:{defaultValue:null,description:"If true, the tooltip for the info button is hidden.",name:"hideButtonTooltip",required:!1,type:{name:"boolean"}}}}}catch{}export{x as I};
