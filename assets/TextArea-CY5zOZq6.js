import{j as e}from"./jsx-runtime-lwGtIXvq.js";import{useMDXComponents as c}from"./index-BfNsOeqz.js";import{M as p}from"./index-DjO_O9dr.js";import{T as m,O as h,S as x,a as u,V as j}from"./TextArea.stories-BPE6mQoR.js";import"./index-CTZeEbLr.js";import"./_commonjsHelpers-BosuxZz1.js";import"./iframe-CAjsX6jE.js";import"./index-BSqlfxKv.js";import"./index-BrqHMYbN.js";import"./index-BedKbVpA.js";import"./index-DrFu-skq.js";import"./TextArea-CvCZPFaR.js";import"./index-BpvXyOxN.js";import"./test-ids-utils-B1IbFLmr.js";import"./Text-DYuGGc4e.js";import"./typesciptCssModulesHelper-oFWQo8l_.js";import"./TypographyConstants-DUhdqI_I.js";import"./useMergeRef-C008K4k9.js";import"./useIsomorphicLayoutEffect-CtfxbExD.js";import"./ssr-utils-Do6V6AqB.js";import"./useIsOverflowing-CDKfAaU8.js";import"./debounce-D3NSP8gs.js";import"./Tooltip-C-Jn4wPI.js";import"./function-utils-CSFuT5hl.js";import"./index-D4TxD6E0.js";import"./index-DEnqPy1V.js";import"./index-nBaTNWgC.js";import"./index-Cgi7_mab.js";import"./CSSTransition-CWtXmFMf.js";import"./extends-B6xKY8K9.js";import"./camelCase-CO1PkVrH.js";import"./DialogConstants-DkeX1sw_.js";import"./Icon-MuJFX10s.js";import"./noop-DX6rZLP_.js";import"./withStaticProps-DfSG2La2.js";import"./Flex-Brm3wHG7.js";import"./Clickable-CzbLyDBE.js";import"./useClickableProps-DFA_eb5O.js";import"./HiddenText-UFsS1QXm.js";import"./createComponentTemplate-B08h-OOW.js";import"./createStoryMetaSettingsDecorator-M9remOuO.js";import"./index-CkcRWdy2.js";import"./_tslib-Ct4JumdA.js";import"./Invite-BJsiPZ1j.js";import"./AddSmall-DFewX5rK.js";import"./Workspace-DtDO7RvQ.js";import"./Calendar-NzkLrIBg.js";import"./Table-DaDp-EUK.js";import"./Check-CxyRTNy4.js";import"./CloseSmall-DUYWL2FE.js";import"./Settings-WHGZN_3r.js";import"./Drag-8qsbRXq_.js";import"./DropdownChevronDown-Ck7VmPfy.js";import"./DropdownChevronRight-CtJWrCfY.js";import"./Wand-CS0YeGd1.js";import"./NewTab-CMglqP6P.js";import"./Info-jvFNh0HS.js";import"./NavigationChevronRight-DwBPRKWZ.js";import"./Remove-B_sTt2Ao.js";import"./ThumbsUp-WQ1WzAOd.js";import"./Search-ClaS4_rs.js";import"./SortDescending-DfYW2xR2.js";import"./Upgrade-CC_w3yRG.js";import"./index-B-lxVbXh.js";import"./v4-CtRu48qb.js";const f=""+new URL("do-46WcMEhc.svg",import.meta.url).href,g=""+new URL("dont-CFxvP7cP.svg",import.meta.url).href;function d(i){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",p:"p",pre:"pre",...c(),...i.components},{Canvas:r,ComponentRules:n,PropsTable:a,RelatedComponents:l,UsageGuidelines:o}=t;return r||s("Canvas"),n||s("ComponentRules"),a||s("PropsTable"),l||s("RelatedComponents"),o||s("UsageGuidelines"),e.jsxs(e.Fragment,{children:[e.jsx(p,{of:m}),`
`,e.jsx(t.h1,{id:"textarea",children:"TextArea"}),`
`,e.jsx(t.p,{children:"A field that allows users to write multiple lines of text. Text area includes a label and a field that users can type into. It can also come with helper text."}),`
`,e.jsx(r,{of:h}),`
`,e.jsx(t.h3,{id:"import",children:"Import"}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-js",children:`import { TextArea } from "@vibe/core";
`})}),`
`,e.jsx(t.h2,{id:"props",children:"Props"}),`
`,e.jsx(a,{}),`
`,e.jsx(t.h2,{id:"usage",children:"Usage"}),`
`,e.jsx(o,{guidelines:["Use text area to allow users to write multiple lines of text, usually for comments or descriptions.","Placeholders should only be used when necessary."]}),`
`,e.jsx(t.h2,{id:"accessibility",children:"Accessibility"}),`
`,e.jsx(o,{guidelines:[e.jsxs(e.Fragment,{children:["Using an ",e.jsx(t.code,{children:"id"})," is highly recommended for all instances to ensure the best accessibility."]}),e.jsxs(e.Fragment,{children:["Always provide a visible ",e.jsx(t.code,{children:"label"})," to ensure the textarea's purpose is clear to all users."]}),e.jsxs(e.Fragment,{children:["When using ",e.jsx(t.code,{children:"label"})," or ",e.jsx(t.code,{children:"helpText"}),", you must also provide an ",e.jsx(t.code,{children:"id"}),". This is crucial, as it allows screen readers to correctly associate the textarea with its label and description."]}),e.jsxs(e.Fragment,{children:["For required fields, use the ",e.jsx(t.code,{children:"required"})," prop to ensure proper screen reader announcements and native browser validation."]}),e.jsxs(e.Fragment,{children:["Provide descriptive error messages using the ",e.jsx(t.code,{children:"error"})," prop with ",e.jsx(t.code,{children:"helpText"})," to help users understand and correct validation issues."]}),e.jsxs(e.Fragment,{children:["The component automatically sets ",e.jsx(t.code,{children:"aria-invalid"})," when validation fails, including when character count exceeds ",e.jsx(t.code,{children:"maxLength"}),"."]}),e.jsxs(e.Fragment,{children:["Character counting with ",e.jsx(t.code,{children:"showCharCount"})," automatically provides accessibility labels for screen readers."]}),e.jsxs(e.Fragment,{children:["Use the ",e.jsx(t.code,{children:"aria-label"})," prop when a visible label is not desired but accessibility support is still needed."]}),e.jsxs(e.Fragment,{children:["The component automatically handles ",e.jsx(t.code,{children:"aria-describedby"})," attributes for help text and character limit information when applicable."]})]}),`
`,e.jsx(t.h2,{id:"variants",children:"Variants"}),`
`,e.jsx(t.h3,{id:"sizes",children:"Sizes"}),`
`,e.jsx(t.p,{children:"There are two sizes available: small and large."}),`
`,e.jsx(r,{of:x}),`
`,e.jsx(t.h3,{id:"states",children:"States"}),`
`,e.jsx(t.p,{children:"Text areas have all the same states as text fields."}),`
`,e.jsx(r,{of:u}),`
`,e.jsx(t.h3,{id:"validation",children:"Validation"}),`
`,e.jsx(t.p,{children:"If a required text area is left empty, use validation text to give feedback to users. The validation error state should appear after users try to submit a form."}),`
`,e.jsx(r,{of:j}),`
`,e.jsx(t.h2,{id:"dos-and-donts",children:"Do's and Don'ts"}),`
`,e.jsx(n,{rules:[{positive:{component:e.jsx(t.img,{src:f}),description:"Use text area if you want to ask an open question. Make sure the question is short and clear."},negative:{component:e.jsx(t.img,{src:g}),description:"Don't use a text area if you want short and specific info - use a text field instead. "}}]}),`
`,e.jsx(t.h2,{id:"related-components",children:"Related components"}),`
`,e.jsx(l,{componentsNames:["TextField","Dropdown","Search"]})]})}function Pe(i={}){const{wrapper:t}={...c(),...i.components};return t?e.jsx(t,{...i,children:e.jsx(d,{...i})}):d(i)}function s(i,t){throw new Error("Expected component `"+i+"` to be defined: you likely forgot to import, pass, or provide it.")}export{Pe as default};
