import{j as l}from"./jsx-runtime-lwGtIXvq.js";import{r as u,R as ae}from"./index-CTZeEbLr.js";import{c as C}from"./index-BpvXyOxN.js";import{C as ne}from"./Counter-DyOTi9CU.js";import{M as ie}from"./MenuButton-gBX5uuY6.js";import{M as W}from"./useMenuItemKeyboardEvents-iEl71uYW.js";import{M as re}from"./MenuItem-DwJI7TFd.js";import{A as j,C as le}from"./Avatar-B5_oJUFA.js";import{T as oe}from"./Tooltip-C4jvTLo0.js";import{F as V}from"./Flex-D6oMFEZi.js";import{V as se}from"./VirtualizedList-DOxw7nE3.js";import{u as h}from"./index-gB5zY9qh.js";import{u as X}from"./index-CkU0kzyk.js";import{u as ue}from"./index-BlWfPOxY.js";import{k as Z}from"./function-utils-DcIbnvDu.js";import{g as de}from"./typesciptCssModulesHelper-Ji7rRrZn.js";import{a as pe}from"./test-ids-utils-CSfXomCJ.js";const S=u.forwardRef(({avatarProps:e,menuItemProps:n,...o},r)=>{const t=u.useCallback(()=>l.jsx(j,{...e}),[e]);return l.jsx(re,{...o,...n,icon:t,ref:r})});Object.assign(S,{isMenuChild:!0,isSelectable:!0});try{S.displayName="AvatarMenuItem",S.__docgenInfo={description:"MenuItem with Avatar instead of Icon",displayName:"AvatarMenuItem",props:{avatarProps:{defaultValue:null,description:"Props passed to the avatar component.",name:"avatarProps",required:!1,type:{name:"AvatarProps"}},menuItemProps:{defaultValue:null,description:"Props passed to the menu item component.",name:"menuItemProps",required:!1,type:{name:"MenuItemProps"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}},isMenuChild:{defaultValue:null,description:"",name:"isMenuChild",required:!1,type:{name:"boolean"}},isSelectable:{defaultValue:null,description:"",name:"isSelectable",required:!1,type:{name:"boolean"}}}}}catch{}const ce="_scrollableContainer_5mit9_1",me="_virtualizedTooltipContainer_5mit9_10",$={scrollableContainer:ce,virtualizedTooltipContainer:me},x=Object.freeze({maxItemsWithoutScroll:10,itemLineHeight:34,itemLineWidth:150}),z=({avatarItems:e=[],avatarRenderer:n,type:o,tooltipContainerAriaLabel:r,tooltipContentContainerRef:t})=>{const a=u.useMemo(()=>e.map(c=>({value:c,height:x.itemLineHeight})),[e]),s=Math.min(e.length,x.maxItemsWithoutScroll),i={height:x.itemLineHeight*s,minWidth:x.itemLineWidth};return l.jsx("div",{className:$.virtualizedTooltipContainer,"aria-label":r,ref:t,tabIndex:-1,children:l.jsx(se,{items:a,itemRenderer:(c,m,y)=>n(c.value,m,y,o,!1),role:"treegrid",scrollableClassName:$.scrollableContainer,getItemId:(c,m)=>String(m),style:i})})};try{z.displayName="AvatarGroupCounterTooltipContentVirtualizedList",z.__docgenInfo={description:"",displayName:"AvatarGroupCounterTooltipContentVirtualizedList",props:{avatarItems:{defaultValue:{value:"[]"},description:"The list of avatars displayed in the virtualized tooltip.",name:"avatarItems",required:!1,type:{name:"AvatarItem[]"}},avatarRenderer:{defaultValue:null,description:"Function to render each avatar item.",name:"avatarRenderer",required:!1,type:{name:"(item: AvatarItem, index: number, style: CSSProperties, type: AvatarType, displayAsGrid: boolean) => ReactElement<any, string | JSXElementConstructor<any>>"}},tooltipContainerAriaLabel:{defaultValue:null,description:"The ARIA label of the tooltip container.",name:"tooltipContainerAriaLabel",required:!1,type:{name:"string"}},tooltipContentContainerRef:{defaultValue:null,description:"Ref for the tooltip content container.",name:"tooltipContentContainerRef",required:!1,type:{name:"Ref<HTMLDivElement>"}},type:{defaultValue:null,description:"The type of avatars in the tooltip.",name:"type",required:!1,type:{name:"enum",value:[{value:'"img"'},{value:'"text"'},{value:'"icon"'}]}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const fe="_tooltipAvatarItemTitle_1yijn_1",ye="_tooltipAvatarItemAvatar_1yijn_5",ve="_tooltipContainer_1yijn_9",_e="_tooltipGridContainer_1yijn_21",he="_scrollableContainer_1yijn_26",A={tooltipAvatarItemTitle:fe,tooltipAvatarItemAvatar:ye,tooltipContainer:ve,tooltipGridContainer:_e,scrollableContainer:he},Q=200,K=22,L=[Z.TAB],J=[Z.ESCAPE];function E({counterContainerRef:e=void 0,tooltipContentContainerRef:n,focusPrevPlaceholderRef:o,focusNextPlaceholderRef:r,isKeyboardTooltipVisible:t,setIsKeyboardTooltipVisible:a}){const s=u.useCallback(()=>{t||setTimeout(()=>a(!0),Q)},[t,a]),i=u.useCallback(()=>{t&&a(!1)},[t,a]);ue({ref:e,onFocusByKeyboard:s}),X({eventName:"blur",ref:n,callback:i}),h({keys:L,ref:e,withoutAnyModifier:!0,preventDefault:!0,callback:u.useCallback(()=>{t&&n!=null&&n.current&&n.current.focus()},[t,n])}),h({keys:L,modifier:h.modifiers.SHIFT,ref:e,callback:i}),h({keys:L,ref:n,withoutAnyModifier:!0,callback:u.useCallback(()=>{r!=null&&r.current&&r.current.focus(),t&&a(!1)},[r,t,a])}),h({keys:L,ref:n,modifier:h.modifiers.SHIFT,callback:u.useCallback(()=>{o!=null&&o.current&&o.current.focus(),t&&a(!1)},[o,t,a])}),h({keys:J,ref:n,callback:u.useCallback(()=>{e!=null&&e.current&&e.current.focus(),t&&a(!1)},[e,t,a])}),h({keys:J,ref:e,callback:i}),X({eventName:"focus",ref:r,callback:i})}const U=(e,n,o,r,t)=>{const a=e.value,s={...o,width:t?void 0:"100%"},i=`tooltip-item-${n}-label`;return l.jsx(le,{isClickable:!!(a!=null&&a.onClick),clickableProps:{onClick:c=>a.onClick(c,a.id),tabIndex:"-1"},children:l.jsx("div",{style:s,children:l.jsxs(V,{direction:"row",gap:"xs",ariaLabelledby:i,children:[l.jsx(j,{...a,tooltipProps:void 0,ariaLabel:"",customSize:K,type:r||(a==null?void 0:a.type),tabIndex:-1,size:j.sizes.SMALL,className:A.tooltipAvatarItemAvatar}),!t&&l.jsx("div",{id:i,className:A.tooltipAvatarItemTitle,children:a.tooltipContent})]})})},n)};try{E.displayName="useTooltipContentTabNavigation",E.__docgenInfo={description:"",displayName:"useTooltipContentTabNavigation",props:{counterContainerRef:{defaultValue:{value:"undefined"},description:"",name:"counterContainerRef",required:!1,type:{name:"RefObject<HTMLDivElement>"}},tooltipContentContainerRef:{defaultValue:null,description:"",name:"tooltipContentContainerRef",required:!0,type:{name:"RefObject<HTMLElement>"}},focusPrevPlaceholderRef:{defaultValue:null,description:"",name:"focusPrevPlaceholderRef",required:!0,type:{name:"RefObject<HTMLDivElement>"}},focusNextPlaceholderRef:{defaultValue:null,description:"",name:"focusNextPlaceholderRef",required:!0,type:{name:"RefObject<HTMLDivElement>"}},isKeyboardTooltipVisible:{defaultValue:null,description:"",name:"isKeyboardTooltipVisible",required:!0,type:{name:"boolean"}},setIsKeyboardTooltipVisible:{defaultValue:null,description:"",name:"setIsKeyboardTooltipVisible",required:!0,type:{name:"(value: boolean) => void"}}}}}catch{}const R=({avatars:e=[],type:n,className:o,isVirtualizedList:r=!1,tooltipContentContainerRef:t})=>{const a=u.useCallback(d=>{var f;return((f=d==null?void 0:d.tooltipProps)==null?void 0:f.content)||(d==null?void 0:d.ariaLabel)},[]),{avatarItems:s,displayAsGrid:i,tooltipContainerAriaLabel:c}=u.useMemo(()=>{const d=e.map(p=>({value:{...p.props,tooltipContent:a(p.props)}})),f=!d.some(p=>p.value.tooltipContent),v=f?void 0:d.map(p=>p.value.tooltipContent).join(",");return{avatarItems:d,displayAsGrid:f,tooltipContainerAriaLabel:v}},[e,a]),m=u.useMemo(()=>s.map((d,f)=>U(d,f,void 0,n,i)),[s,i,n]);if(r)return l.jsx(z,{avatarRenderer:U,tooltipContentContainerRef:t,tooltipContainerAriaLabel:c,avatarItems:s,type:n});const y={ref:t,tabIndex:-1,role:"treegrid",ariaLabel:c,className:i?C(A.scrollableContainer,A.tooltipContainer,A.tooltipGridContainer,o):C(A.scrollableContainer,A.tooltipContainer,o),direction:i?V.directions.ROW:V.directions.COLUMN,gap:i?V.gaps.XS:V.gaps.SMALL,wrap:i};return l.jsx(V,{...y,children:m})};try{R.displayName="AvatarGroupCounterTooltipContent",R.__docgenInfo={description:"",displayName:"AvatarGroupCounterTooltipContent",props:{type:{defaultValue:null,description:"The type of avatars displayed inside the tooltip.",name:"type",required:!1,type:{name:"enum",value:[{value:'"img"'},{value:'"text"'},{value:'"icon"'}]}},avatars:{defaultValue:{value:"[]"},description:"The avatars shown in the tooltip.",name:"avatars",required:!1,type:{name:"ReactElement<AvatarProps, string | JSXElementConstructor<any>>[]"}},isVirtualizedList:{defaultValue:{value:"false"},description:"If true, the tooltip uses a virtualized list for performance optimization.",name:"isVirtualizedList",required:!1,type:{name:"boolean"}},tooltipContentContainerRef:{defaultValue:null,description:"Ref for the tooltip content container.",name:"tooltipContentContainerRef",required:!1,type:{name:"Ref<HTMLDivElement>"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const G=({focusPrevPlaceholderRef:e,focusNextPlaceholderRef:n,counterContainerRef:o,children:r=[],avatars:t=[],type:a,className:s,counterTooltipCustomProps:i,counterTooltipIsVirtualizedList:c=!1})=>{const[m,y]=u.useState(!1),d=u.useRef(null),f=u.useMemo(()=>(i==null?void 0:i.content)||l.jsx(R,{avatars:t,type:a,className:s,isVirtualizedList:c,tooltipContentContainerRef:d}),[t,s,i==null?void 0:i.content,c,a]);E({counterContainerRef:o,tooltipContentContainerRef:d,focusPrevPlaceholderRef:e,focusNextPlaceholderRef:n,setIsKeyboardTooltipVisible:y,isKeyboardTooltipVisible:m});const v=u.useCallback(()=>{y(!1)},[]);return!(t!=null&&t.length)&&!(i!=null&&i.content)?l.jsx(l.Fragment,{children:r}):l.jsx(oe,{open:m,hideDelay:Q,showTrigger:["mouseenter"],hideTrigger:["mouseleave"],onTooltipHide:v,...i||{},content:f,children:r})};try{G.displayName="AvatarGroupCounterTooltipContainer",G.__docgenInfo={description:"",displayName:"AvatarGroupCounterTooltipContainer",props:{type:{defaultValue:null,description:"The type of avatars displayed in the tooltip.",name:"type",required:!1,type:{name:"enum",value:[{value:'"img"'},{value:'"text"'},{value:'"icon"'}]}},children:{defaultValue:{value:"[]"},description:"The counter element and focus placeholders.",name:"children",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>>[]"}},avatars:{defaultValue:{value:"[]"},description:"The list of avatars displayed inside the tooltip.",name:"avatars",required:!1,type:{name:"ReactElement<AvatarProps, string | JSXElementConstructor<any>>[]"}},counterTooltipCustomProps:{defaultValue:null,description:"Props passed to the Tooltip component. See full options in the [Tooltip documentation](https://vibe.monday.com/?path=/docs/components-tooltip--docs).",name:"counterTooltipCustomProps",required:!1,type:{name:"Partial<TooltipProps>"}},counterTooltipIsVirtualizedList:{defaultValue:{value:"false"},description:"If true, the tooltip uses a virtualized list for performance optimization.",name:"counterTooltipIsVirtualizedList",required:!1,type:{name:"boolean"}},focusPrevPlaceholderRef:{defaultValue:null,description:"Ref for the element before the tooltip content, used for keyboard navigation.",name:"focusPrevPlaceholderRef",required:!1,type:{name:"RefObject<HTMLDivElement>"}},focusNextPlaceholderRef:{defaultValue:null,description:"Ref for the element after the tooltip content, used for keyboard navigation.",name:"focusNextPlaceholderRef",required:!1,type:{name:"RefObject<HTMLDivElement>"}},counterContainerRef:{defaultValue:null,description:"Ref for the counter container element.",name:"counterContainerRef",required:!1,type:{name:"RefObject<HTMLDivElement>"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const ee=(e,n)=>{var o;(o=n==null?void 0:n.onClick)==null||o.call(n,e,n.id)},ge="_counterContainer_10wi6_1",Ce="_xs_10wi6_22",Ae="_small_10wi6_28",be="_medium_10wi6_34",Te="_large_10wi6_40",Ve="_primary_10wi6_46",qe="_dark_10wi6_50",Ie="_negative_10wi6_54",xe="_light_10wi6_58",Le="_disabled_10wi6_62",Se="_menu_10wi6_67",g={counterContainer:ge,"focus-visible":"_focus-visible_10wi6_10",xs:Ce,small:Ae,medium:be,large:Te,primary:Ve,dark:qe,negative:Ie,light:xe,disabled:Le,menu:Se},w=({counterTooltipAvatars:e=[],counterProps:n,counterTooltipCustomProps:o,counterTooltipIsVirtualizedList:r=!1,size:t="medium",type:a,counterAriaLabel:s,disabled:i})=>{const{color:c="light",count:m=e.length,prefix:y="+",maxDigits:d=3,ariaLabelItemsName:f="items",noAnimation:v,dialogContainerSelector:p,tabIndex:k=0}=n||{},b=de(g,t==null?void 0:t.toString()),T=g[c],q=u.useRef(null),H=u.useRef(null),N=u.useRef(null),M=u.useCallback(()=>l.jsx(ne,{color:c,count:m,prefix:y,maxDigits:d,ariaLabel:s||`Tab for more ${f}`,noAnimation:v,counterClassName:C({[g.disabled]:i}),size:t==="xs"?"xs":void 0}),[s,f,c,d,y,m,i,v]);return!e.length&&!m?null:i?l.jsx("div",{ref:N,className:C(g.counterContainer,g.disabled,b,T),children:M()}):e.some(_=>{var I;return(I=_.props)==null?void 0:I.onClick})?l.jsx(ie,{component:M,zIndex:1,className:C(g.counterContainer,b,T),ariaLabel:s||`${m} additional ${f}`,dialogContainerSelector:p,children:l.jsx(W,{id:"menu",size:W.sizes.MEDIUM,className:g.menu,focusItemIndexOnMount:0,children:e.map((_,I)=>{var O,D,P,F;return l.jsx(S,{menuItemProps:{key:((O=_.props)==null?void 0:O.id)||String(I),title:((P=(D=_.props)==null?void 0:D.tooltipProps)==null?void 0:P.content)||((F=_==null?void 0:_.props)==null?void 0:F.ariaLabel),onClick:te=>ee(te,_.props)},avatarProps:{..._.props,customSize:K,ariaLabel:"",tabIndex:-1}})})})}):l.jsxs(G,{focusPrevPlaceholderRef:q,focusNextPlaceholderRef:H,counterContainerRef:N,avatars:e,counterTooltipCustomProps:o,counterTooltipIsVirtualizedList:r,type:a,children:[l.jsx("div",{tabIndex:-1,ref:q}),l.jsxs("div",{tabIndex:k,className:C(g.counterContainer,b,T),ref:N,children:[M(),l.jsx("div",{tabIndex:-1,ref:H})]})]})};try{w.displayName="AvatarGroupCounter",w.__docgenInfo={description:"",displayName:"AvatarGroupCounter",props:{counterTooltipAvatars:{defaultValue:{value:"[]"},description:"The list of avatars hidden behind the counter.",name:"counterTooltipAvatars",required:!1,type:{name:"ReactElement<AvatarProps, string | JSXElementConstructor<any>>[]"}},counterProps:{defaultValue:null,description:"Props for customizing the counter appearance.",name:"counterProps",required:!1,type:{name:"AvatarGroupCounterVisualProps"}},counterTooltipCustomProps:{defaultValue:null,description:"Props for customizing the counter tooltip.",name:"counterTooltipCustomProps",required:!1,type:{name:"Partial<TooltipProps>"}},counterTooltipIsVirtualizedList:{defaultValue:{value:"false"},description:"If true, the counter tooltip uses a virtualized list for performance optimization.",name:"counterTooltipIsVirtualizedList",required:!1,type:{name:"boolean"}},size:{defaultValue:{value:"medium"},description:"The size of the counter.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"xs"'},{value:'"medium"'},{value:'"large"'}]}},type:{defaultValue:null,description:"The type of the avatars in the counter.",name:"type",required:!1,type:{name:"enum",value:[{value:'"img"'},{value:'"text"'},{value:'"icon"'}]}},counterAriaLabel:{defaultValue:null,description:"The label of the counter for accessibility.",name:"counterAriaLabel",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"If true, the counter is disabled and non-interactive.",name:"disabled",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const ke="_avatarGroupContainer_1g1uk_1",Ne="_avatarContainer_1g1uk_10",B={avatarGroupContainer:ke,avatarContainer:Ne},Y=({className:e,avatarClassName:n,id:o,children:r,size:t,type:a,max:s=5,counterProps:i,counterTooltipCustomProps:c,counterTooltipIsVirtualizedList:m=!1,disabled:y})=>{const{displayAvatars:d,counterTooltipAvatars:f}=u.useMemo(()=>{if(!r)return{};const v=Array.isArray(r)?r:[r];return{displayAvatars:v.slice(0,s).map((p,k)=>{var b,T;return ae.cloneElement(p,{key:k,...p==null?void 0:p.props,size:t||((b=p==null?void 0:p.props)==null?void 0:b.size),type:a||((T=p==null?void 0:p.props)==null?void 0:T.type),className:C(B.avatarContainer,n),onClick:q=>ee(q,p.props),disabled:y})}),counterTooltipAvatars:v.slice(s)}},[n,r,y,s,t,a]);return r?l.jsxs("div",{className:C(B.avatarGroupContainer,e),id:o,"data-vibe":pe.AVATAR_GROUP,children:[d,l.jsx(w,{counterTooltipAvatars:f,counterProps:i,counterTooltipCustomProps:c,counterTooltipIsVirtualizedList:m,size:t,type:a,disabled:y})]}):null};try{Y.displayName="AvatarGroup",Y.__docgenInfo={description:"",displayName:"AvatarGroup",props:{avatarClassName:{defaultValue:null,description:"Class name applied to each avatar.",name:"avatarClassName",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"The avatars displayed in the group.",name:"children",required:!1,type:{name:"ReactElement<AvatarProps, string | JSXElementConstructor<any>> | ReactElement<AvatarProps, string | JSXElementConstructor<any>>[]"}},size:{defaultValue:null,description:"The size of the avatars in the group.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"xs"'},{value:'"medium"'},{value:'"large"'}]}},type:{defaultValue:null,description:"The type of the avatars in the group.",name:"type",required:!1,type:{name:"enum",value:[{value:'"img"'},{value:'"text"'},{value:'"icon"'}]}},max:{defaultValue:{value:"5"},description:"The maximum number of avatars displayed before showing a counter.",name:"max",required:!1,type:{name:"number"}},counterProps:{defaultValue:null,description:"Props for customizing the counter display.",name:"counterProps",required:!1,type:{name:"AvatarGroupCounterVisualProps"}},counterTooltipCustomProps:{defaultValue:null,description:"Props passed to the Tooltip component. See full options in the [Tooltip documentation](https://vibe.monday.com/?path=/docs/components-tooltip--docs).",name:"counterTooltipCustomProps",required:!1,type:{name:"Partial<TooltipProps>"}},counterTooltipIsVirtualizedList:{defaultValue:{value:"false"},description:"If true, the counter tooltip uses a virtualized list for performance optimization.",name:"counterTooltipIsVirtualizedList",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"If true, the component is disabled and non-interactive.",name:"disabled",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}export{Y as A};
