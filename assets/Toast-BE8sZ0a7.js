import{j as l}from"./jsx-runtime-DDzbWKUH.js";import{g as m,C as p,b as $}from"./test-ids-utils-9ISiqDto.js";import{c}from"./index-BpvXyOxN.js";import{r as i}from"./index-Hemj67b4.js";import{T as U}from"./Text-DTQ7koXM.js";import{L as K}from"./Loader-DRZxb8MF.js";import{F as A}from"./Flex-2Q04fxOc.js";import{L as G}from"./Link-BU7s9Y2d.js";import{B as J}from"./Button-CVjt-pk_.js";import{t as j}from"./Info-BB4o2YOm.js";import{m as X,k as Y}from"./Workspace-BIJf5qCK.js";import{r as Q}from"./Check-B_icfwyn.js";import{I as Z}from"./Icon-CDdqL_gb.js";import{N as ee}from"./function-utils-6EQ2u6TA.js";import{g as te}from"./typesciptCssModulesHelper-Ji7rRrZn.js";import{I as ae}from"./IconButton-BPR1wrSl.js";import{u as ne}from"./index-CXrJR90Q.js";import{c as le}from"./camelCase-B8c2Dc7Y.js";import{C as ie}from"./CSSTransition-usT7-fC7.js";import{a as oe}from"./CloseSmall-CIab6kaf.js";import{a as re}from"./withStaticProps-DfSG2La2.js";const se="_actionLink_gcz92_1",ue={actionLink:se},g=({className:e,id:a,"data-testid":r,...s})=>{const f=c(ue.actionLink,e);return l.jsx(G,{...s,className:f,id:a,"data-testid":r||m(p.TOAST_LINK,a)})};try{g.displayName="ToastLink",g.__docgenInfo={description:"",displayName:"ToastLink",props:{textClassName:{defaultValue:null,description:"Class name applied to the link text.",name:"textClassName",required:!1,type:{name:"string"}},href:{defaultValue:null,description:"The URL the link points to.",name:"href",required:!1,type:{name:"string"}},text:{defaultValue:null,description:"The text content of the link.",name:"text",required:!1,type:{name:"string"}},rel:{defaultValue:null,description:"Specifies the relationship between the current document and the linked resource.",name:"rel",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:"Callback fired when the link is clicked.",name:"onClick",required:!1,type:{name:"(event: MouseEvent<Element, MouseEvent>) => void"}},target:{defaultValue:null,description:"Specifies where to open the linked document.",name:"target",required:!1,type:{name:"enum",value:[{value:'"_blank"'},{value:'"_self"'},{value:'"_parent"'},{value:'"_top"'}]}},ariaLabelDescription:{defaultValue:null,description:"The ARIA label description for accessibility.",name:"ariaLabelDescription",required:!1,type:{name:"string"}},ariaDescribedby:{defaultValue:null,description:"The ID of the element that describes this link.",name:"ariaDescribedby",required:!1,type:{name:"string"}},ariaLabeledBy:{defaultValue:null,description:"The ID of the element labeling this link.",name:"ariaLabeledBy",required:!1,type:{name:"string"}},icon:{defaultValue:null,description:"Icon displayed next to the link text.",name:"icon",required:!1,type:{name:"SubIcon"}},iconPosition:{defaultValue:null,description:"The position of the icon relative to the text.",name:"iconPosition",required:!1,type:{name:"enum",value:[{value:'"start"'},{value:'"end"'}]}},disableNavigation:{defaultValue:null,description:"If true, disables navigation when the link is clicked.",name:"disableNavigation",required:!1,type:{name:"boolean"}},inheritFontSize:{defaultValue:null,description:"If true, the link inherits the surrounding text's font size.",name:"inheritFontSize",required:!1,type:{name:"boolean"}},inlineText:{defaultValue:null,description:"If true, the link is styled to fit within inline text content.",name:"inlineText",required:!1,type:{name:"boolean"}},color:{defaultValue:null,description:"The link's color style",name:"color",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"onPrimary"'},{value:'"onInverted"'}]}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const _=({className:e,id:a,"data-testid":r,...s})=>l.jsx(J,{...s,id:a,kind:"secondary",marginLeft:!1,"data-testid":r||m($.TOAST_BUTTON,a),className:e,size:"small",color:"fixed-light"});try{_.displayName="ToastButton",_.__docgenInfo={description:"",displayName:"ToastButton",props:{className:{defaultValue:null,description:"Custom class names to pass to the component",name:"className",required:!1,type:{name:"string"}},activeButtonClassName:{defaultValue:null,description:"",name:"activeButtonClassName",required:!1,type:{name:"string"}},kind:{defaultValue:null,description:"The button's kind",name:"kind",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"tertiary"'}]}},onClick:{defaultValue:null,description:"Callback function to run when the button is clicked",name:"onClick",required:!1,type:{name:"(event: MouseEvent<HTMLButtonElement, MouseEvent>) => void"}},onMouseDown:{defaultValue:null,description:"",name:"onMouseDown",required:!1,type:{name:"(event: MouseEvent<HTMLButtonElement, MouseEvent>) => void"}},blurOnMouseUp:{defaultValue:null,description:"Blur on button click",name:"blurOnMouseUp",required:!1,type:{name:"boolean"}},name:{defaultValue:null,description:"Name of the button - for form submit usages",name:"name",required:!1,type:{name:"string"}},size:{defaultValue:null,description:"The button's size",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"xs"'},{value:'"medium"'},{value:'"large"'},{value:'"xxs"'}]}},color:{defaultValue:null,description:"The button's color",name:"color",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"positive"'},{value:'"negative"'},{value:'"inverted"'},{value:'"on-primary-color"'},{value:'"on-inverted-background"'},{value:'"brand"'},{value:'"fixed-light"'},{value:'"fixed-dark"'}]}},type:{defaultValue:null,description:"The button's type",name:"type",required:!1,type:{name:"enum",value:[{value:'"button"'},{value:'"submit"'},{value:'"reset"'}]}},disabled:{defaultValue:null,description:"Whether the button should be disabled or not",name:"disabled",required:!1,type:{name:"boolean"}},rightIcon:{defaultValue:null,description:"Icon to place on the right",name:"rightIcon",required:!1,type:{name:"SubIcon"}},leftIcon:{defaultValue:null,description:"Icon to place on the left",name:"leftIcon",required:!1,type:{name:"SubIcon"}},success:{defaultValue:null,description:"the success props are used when you have async action and wants to display a success message",name:"success",required:!1,type:{name:"boolean"}},successIcon:{defaultValue:null,description:"Success icon name",name:"successIcon",required:!1,type:{name:"SubIcon"}},successText:{defaultValue:null,description:"Success text",name:"successText",required:!1,type:{name:"string"}},loading:{defaultValue:null,description:"loading boolean which switches the text to a loader",name:"loading",required:!1,type:{name:"boolean"}},loaderClassName:{defaultValue:null,description:"className which is applied to loader container *",name:"loaderClassName",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},active:{defaultValue:null,description:"displays the active state",name:"active",required:!1,type:{name:"boolean"}},id:{defaultValue:null,description:"id to pass to the button",name:"id",required:!1,type:{name:"string"}},marginRight:{defaultValue:null,description:"adds 8px margin to the right",name:"marginRight",required:!1,type:{name:"boolean"}},marginLeft:{defaultValue:null,description:"adds 8px margin to the left",name:"marginLeft",required:!1,type:{name:"boolean"}},ariaLabeledBy:{defaultValue:null,description:"element id to describe the button accordingly",name:"ariaLabeledBy",required:!1,type:{name:"string"}},ariaLabel:{defaultValue:null,description:"aria label to provide important when providing only Icon",name:"ariaLabel",required:!1,type:{name:"string"}},ariaHasPopup:{defaultValue:null,description:"aria for a button popup",name:"ariaHasPopup",required:!1,type:{name:'boolean | "dialog" | "menu" | "true" | "false" | "grid" | "listbox" | "tree"'}},ariaExpanded:{defaultValue:null,description:"aria to be set if the popup is open",name:"ariaExpanded",required:!1,type:{name:"boolean"}},ariaControls:{defaultValue:null,description:"aria controls - receives id for the controlled region",name:"ariaControls",required:!1,type:{name:"string"}},"aria-describedby":{defaultValue:null,description:"",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-hidden":{defaultValue:null,description:"aria to be used for screen reader to know if the button is hidden",name:"aria-hidden",required:!1,type:{name:"Booleanish"}},"aria-pressed":{defaultValue:null,description:'Indicates the current "pressed" state of toggle buttons',name:"aria-pressed",required:!1,type:{name:'boolean | "true" | "false" | "mixed"'}},onFocus:{defaultValue:null,description:"On Button Focus callback",name:"onFocus",required:!1,type:{name:"(event: FocusEvent<HTMLButtonElement, Element>) => void"}},onBlur:{defaultValue:null,description:"On Button Blur callback",name:"onBlur",required:!1,type:{name:"(event: FocusEvent<HTMLButtonElement, Element>) => void"}},rightFlat:{defaultValue:null,description:"",name:"rightFlat",required:!1,type:{name:"boolean"}},leftFlat:{defaultValue:null,description:"",name:"leftFlat",required:!1,type:{name:"boolean"}},preventClickAnimation:{defaultValue:null,description:"",name:"preventClickAnimation",required:!1,type:{name:"boolean"}},noSidePadding:{defaultValue:null,description:"",name:"noSidePadding",required:!1,type:{name:"boolean"}},defaultTextColorOnPrimaryColor:{defaultValue:null,description:"default color for text color in ON_PRIMARY_COLOR kind (should be any type of css color (rbg, var, hex...)",name:"defaultTextColorOnPrimaryColor",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},insetFocus:{defaultValue:null,description:"Change the focus indicator from around the button to within it",name:"insetFocus",required:!1,type:{name:"boolean"}},tabIndex:{defaultValue:null,description:"Specifies the tab order of an element",name:"tabIndex",required:!1,type:{name:"number"}}}}}catch{}var O=(e=>(e.NORMAL="normal",e.POSITIVE="positive",e.NEGATIVE="negative",e.WARNING="warning",e.DARK="dark",e))(O||{}),M=(e=>(e.LINK="link",e.BUTTON="button",e))(M||{});const E={normal:j,positive:Q,negative:Y,warning:X,dark:j},de=(e,a)=>a&&typeof a=="object"?a:a||E[e]?l.jsx(Z,{iconType:a?"font":"svg",icon:a||E[e],iconSize:20,ignoreFocusStyle:!0}):null,ce="_toast_1jwtn_1",me="_typeNormal_1jwtn_21",pe="_typePositive_1jwtn_24",fe="_typeNegative_1jwtn_27",ye="_typeWarning_1jwtn_30",he="_closeButton_1jwtn_34",ve="_actionButton_1jwtn_37",be="_actionLink_1jwtn_38",ge="_typeDark_1jwtn_42",_e="_icon_1jwtn_55",qe="_withTransition_1jwtn_60",Ve="_bounceIn_1jwtn_1",Te="_content_1jwtn_67",xe="_textContent_1jwtn_72",ke="_enterActive_1jwtn_77",Ie="_slideIn_1jwtn_1",Ne="_exitActive_1jwtn_85",we="_slideOut_1jwtn_1",o={toast:ce,typeNormal:me,typePositive:pe,typeNegative:fe,typeWarning:ye,closeButton:he,actionButton:ve,actionLink:be,typeDark:ge,icon:_e,withTransition:qe,bounceIn:Ve,content:Te,textContent:xe,enterActive:ke,slideIn:Ie,exitActive:Ne,slideOut:we},q=({open:e=!1,loading:a=!1,autoHideDuration:r=null,type:s="normal",icon:f,hideIcon:F=!1,action:V,actions:n,children:T,closeable:P=!0,onClose:d=ee,className:x,id:k,closeButtonAriaLabel:R="Close","data-testid":D})=>{const I=i.useRef(null),N=i.useRef(null),y=ne(n==null?void 0:n.length),z=i.useMemo(()=>n?n.filter(t=>t.type==="link").map(({type:t,...u})=>l.jsx(g,{className:o.actionLink,...u},u.href)):null,[n]),w=i.useMemo(()=>y!==void 0&&(n==null?void 0:n.length)!==y,[n,y]),C=i.useMemo(()=>n?n.filter(t=>t.type==="button").map(({type:t,content:u,...b},W)=>l.jsx(_,{className:c(o.actionButton,{[o.withTransition]:w}),...b,children:u},`alert-button-${W}`)):null,[n,w]),H=i.useMemo(()=>c(o.toast,te(o,le("type-"+s)),x),[s,x]),h=i.useCallback(()=>{d&&d()},[d]),v=i.useRef(),L=i.useCallback(t=>{!d||t==null||(clearTimeout(v.current),v.current=setTimeout(()=>{h()},t))},[h,d]);i.useEffect(()=>(e&&r>0&&L(r),()=>{clearTimeout(v.current)}),[e,r,L]);const B=!F&&de(s,f),S=i.useCallback(t=>{const u=t.style.width;t.style.width="auto";const b=getComputedStyle(t).width;t.style.width=u,t.offsetWidth,t.style.width=b},[]);return i.useEffect(()=>{I.current&&S(I.current)},[T,S]),l.jsx(ie,{in:e,nodeRef:N,classNames:{enterActive:o.enterActive,exitActive:o.exitActive},timeout:400,unmountOnExit:!0,children:l.jsxs(U,{ref:N,id:k,"data-testid":D||m(p.TOAST,k),type:"text2",element:"div",color:"fixedLight",className:H,role:"alert","aria-live":"polite",children:[B&&l.jsx("div",{className:c(o.icon),children:B}),l.jsxs(A,{align:"center",gap:"large",className:o.content,children:[l.jsxs(A,{gap:"medium","data-testid":m(p.TOAST_CONTENT),className:o.textContent,children:[l.jsx("span",{children:T}),z]}),(C||V)&&(C||V),a&&l.jsx(K,{size:"xs"})]}),P&&l.jsx(ae,{className:c(o.closeButton),onClick:h,size:"small",kind:"tertiary",color:"fixed-light",ariaLabel:R,"data-testid":m(p.TOAST_CLOSE_BUTTON),icon:oe,hideTooltip:!0})]})})},Xe=re(q,{types:O,actionTypes:M});try{q.displayName="Toast",q.__docgenInfo={description:"",displayName:"Toast",props:{actions:{defaultValue:null,description:"The actions available in the toast.",name:"actions",required:!1,type:{name:"ToastAction[]"}},open:{defaultValue:{value:"false"},description:"If true, the toast is open (visible).",name:"open",required:!1,type:{name:"boolean"}},loading:{defaultValue:{value:"false"},description:"If true, displays a loading indicator inside the toast.",name:"loading",required:!1,type:{name:"boolean"}},type:{defaultValue:{value:"normal"},description:"The type of toast.",name:"type",required:!1,type:{name:"enum",value:[{value:'"dark"'},{value:'"warning"'},{value:'"positive"'},{value:'"negative"'},{value:'"normal"'}]}},icon:{defaultValue:null,description:"The icon displayed in the toast.",name:"icon",required:!1,type:{name:"string | FC<IconSubComponentProps>"}},hideIcon:{defaultValue:{value:"false"},description:"If true, hides the toast icon.",name:"hideIcon",required:!1,type:{name:"boolean"}},action:{defaultValue:null,description:"The action element displayed in the toast.",name:"action",required:!1,type:{name:"Element"}},closeable:{defaultValue:{value:"true"},description:"If false, hides the close button.",name:"closeable",required:!1,type:{name:"boolean"}},onClose:{defaultValue:null,description:"Callback fired when the toast is closed.",name:"onClose",required:!1,type:{name:"() => void"}},autoHideDuration:{defaultValue:{value:"null"},description:`The number of milliseconds before the toast automatically closes.
(0 or null disables auto-close behavior).`,name:"autoHideDuration",required:!1,type:{name:"number"}},children:{defaultValue:null,description:"The content displayed inside the toast.",name:"children",required:!1,type:{name:"string | ReactElement<any, string | JSXElementConstructor<any>> | ReactElement<any, string | JSXElementConstructor<any>>[]"}},closeButtonAriaLabel:{defaultValue:{value:"Close"},description:"The aria-label for the close button.",name:"closeButtonAriaLabel",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}export{Xe as T,_ as a,g as b};
