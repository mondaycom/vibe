import{j as a}from"./jsx-runtime-lwGtIXvq.js";import{R as _,r as y}from"./index-CTZeEbLr.js";import{c as b}from"./index-BpvXyOxN.js";import{a as N,g as V,C as k}from"./test-ids-utils-B1IbFLmr.js";import{r as v}from"./NavigationChevronRight-DwBPRKWZ.js";import{a as R}from"./withStaticProps-DfSG2La2.js";import{u as w}from"./useIsOverflowing-CqkoFCDi.js";import{T as A}from"./Tooltip-DK9PaNS7.js";import{k as B}from"./useClickableProps-BJf5EuJX.js";var j=(t=>(t.NAVIGATION="navigation",t.INDICATION="indication",t))(j||{});const S="_breadcrumbsBar_1eguv_1",E="_separatorIcon_1eguv_8",C={breadcrumbsBar:S,separatorIcon:E},g=({className:t,children:r,type:n="indication",id:s,"data-testid":c})=>a.jsx("nav",{"aria-label":"Breadcrumb",className:b(C.breadcrumbsBar,t),id:s,"data-testid":c||V(k.BREADCRUMBS_BAR,s),"data-vibe":N.BREADCRUMBS_BAR,children:a.jsx("ol",{children:r&&_.Children.map(r,(l,i)=>_.isValidElement(l)?[i>0&&a.jsx(v,{className:C.separatorIcon,size:"14","aria-hidden":"true"}),_.cloneElement(l,{...l==null?void 0:l.props,isClickable:n!=="indication"})]:null)})}),ae=R(g,{types:j});try{g.displayName="BreadcrumbsBar",g.__docgenInfo={description:"",displayName:"BreadcrumbsBar",props:{type:{defaultValue:{value:"indication"},description:"The type of the breadcrumb bar, determining if it is navigational or for indication only.",name:"type",required:!1,type:{name:"BreadcrumbsBarType"}},children:{defaultValue:null,description:"The breadcrumb items displayed in the bar.",name:"children",required:!0,type:{name:"ReactElement<BreadcrumbItemProps | BreadcrumbMenuProps, string | JSXElementConstructor<any>> | ReactElement<...>[]"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const D="_breadcrumbContent_96f7j_2",M="_withoutText_96f7j_13",L="_breadcrumbText_96f7j_22",P="_breadcrumbIcon_96f7j_31",U="_clickable_96f7j_41",W="_current_96f7j_51",H="_disabled_96f7j_56",O="_notClickable_96f7j_66",e={breadcrumbContent:D,withoutText:M,breadcrumbText:L,breadcrumbIcon:P,clickable:U,current:W,disabled:H,notClickable:O},h={className:e.breadcrumbIcon,size:14,clickable:!1},I=y.forwardRef(({className:t,isClickable:r,link:n,onClick:s,text:c,icon:l,isCurrent:i,disabled:u=!1,showText:d=!0},m)=>{const o=l,p=y.useCallback(x=>{(x.key===B.ENTER||x.key===B.SPACE)&&(n?window.parent.location.href=n:s())},[s,n]),f=y.useMemo(()=>u?-1:0,[u]);return r&&(n||s)?n?a.jsxs("a",{className:b(e.breadcrumbContent,t,{[e.disabled]:u,[e.clickable]:r,[e.current]:i,[e.withoutText]:!d}),href:n,onKeyDown:p,"aria-current":i?"page":void 0,children:[o&&a.jsx(o,{...h}),d&&a.jsx("span",{ref:m,className:e.breadcrumbText,children:c})]}):a.jsxs("span",{className:b(e.breadcrumbContent,t,{[e.disabled]:u,[e.clickable]:r,[e.current]:i,[e.withoutText]:!d}),onClick:s,onKeyDown:p,tabIndex:f,"aria-current":i?"page":void 0,role:"button",children:[o&&a.jsx(o,{...h}),d&&a.jsx("span",{ref:m,className:e.breadcrumbText,children:c})]}):a.jsxs("span",{className:b(e.breadcrumbContent,t,{[e.disabled]:u,[e.clickable]:r,[e.current]:i,[e.notClickable]:!r,[e.withoutText]:!d}),"aria-disabled":"true",tabIndex:f,"aria-current":i?"page":void 0,children:[o&&a.jsx(o,{...h}),d&&a.jsx("span",{ref:m,className:e.breadcrumbText,children:c})]})});try{I.displayName="BreadcrumbContent",I.__docgenInfo={description:"",displayName:"BreadcrumbContent",props:{isClickable:{defaultValue:null,description:"If true, the breadcrumb is clickable.",name:"isClickable",required:!1,type:{name:"boolean"}},link:{defaultValue:null,description:"The URL the breadcrumb links to.",name:"link",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:"Callback fired when the breadcrumb is clicked.",name:"onClick",required:!1,type:{name:"() => void"}},text:{defaultValue:null,description:"The text displayed inside the breadcrumb.",name:"text",required:!1,type:{name:"string"}},icon:{defaultValue:null,description:"The icon displayed next to the text.",name:"icon",required:!1,type:{name:"SubIcon"}},isCurrent:{defaultValue:null,description:"If true, the breadcrumb represents the current page.",name:"isCurrent",required:!1,type:{name:"boolean"}},disabled:{defaultValue:{value:"false"},description:"If true, the breadcrumb is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},showText:{defaultValue:{value:"true"},description:"If true, the breadcrumb text is shown.",name:"showText",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const $="_breadcrumbItemWrapper_m4uc0_1",z="_disabled_m4uc0_8",T={breadcrumbItemWrapper:$,disabled:z},q=({className:t,text:r="",disabled:n,isClickable:s=!1,link:c,onClick:l,isCurrent:i=!1,icon:u,id:d,showText:m=!0,"data-testid":o})=>{const p=y.useRef(null),f=w({ref:p});return a.jsx(A,{disableDialogSlide:!0,withoutDialog:!1,content:(f||!m)&&r,showTrigger:["mouseenter"],hideTrigger:["mouseleave"],addKeyboardHideShowTriggersByDefault:!m,children:a.jsx("li",{id:d,"data-testid":o||V(k.BREADCRUMB_ITEM,d),className:b(T.breadcrumbItemWrapper,t,{[T.disabled]:n}),children:a.jsx(I,{ref:p,isClickable:s,link:c,onClick:l,text:r,icon:u,isCurrent:i,disabled:n,showText:m})})})};try{q.displayName="BreadcrumbItem",q.__docgenInfo={description:"",displayName:"BreadcrumbItem",props:{text:{defaultValue:{value:""},description:"The display text of the breadcrumb item.",name:"text",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"If true, the item is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},isClickable:{defaultValue:{value:"false"},description:"If true, the item is clickable.",name:"isClickable",required:!1,type:{name:"boolean"}},link:{defaultValue:null,description:"The URL the item links to if navigation is handled via a link.",name:"link",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:"Callback fired when the item is clicked.",name:"onClick",required:!1,type:{name:"() => void"}},isCurrent:{defaultValue:{value:"false"},description:"If true, applies styling for the current page.",name:"isCurrent",required:!1,type:{name:"boolean"}},icon:{defaultValue:null,description:"The icon displayed next to the text.",name:"icon",required:!1,type:{name:"SubIcon"}},showText:{defaultValue:{value:"true"},description:"If true, the breadcrumb text is shown.",name:"showText",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}export{q as B,ae as a};
