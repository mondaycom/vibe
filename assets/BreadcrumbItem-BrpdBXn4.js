import{R as a,r as y}from"./index-Hemj67b4.js";import{c as b}from"./index-BpvXyOxN.js";import{g as E,C as k}from"./test-ids-utils-9ISiqDto.js";import{r as B}from"./NavigationChevronRight-BM1UJa0v.js";import{a as N}from"./withStaticProps-DfSG2La2.js";import{u as x}from"./useIsOverflowing-DshK7x5b.js";import{T as w}from"./Tooltip-C_-kbcOd.js";import{k as q}from"./function-utils-6EQ2u6TA.js";var v=(t=>(t.NAVIGATION="navigation",t.INDICATION="indication",t))(v||{});const A="_breadcrumbsBar_1eguv_1",R="_separatorIcon_1eguv_8",T={breadcrumbsBar:A,separatorIcon:R},h=({className:t,children:r,type:n="indication",id:l,"data-testid":c})=>a.createElement("nav",{"aria-label":"Breadcrumb",className:b(T.breadcrumbsBar,t),id:l,"data-testid":c||E(k.BREADCRUMBS_BAR,l)},a.createElement("ol",null,r&&a.Children.map(r,(s,i)=>a.isValidElement(s)?[i>0&&a.createElement(B,{className:T.separatorIcon,size:"14","aria-hidden":"true"}),a.cloneElement(s,{...s==null?void 0:s.props,isClickable:n!=="indication"})]:null))),Y=N(h,{types:v});try{h.displayName="BreadcrumbsBar",h.__docgenInfo={description:"",displayName:"BreadcrumbsBar",props:{type:{defaultValue:{value:"indication"},description:"The type of the breadcrumb bar, determining if it is navigational or for indication only.",name:"type",required:!1,type:{name:"enum",value:[{value:'"navigation"'},{value:'"indication"'}]}},children:{defaultValue:null,description:"The breadcrumb items displayed in the bar.",name:"children",required:!0,type:{name:"ReactElement<BreadcrumbItemProps | BreadcrumbMenuProps, string | JSXElementConstructor<any>> | ReactElement<...>[]"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const S="_breadcrumbContent_96f7j_2",j="_withoutText_96f7j_13",D="_breadcrumbText_96f7j_22",M="_breadcrumbIcon_96f7j_31",L="_clickable_96f7j_41",P="_current_96f7j_51",W="_disabled_96f7j_56",H="_notClickable_96f7j_66",e={breadcrumbContent:S,withoutText:j,breadcrumbText:D,breadcrumbIcon:M,clickable:L,current:P,disabled:W,notClickable:H},_={className:e.breadcrumbIcon,size:14,clickable:!1},g=y.forwardRef(({className:t,isClickable:r,link:n,onClick:l,text:c,icon:s,isCurrent:i,disabled:u=!1,showText:d=!0},m)=>{const o=s,p=y.useCallback(I=>{(I.key===q.ENTER||I.key===q.SPACE)&&(n?window.parent.location.href=n:l())},[l,n]),f=y.useMemo(()=>u?-1:0,[u]);return r&&(n||l)?n?a.createElement("a",{className:b(e.breadcrumbContent,t,{[e.disabled]:u,[e.clickable]:r,[e.current]:i,[e.withoutText]:!d}),href:n,onKeyDown:p,"aria-current":i?"page":void 0},o&&a.createElement(o,{..._}),d&&a.createElement("span",{ref:m,className:e.breadcrumbText},c)):a.createElement("span",{className:b(e.breadcrumbContent,t,{[e.disabled]:u,[e.clickable]:r,[e.current]:i,[e.withoutText]:!d}),onClick:l,onKeyDown:p,tabIndex:f,"aria-current":i?"page":void 0,role:"button"},o&&a.createElement(o,{..._}),d&&a.createElement("span",{ref:m,className:e.breadcrumbText},c)):a.createElement("span",{className:b(e.breadcrumbContent,t,{[e.disabled]:u,[e.clickable]:r,[e.current]:i,[e.notClickable]:!r,[e.withoutText]:!d}),"aria-disabled":"true",tabIndex:f,"aria-current":i?"page":void 0},o&&a.createElement(o,{..._}),d&&a.createElement("span",{ref:m,className:e.breadcrumbText},c))});try{g.displayName="BreadcrumbContent",g.__docgenInfo={description:"",displayName:"BreadcrumbContent",props:{isClickable:{defaultValue:null,description:"If true, the breadcrumb is clickable.",name:"isClickable",required:!1,type:{name:"boolean"}},link:{defaultValue:null,description:"The URL the breadcrumb links to.",name:"link",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:"Callback fired when the breadcrumb is clicked.",name:"onClick",required:!1,type:{name:"() => void"}},text:{defaultValue:null,description:"The text displayed inside the breadcrumb.",name:"text",required:!1,type:{name:"string"}},icon:{defaultValue:null,description:"The icon displayed next to the text.",name:"icon",required:!1,type:{name:"SubIcon"}},isCurrent:{defaultValue:null,description:"If true, the breadcrumb represents the current page.",name:"isCurrent",required:!1,type:{name:"boolean"}},disabled:{defaultValue:{value:"false"},description:"If true, the breadcrumb is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},showText:{defaultValue:{value:"true"},description:"If true, the breadcrumb text is shown.",name:"showText",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}const O="_breadcrumbItemWrapper_m4uc0_1",U="_disabled_m4uc0_8",C={breadcrumbItemWrapper:O,disabled:U},V=({className:t,text:r="",disabled:n,isClickable:l=!1,link:c,onClick:s,isCurrent:i=!1,icon:u,id:d,showText:m=!0,"data-testid":o})=>{const p=y.useRef(null),f=x({ref:p});return a.createElement(w,{disableDialogSlide:!0,withoutDialog:!1,content:(f||!m)&&r,showTrigger:["mouseenter"],hideTrigger:["mouseleave"],addKeyboardHideShowTriggersByDefault:!m},a.createElement("li",{id:d,"data-testid":o||E(k.BREADCRUMB_ITEM,d),className:b(C.breadcrumbItemWrapper,t,{[C.disabled]:n})},a.createElement(g,{ref:p,isClickable:l,link:c,onClick:s,text:r,icon:u,isCurrent:i,disabled:n,showText:m})))};try{V.displayName="BreadcrumbItem",V.__docgenInfo={description:"",displayName:"BreadcrumbItem",props:{text:{defaultValue:{value:""},description:"The display text of the breadcrumb item.",name:"text",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"If true, the item is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},isClickable:{defaultValue:{value:"false"},description:"If true, the item is clickable.",name:"isClickable",required:!1,type:{name:"boolean"}},link:{defaultValue:null,description:"The URL the item links to if navigation is handled via a link.",name:"link",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:"Callback fired when the item is clicked.",name:"onClick",required:!1,type:{name:"() => void"}},isCurrent:{defaultValue:{value:"false"},description:"If true, applies styling for the current page.",name:"isCurrent",required:!1,type:{name:"boolean"}},icon:{defaultValue:null,description:"The icon displayed next to the text.",name:"icon",required:!1,type:{name:"SubIcon"}},showText:{defaultValue:{value:"true"},description:"If true, the breadcrumb text is shown.",name:"showText",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"A CSS class name to apply to the component.",name:"className",required:!1,type:{name:"string"}},"data-testid":{defaultValue:null,description:"A unique identifier for testing purposes.",name:"data-testid",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"An HTML id attribute for the component.",name:"id",required:!1,type:{name:"string"}}}}}catch{}export{V as B,Y as a};
