import{j as e}from"./jsx-runtime-lwGtIXvq.js";import{useMDXComponents as h}from"./index-BfNsOeqz.js";import{M as x}from"./index-DjXUXFbu.js";import{T as i}from"./Toggle-BzbSOvtK.js";import{l as g}from"./tip-CK87uV3P.js";import{m as s}from"./storybook-link-CE5ru_MR.js";import{T as j,O as f,S as u,a as b,D as v,b as w}from"./Toggle.stories-EGrF2ehm.js";import{F as p}from"./Flex-DYzKCQWz.js";import{r as l}from"./usage-guidelines-DaF3e-2f.js";import{a as C}from"./component-rules-Bcb_N_7h.js";import"./index-CTZeEbLr.js";import"./_commonjsHelpers-BosuxZz1.js";import"./iframe-Dq_Zqzo2.js";import"./index-DYTnTrUM.js";import"./index-BrqHMYbN.js";import"./index-BedKbVpA.js";import"./index-DrFu-skq.js";import"./index-BpvXyOxN.js";import"./index-Bgok7zfD.js";import"./test-ids-utils-B1IbFLmr.js";import"./Text-BwLUW2oo.js";import"./typesciptCssModulesHelper-Ji7rRrZn.js";import"./TypographyConstants-BPC4crwB.js";import"./useMergeRef-Do2VYePL.js";import"./useIsomorphicLayoutEffect-BBiFUoiz.js";import"./ssr-utils-Do6V6AqB.js";import"./useIsOverflowing-CqkoFCDi.js";import"./debounce-D3NSP8gs.js";import"./Tooltip-CT7Hoq9W.js";import"./function-utils-C5K4iOy1.js";import"./index-Bt5DuqPA.js";import"./index-CkU0kzyk.js";import"./index-gB5zY9qh.js";import"./index-BGSF-Nm4.js";import"./useClickableProps-BJf5EuJX.js";import"./CSSTransition-CWtXmFMf.js";import"./extends-B6xKY8K9.js";import"./camelCase-CO1PkVrH.js";import"./DialogConstants-DkeX1sw_.js";import"./Icon-BxXV8fvZ.js";import"./withStaticProps-DoUMAG04.js";import"./noop-DX6rZLP_.js";import"./withStaticProps-DfSG2La2.js";import"./Flex-qb9MRXYX.js";import"./withStaticProps-DibdfTK_.js";import"./_tslib-BMUU9Vyh.js";import"./link-CVYAeutz.js";import"./index-C_T5wPw3.js";import"./createComponentTemplate-B08h-OOW.js";import"./multiple-story-elements-wrapper-BwWT0vu7.js";import"./createStoryMetaSettingsDecorator-DMY_JaA7.js";import"./iconsMetaData-DNlBVpvD.js";import"./index-CkcRWdy2.js";import"./_tslib-Ct4JumdA.js";import"./Invite-BJsiPZ1j.js";import"./AddSmall-DFewX5rK.js";import"./Workspace-DtDO7RvQ.js";import"./Calendar-NzkLrIBg.js";import"./Table-DaDp-EUK.js";import"./Check-CxyRTNy4.js";import"./CloseSmall-DUYWL2FE.js";import"./Settings-WHGZN_3r.js";import"./Drag-8qsbRXq_.js";import"./DropdownChevronDown-Ck7VmPfy.js";import"./DropdownChevronRight-CtJWrCfY.js";import"./Wand-CS0YeGd1.js";import"./NewTab-CMglqP6P.js";import"./Info-jvFNh0HS.js";import"./NavigationChevronRight-DwBPRKWZ.js";import"./Remove-B_sTt2Ao.js";import"./ThumbsUp-WQ1WzAOd.js";import"./Search-ClaS4_rs.js";import"./SortDescending-DfYW2xR2.js";import"./Upgrade-CC_w3yRG.js";import"./index-B-lxVbXh.js";import"./v4-CtRu48qb.js";import"./Clickable-B9_U6rsC.js";const T=()=>e.jsxs(g,{children:["If the user needs to choose an item from a set of options, use"," ",e.jsx(s,{page:"Components/RadioButton",size:s.sizes.SMALL,children:"Radio button"})," ","or"," ",e.jsx(s,{page:"Components/Checkbox",size:s.sizes.SMALL,children:"Checkboxes"})," ","instead."]});function c(t){const o={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...h(),...t.components},{Canvas:n,PropsTable:m,RelatedComponents:d,StorybookLink:r}=o;return n||a("Canvas"),m||a("PropsTable"),d||a("RelatedComponents"),r||a("StorybookLink"),e.jsxs(e.Fragment,{children:[e.jsx(x,{of:j}),`
`,e.jsx(o.h1,{id:"toggle",children:"Toggle"}),`
`,e.jsx(o.p,{children:"Allow users to turn an single option on or off. They are usually used to activate or deactivate a specific setting."}),`
`,e.jsx(n,{of:f}),`
`,e.jsx(o.h3,{id:"import",children:"Import"}),`
`,e.jsx(o.pre,{children:e.jsx(o.code,{className:"language-js",children:`import { Toggle } from "@vibe/core";
`})}),`
`,e.jsx(o.h2,{id:"props",children:"Props"}),`
`,e.jsx(m,{}),`
`,e.jsx(o.h2,{id:"usage",children:"Usage"}),`
`,e.jsx(l,{guidelines:["Use toggles when your intent is to turn something on or off instantly.","Let users know what happens when the toggle is switched by using a tooltip.",e.jsxs(e.Fragment,{children:["Toggle can either be selected or not selected. They cannot be in an indeterminate state (unlike"," ",e.jsx(r,{page:"Components/Checkbox",children:"checkboxes"}),")."]}),"Use labels such as “on” and “off” or “enable” and “disable” to communicate the state of the toggle."]}),`
`,e.jsx(T,{}),`
`,e.jsx(o.h2,{id:"accessibility",children:"Accessibility"}),`
`,e.jsx(l,{guidelines:[e.jsxs(e.Fragment,{children:["Using an ",e.jsx(o.code,{children:"id"})," is highly recommended for all instances to ensure proper label association."]}),e.jsxs(e.Fragment,{children:["Use ",e.jsx(o.code,{children:"ariaLabel"})," prop when you need to provide additional context for screen readers."]}),e.jsxs(e.Fragment,{children:["Use ",e.jsx(o.code,{children:"ariaLabelledBy"})," prop when an external element provides the accessible name for the toggle."]}),e.jsxs(e.Fragment,{children:["Use ",e.jsx(o.code,{children:"ariaControls"})," prop when the toggle controls other elements on the page."]}),e.jsxs(e.Fragment,{children:["Use ",e.jsx(o.code,{children:"disabled"})," prop appropriately to indicate when toggles are not available for interaction."]})]}),`
`,e.jsx(o.h2,{id:"variants",children:"Variants"}),`
`,e.jsx(o.h3,{id:"states",children:"States"}),`
`,e.jsx(n,{of:u}),`
`,e.jsx(o.h3,{id:"size",children:"Size"}),`
`,e.jsx(o.p,{children:"Toggle appear in 2 sizes: small and medium."}),`
`,e.jsx(n,{of:b}),`
`,e.jsx(o.h3,{id:"disabled",children:"Disabled"}),`
`,e.jsx(n,{of:v}),`
`,e.jsx(o.h2,{id:"dos-and-donts",children:"Do’s and Don’ts"}),`
`,e.jsx(C,{rules:[{positive:{component:e.jsxs(p,{gap:"large",children:["Dark mode ",e.jsx(i,{})]}),description:"Use toggle only for on and off actions. We recommend not to change these lables values."},negative:{component:e.jsxs(p,{gap:"large",children:["Theme ",e.jsx(i,{offOverrideText:"Light mode",onOverrideText:"Dark mode"})]}),description:e.jsxs(e.Fragment,{children:["Don’t use toggle for configurations. Instead, use"," ",e.jsx(r,{page:"Components/Checkbox",children:"Checkboxes"})," or"," ",e.jsx(r,{page:"Components/RadioButton",children:"Radio buttons."})," "]})}},{positive:{component:e.jsx(i,{}),description:"Toggle will always appear with labels"},negative:{component:e.jsxs(p,{direction:"column",gap:"medium",align:"start",children:[e.jsx(i,{offOverrideText:""}),e.jsx(i,{areLabelsHidden:!0})]}),description:"Don’t remove toggle labels, since users would not know what state it represents. "}}]}),`
`,e.jsx(o.h2,{id:"use-cases-and-examples",children:"Use cases and examples"}),`
`,e.jsx(o.h3,{id:"turn-on-off-an-automation",children:"Turn on/ off an automation"}),`
`,e.jsx(o.p,{children:"In the automations center, a user can turn the automation on or off."}),`
`,e.jsx(n,{of:w}),`
`,e.jsx(o.h2,{id:"related-components",children:"Related components"}),`
`,e.jsx(d,{componentsNames:["Checkbox","RadioButton","ButtonGroup"]})]})}function qe(t={}){const{wrapper:o}={...h(),...t.components};return o?e.jsx(o,{...t,children:e.jsx(c,{...t})}):c(t)}function a(t,o){throw new Error("Expected component `"+t+"` to be defined: you likely forgot to import, pass, or provide it.")}export{qe as default};
