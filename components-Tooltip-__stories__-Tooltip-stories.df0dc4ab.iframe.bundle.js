"use strict";(globalThis.webpackChunk_vibe_core=globalThis.webpackChunk_vibe_core||[]).push([[1519],{"./src/components/Tooltip/__stories__/Tooltip.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DefinitionTooltip:()=>DefinitionTooltip,IconTooltip:()=>IconTooltip,ImmediateTooltips:()=>ImmediateTooltips,Overview:()=>Overview,Positions:()=>Positions,TooltipWithImage:()=>TooltipWithImage,TooltipWithTitle:()=>TooltipWithTitle,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("../../node_modules/react/index.js");var _Tooltip__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/Tooltip/Tooltip.tsx"),_vibe_icons__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("../icons/dist/react/Hide.js"),_vibe_icons__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("../icons/dist/react/Subitems.js"),_vibe_icons__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("../icons/dist/react/Menu.js"),_Button_Button__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./src/components/Button/Button.tsx"),_Flex_Flex__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/components/Flex/Flex.tsx"),_IconButton_IconButton__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./src/components/IconButton/IconButton.tsx"),_Tooltip_stories_helpers__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/Tooltip/__stories__/Tooltip.stories.helpers.tsx"),_assets_tooltip_image_png__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/Tooltip/__stories__/assets/tooltip-image.png"),_storybook__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/storybook/functions/createStoryMetaSettingsDecorator.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/jsx-runtime.js");function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var metaSettings=(0,_storybook__WEBPACK_IMPORTED_MODULE_2__.B)({component:_Tooltip__WEBPACK_IMPORTED_MODULE_3__.A,iconPropNamesArray:["icon"]});const __WEBPACK_DEFAULT_EXPORT__={parameters:{storySource:{source:'import React from "react";\nimport Tooltip, { TooltipProps } from "../Tooltip";\nimport { Hide, Menu, Subitems } from "@vibe/icons";\nimport Button from "../../Button/Button";\nimport Flex from "../../Flex/Flex";\nimport IconButton from "../../IconButton/IconButton";\nimport { modifiers } from "./Tooltip.stories.helpers";\nimport image from "./assets/tooltip-image.png";\nimport { createStoryMetaSettingsDecorator } from "../../../storybook";\n\nconst metaSettings = createStoryMetaSettingsDecorator({\n  component: Tooltip,\n  iconPropNamesArray: ["icon"]\n});\n\nexport default {\n  title: "Components/Tooltip",\n  component: Tooltip,\n  argTypes: metaSettings.argTypes,\n  decorators: metaSettings.decorators\n};\n\nexport const Overview = {\n  render: (args: TooltipProps) => (\n    <div style={{ padding: "40px 0 0 50px" }}>\n      <Tooltip\n        {...args}\n        open\n        // The modifier\'s purpose is to prevent the tooltip from being displayed when the user scrolls the story upwards / downwards.\n        // Therefore, there is no need to move this prop in your implementations.\n        modifiers={[\n          {\n            name: "preventOverflow",\n            options: {\n              mainAxis: false\n            }\n          },\n          {\n            name: "flip",\n            options: {\n              // @ts-ignore\n              fallbackPlacements: []\n            }\n          }\n        ]}\n      >\n        <div />\n      </Tooltip>\n    </div>\n  ),\n  name: "Overview",\n  args: {\n    shouldShowOnMount: true,\n    content: "I\'m a tooltip"\n  },\n  parameters: {\n    chromatic: {\n      pauseAnimationAtEnd: true\n    }\n  }\n};\n\nexport const TooltipWithTitle = () => (\n  <div style={{ padding: "30px 0" }}>\n    <Tooltip\n      content="Hidden columns"\n      title="Tooltip title"\n      shouldShowOnMount\n      position="right"\n      // The modifier\'s purpose is to prevent the tooltip from being displayed when the user scrolls the story upwards / downwards.\n      // Therefore, there is no need to move this prop in your implementations.\n      modifiers={[\n        {\n          name: "preventOverflow",\n          options: {\n            mainAxis: false\n          }\n        },\n        {\n          name: "flip",\n          options: {\n            // @ts-ignore\n            fallbackPlacements: []\n          }\n        }\n      ]}\n      open\n    >\n      <div />\n    </Tooltip>\n  </div>\n);\n\nexport const TooltipWithImage = () => (\n  <div style={{ padding: "120px 0" }}>\n    <Tooltip\n      content="Max width tooltip with a long text example"\n      title="Tooltip title"\n      shouldShowOnMount\n      image={image}\n      position="right"\n      modifiers={modifiers}\n      style={{ minHeight: "135px" }}\n      open\n    >\n      <div />\n    </Tooltip>\n  </div>\n);\n\nexport const Positions = {\n  render: () => {\n    // The modifier\'s purpose is to prevent the tooltip from being displayed when the user scrolls the story upwards / downwards.\n    // Therefore, there is no need to move this prop in your implementations.\n    const modifiers = [\n      {\n        name: "preventOverflow",\n        options: {\n          mainAxis: false\n        }\n      },\n      {\n        name: "flip",\n        options: {\n          // @ts-ignore\n          fallbackPlacements: []\n        }\n      }\n    ];\n\n    return (\n      <Flex gap={16}>\n        <div style={{ padding: "0 64px 68px 0", margin: "0 32px" }}>\n          {/* The modifier\'s purpose is to prevent the tipseen from being displayed when the user scrolls the story upwards / downwards.\n         Therefore, there is no need to move this prop in your implementations. */}\n          <Tooltip modifiers={modifiers} content="Top" shouldShowOnMount position="bottom" open>\n            <div />\n          </Tooltip>\n        </div>\n        <div style={{ padding: "50px 0 0 0", margin: "0 32px" }}>\n          <Tooltip modifiers={modifiers} content="Bottom" shouldShowOnMount open>\n            <div />\n          </Tooltip>\n        </div>\n        <div style={{ padding: "0 32px 8px 32px", margin: "0 32px" }}>\n          <Tooltip modifiers={modifiers} content="Left" position="right" shouldShowOnMount open>\n            <div />\n          </Tooltip>\n        </div>\n        <div style={{ padding: "0 64px 8px 64px", margin: "0 64px" }}>\n          <Tooltip modifiers={modifiers} content="Right" position="left" shouldShowOnMount open>\n            <div />\n          </Tooltip>\n        </div>\n      </Flex>\n    );\n  },\n  name: "Positions",\n  parameters: {\n    chromatic: {\n      pauseAnimationAtEnd: true\n    }\n  }\n};\n\nexport const IconTooltip = () => (\n  <Tooltip content="Hidden columns">\n    <IconButton kind="secondary" size="small" icon={Hide} />\n  </Tooltip>\n);\n\nexport const DefinitionTooltip = () => (\n  <Tooltip content="Item name: Bottom sheets">\n    <Button kind="secondary" size="small" leftIcon={Subitems}>\n      Subitem\n    </Button>\n  </Tooltip>\n);\n\nexport const ImmediateTooltips = () => (\n  <Flex gap="small">\n    <Tooltip immediateShowDelay={0} content="I\'m a tooltip">\n      <IconButton icon={Menu} kind="secondary" size="small" />\n    </Tooltip>\n    <Tooltip immediateShowDelay={0} content="I\'m a tooltip">\n      <IconButton icon={Menu} kind="secondary" size="small" />\n    </Tooltip>\n    <Tooltip content="I\'m a tooltip">\n      <IconButton icon={Menu} kind="secondary" size="small" />\n    </Tooltip>\n  </Flex>\n);\n',locationsMap:{overview:{startLoc:{col:24,line:23},endLoc:{col:1,line:61},startBody:{col:24,line:23},endBody:{col:1,line:61}},"tooltip-with-title":{startLoc:{col:32,line:63},endLoc:{col:1,line:92},startBody:{col:32,line:63},endBody:{col:1,line:92}},"tooltip-with-image":{startLoc:{col:32,line:94},endLoc:{col:1,line:109},startBody:{col:32,line:94},endBody:{col:1,line:109}},positions:{startLoc:{col:25,line:111},endLoc:{col:1,line:164},startBody:{col:25,line:111},endBody:{col:1,line:164}},"icon-tooltip":{startLoc:{col:27,line:166},endLoc:{col:1,line:170},startBody:{col:27,line:166},endBody:{col:1,line:170}},"definition-tooltip":{startLoc:{col:33,line:172},endLoc:{col:1,line:178},startBody:{col:33,line:172},endBody:{col:1,line:178}},"immediate-tooltips":{startLoc:{col:33,line:180},endLoc:{col:1,line:192},startBody:{col:33,line:180},endBody:{col:1,line:192}}}}},title:"Components/Tooltip",component:_Tooltip__WEBPACK_IMPORTED_MODULE_3__.A,argTypes:metaSettings.argTypes,decorators:metaSettings.decorators};var Overview={render:function render(args){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{style:{padding:"40px 0 0 50px"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Tooltip__WEBPACK_IMPORTED_MODULE_3__.A,_objectSpread(_objectSpread({},args),{},{open:!0,modifiers:[{name:"preventOverflow",options:{mainAxis:!1}},{name:"flip",options:{fallbackPlacements:[]}}],children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{})}))})},name:"Overview",args:{shouldShowOnMount:!0,content:"I'm a tooltip"},parameters:{chromatic:{pauseAnimationAtEnd:!0}}},TooltipWithTitle=function TooltipWithTitle(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{style:{padding:"30px 0"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Tooltip__WEBPACK_IMPORTED_MODULE_3__.A,{content:"Hidden columns",title:"Tooltip title",shouldShowOnMount:!0,position:"right",modifiers:[{name:"preventOverflow",options:{mainAxis:!1}},{name:"flip",options:{fallbackPlacements:[]}}],open:!0,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{})})})};TooltipWithTitle.displayName="TooltipWithTitle";var TooltipWithImage=function TooltipWithImage(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{style:{padding:"120px 0"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Tooltip__WEBPACK_IMPORTED_MODULE_3__.A,{content:"Max width tooltip with a long text example",title:"Tooltip title",shouldShowOnMount:!0,image:_assets_tooltip_image_png__WEBPACK_IMPORTED_MODULE_4__,position:"right",modifiers:_Tooltip_stories_helpers__WEBPACK_IMPORTED_MODULE_5__.D,style:{minHeight:"135px"},open:!0,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{})})})};TooltipWithImage.displayName="TooltipWithImage";var Positions={render:function render(){var modifiers=[{name:"preventOverflow",options:{mainAxis:!1}},{name:"flip",options:{fallbackPlacements:[]}}];return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_Flex_Flex__WEBPACK_IMPORTED_MODULE_6__.A,{gap:16,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{style:{padding:"0 64px 68px 0",margin:"0 32px"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Tooltip__WEBPACK_IMPORTED_MODULE_3__.A,{modifiers,content:"Top",shouldShowOnMount:!0,position:"bottom",open:!0,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{})})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{style:{padding:"50px 0 0 0",margin:"0 32px"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Tooltip__WEBPACK_IMPORTED_MODULE_3__.A,{modifiers,content:"Bottom",shouldShowOnMount:!0,open:!0,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{})})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{style:{padding:"0 32px 8px 32px",margin:"0 32px"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Tooltip__WEBPACK_IMPORTED_MODULE_3__.A,{modifiers,content:"Left",position:"right",shouldShowOnMount:!0,open:!0,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{})})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{style:{padding:"0 64px 8px 64px",margin:"0 64px"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Tooltip__WEBPACK_IMPORTED_MODULE_3__.A,{modifiers,content:"Right",position:"left",shouldShowOnMount:!0,open:!0,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{})})})]})},name:"Positions",parameters:{chromatic:{pauseAnimationAtEnd:!0}}},IconTooltip=function IconTooltip(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Tooltip__WEBPACK_IMPORTED_MODULE_3__.A,{content:"Hidden columns",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_IconButton_IconButton__WEBPACK_IMPORTED_MODULE_7__.A,{kind:"secondary",size:"small",icon:_vibe_icons__WEBPACK_IMPORTED_MODULE_8__.A})})};IconTooltip.displayName="IconTooltip";var DefinitionTooltip=function DefinitionTooltip(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Tooltip__WEBPACK_IMPORTED_MODULE_3__.A,{content:"Item name: Bottom sheets",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Button_Button__WEBPACK_IMPORTED_MODULE_9__.A,{kind:"secondary",size:"small",leftIcon:_vibe_icons__WEBPACK_IMPORTED_MODULE_10__.A,children:"Subitem"})})};DefinitionTooltip.displayName="DefinitionTooltip";var ImmediateTooltips=function ImmediateTooltips(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_Flex_Flex__WEBPACK_IMPORTED_MODULE_6__.A,{gap:"small",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Tooltip__WEBPACK_IMPORTED_MODULE_3__.A,{immediateShowDelay:0,content:"I'm a tooltip",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_IconButton_IconButton__WEBPACK_IMPORTED_MODULE_7__.A,{icon:_vibe_icons__WEBPACK_IMPORTED_MODULE_11__.A,kind:"secondary",size:"small"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Tooltip__WEBPACK_IMPORTED_MODULE_3__.A,{immediateShowDelay:0,content:"I'm a tooltip",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_IconButton_IconButton__WEBPACK_IMPORTED_MODULE_7__.A,{icon:_vibe_icons__WEBPACK_IMPORTED_MODULE_11__.A,kind:"secondary",size:"small"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Tooltip__WEBPACK_IMPORTED_MODULE_3__.A,{content:"I'm a tooltip",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_IconButton_IconButton__WEBPACK_IMPORTED_MODULE_7__.A,{icon:_vibe_icons__WEBPACK_IMPORTED_MODULE_11__.A,kind:"secondary",size:"small"})})]})};ImmediateTooltips.displayName="ImmediateTooltips",Overview.parameters={...Overview.parameters,docs:{...Overview.parameters?.docs,source:{originalSource:'{\n  render: (args: TooltipProps) => <div style={{\n    padding: "40px 0 0 50px"\n  }}>\n      <Tooltip {...args} open\n    // The modifier\'s purpose is to prevent the tooltip from being displayed when the user scrolls the story upwards / downwards.\n    // Therefore, there is no need to move this prop in your implementations.\n    modifiers={[{\n      name: "preventOverflow",\n      options: {\n        mainAxis: false\n      }\n    }, {\n      name: "flip",\n      options: {\n        // @ts-ignore\n        fallbackPlacements: []\n      }\n    }]}>\n        <div />\n      </Tooltip>\n    </div>,\n  name: "Overview",\n  args: {\n    shouldShowOnMount: true,\n    content: "I\'m a tooltip"\n  },\n  parameters: {\n    chromatic: {\n      pauseAnimationAtEnd: true\n    }\n  }\n}',...Overview.parameters?.docs?.source}}},TooltipWithTitle.parameters={...TooltipWithTitle.parameters,docs:{...TooltipWithTitle.parameters?.docs,source:{originalSource:'() => <div style={{\n  padding: "30px 0"\n}}>\n    <Tooltip content="Hidden columns" title="Tooltip title" shouldShowOnMount position="right"\n  // The modifier\'s purpose is to prevent the tooltip from being displayed when the user scrolls the story upwards / downwards.\n  // Therefore, there is no need to move this prop in your implementations.\n  modifiers={[{\n    name: "preventOverflow",\n    options: {\n      mainAxis: false\n    }\n  }, {\n    name: "flip",\n    options: {\n      // @ts-ignore\n      fallbackPlacements: []\n    }\n  }]} open>\n      <div />\n    </Tooltip>\n  </div>',...TooltipWithTitle.parameters?.docs?.source}}},TooltipWithImage.parameters={...TooltipWithImage.parameters,docs:{...TooltipWithImage.parameters?.docs,source:{originalSource:'() => <div style={{\n  padding: "120px 0"\n}}>\n    <Tooltip content="Max width tooltip with a long text example" title="Tooltip title" shouldShowOnMount image={image} position="right" modifiers={modifiers} style={{\n    minHeight: "135px"\n  }} open>\n      <div />\n    </Tooltip>\n  </div>',...TooltipWithImage.parameters?.docs?.source}}},Positions.parameters={...Positions.parameters,docs:{...Positions.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    // The modifier\'s purpose is to prevent the tooltip from being displayed when the user scrolls the story upwards / downwards.\n    // Therefore, there is no need to move this prop in your implementations.\n    const modifiers = [{\n      name: "preventOverflow",\n      options: {\n        mainAxis: false\n      }\n    }, {\n      name: "flip",\n      options: {\n        // @ts-ignore\n        fallbackPlacements: []\n      }\n    }];\n    return <Flex gap={16}>\n        <div style={{\n        padding: "0 64px 68px 0",\n        margin: "0 32px"\n      }}>\n          {/* The modifier\'s purpose is to prevent the tipseen from being displayed when the user scrolls the story upwards / downwards.\n           Therefore, there is no need to move this prop in your implementations. */}\n          <Tooltip modifiers={modifiers} content="Top" shouldShowOnMount position="bottom" open>\n            <div />\n          </Tooltip>\n        </div>\n        <div style={{\n        padding: "50px 0 0 0",\n        margin: "0 32px"\n      }}>\n          <Tooltip modifiers={modifiers} content="Bottom" shouldShowOnMount open>\n            <div />\n          </Tooltip>\n        </div>\n        <div style={{\n        padding: "0 32px 8px 32px",\n        margin: "0 32px"\n      }}>\n          <Tooltip modifiers={modifiers} content="Left" position="right" shouldShowOnMount open>\n            <div />\n          </Tooltip>\n        </div>\n        <div style={{\n        padding: "0 64px 8px 64px",\n        margin: "0 64px"\n      }}>\n          <Tooltip modifiers={modifiers} content="Right" position="left" shouldShowOnMount open>\n            <div />\n          </Tooltip>\n        </div>\n      </Flex>;\n  },\n  name: "Positions",\n  parameters: {\n    chromatic: {\n      pauseAnimationAtEnd: true\n    }\n  }\n}',...Positions.parameters?.docs?.source}}},IconTooltip.parameters={...IconTooltip.parameters,docs:{...IconTooltip.parameters?.docs,source:{originalSource:'() => <Tooltip content="Hidden columns">\n    <IconButton kind="secondary" size="small" icon={Hide} />\n  </Tooltip>',...IconTooltip.parameters?.docs?.source}}},DefinitionTooltip.parameters={...DefinitionTooltip.parameters,docs:{...DefinitionTooltip.parameters?.docs,source:{originalSource:'() => <Tooltip content="Item name: Bottom sheets">\n    <Button kind="secondary" size="small" leftIcon={Subitems}>\n      Subitem\n    </Button>\n  </Tooltip>',...DefinitionTooltip.parameters?.docs?.source}}},ImmediateTooltips.parameters={...ImmediateTooltips.parameters,docs:{...ImmediateTooltips.parameters?.docs,source:{originalSource:'() => <Flex gap="small">\n    <Tooltip immediateShowDelay={0} content="I\'m a tooltip">\n      <IconButton icon={Menu} kind="secondary" size="small" />\n    </Tooltip>\n    <Tooltip immediateShowDelay={0} content="I\'m a tooltip">\n      <IconButton icon={Menu} kind="secondary" size="small" />\n    </Tooltip>\n    <Tooltip content="I\'m a tooltip">\n      <IconButton icon={Menu} kind="secondary" size="small" />\n    </Tooltip>\n  </Flex>',...ImmediateTooltips.parameters?.docs?.source}}};const __namedExportsOrder=["Overview","TooltipWithTitle","TooltipWithImage","Positions","IconTooltip","DefinitionTooltip","ImmediateTooltips"]},"./src/components/Tooltip/__stories__/Tooltip.stories.helpers.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{D:()=>modifiers,u:()=>TipOtherComponents});__webpack_require__("../../node_modules/react/index.js");var vibe_storybook_components__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../storybook-blocks/dist/src/components/tip/tip.js"),vibe_storybook_components__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../storybook-blocks/dist/src/components/storybook-link/storybook-link.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/jsx-runtime.js"),modifiers=[{name:"preventOverflow",options:{mainAxis:!1}},{name:"flip",options:{fallbackPlacements:[]}}],TipOtherComponents=function TipOtherComponents(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(vibe_storybook_components__WEBPACK_IMPORTED_MODULE_2__.A,{children:["As tooltips only surface from a hover, never include links or buttons in the copy. If your tooltip requires either of these, considers putting your content in a"," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(vibe_storybook_components__WEBPACK_IMPORTED_MODULE_3__.A,{page:"Components/AttentionBox",size:vibe_storybook_components__WEBPACK_IMPORTED_MODULE_3__.A.sizes.SMALL,children:"Attention box"})," ","or"," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(vibe_storybook_components__WEBPACK_IMPORTED_MODULE_3__.A,{page:"Components/Dialog",size:vibe_storybook_components__WEBPACK_IMPORTED_MODULE_3__.A.sizes.SMALL,children:"Dialog."})]})};TipOtherComponents.displayName="TipOtherComponents"},"./src/components/Tooltip/__stories__/assets/tooltip-image.png":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__.p+"static/media/tooltip-image.b2d60a4d.png"}}]);